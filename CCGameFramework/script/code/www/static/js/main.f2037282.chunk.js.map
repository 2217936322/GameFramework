{"version":3,"sources":["store/util.js","store/global-reducer.js","store/player-reducer.js","store/settings-reducer.js","store/init.js","store/store.js","store/global-actions.js","scene/Scene.js","scene/text/convert-speech.js","audio/sfx.js","audio/manager.js","scene/text/TextLine.js","scene/text/SkippableTextLine.js","scene/intro/IntroTextLine.js","scene/intro/IntroOverlay.js","scene/intro/IntroLaptop.js","scene/intro/IntroInput.js","store/player-actions.js","scene/intro/IntroScene.js","scene/normal/UIHealthBar.js","store/settings-actions.js","scene/normal/UIExpBar.js","scene/normal/UIAttrBar.js","scene/normal/util.js","scene/normal/UIStateBar.js","scene/normal/UITaskBar.js","scene/normal/UIPlayerInfo.js","scene/normal/UIMapBar.js","scene/normal/UIAnimalBar.js","scene/normal/UIPeopleBar.js","scene/normal/UIMapInfo.js","scene/normal/UIGoodBar.js","scene/normal/UIGoodInfo.js","scene/normal/UIFightRunBar.js","scene/normal/UIFightBar.js","scene/normal/UIFightInfo.js","scene/normal/UIFightLogInfo.js","scene/normal/NormalScene.js","scene/default/DefaultScene.js","App.js","serviceWorker.js","index.js"],"names":["setValue","state","arguments","length","undefined","changes","Object","objectSpread","global","action","type","payload","player","settings","data","vW","viewportWidth","viewportHeight","viewportMode","scene","name","level","exping","exped","money","blood","useblood","att","def","fightN","fightA","fightL","maping","winN","states","role","roles","roleData","Uplevel","ADD_blood","ADD_time","ADD_att","ADD_def","ADD_life","map","animal","people","goods","i","store","reducer","combineReducers","globalReducer","playerReducer","settingsReducer","window","createStore","devToolsExtension","setGlobalValue","dispatch","Scene","resizeTimeout","_this","this","setViewportModel","getViewportModel","onresize","clearTimeout","setTimeout","windowWidth","innerWidth","windowHeight","innerHeight","width","height","mode","windowHeightInRatioFromWidth","Math","round","viewportModel","vH","setViewportSize","props","frameStyle","position","margin","overflow","fontSize","className","react_default","a","createElement","style","children","React","Component","connect","convertSpeechArrayToTextLineArray","array","userOptions","options","defaultTextColor","delivery","forEach","segment","index","match","parsedDelay","toConsumableArray","concat","color","char","msToNextChar","parseInt","speed","replace","extract","pop","split","sfx","sfx_typeBlip","src","volume","sfx_ring","sfxHowls","keys","Sfx","key","Howl","manager","sfxKey","play","TextLine","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","animFrameStep","revealedIndex","revealNext","Date","now","cancelAnimationFrame","newProps","_this2","isForcedDone","setState","onDone","targetTimestamp","_this3","requestAnimationFrame","step","nextIndex","lineData","audioManager","_this4","string","characterModel","opacity","fontFamily","SkippableTextLine","onClick","handleClick","bind","text_TextLine","IntroTextLine","text_SkippableTextLine","text","onTextComplete","IntroOverlay","isHidden","onTransitionComplete","zIndex","left","right","top","bottom","background","isOpaque","transition","onTransitionEnd","handleTransitionEnd","IntroLaptop","padding","lineHeight","_this$props","paddingTop","paddingLeft","paddingRight","viewportModeStyles","getMobileStyle","getDesktopStyle","backgroundColor","backgroundRepeat","backgroundSize","IntroInput","visible","confirmLoading","errMsg","showModal","input","focus","e","target","value","preventDefault","onNameReceived","message","error","success","handleNameSubmit","_this5","_this$state","suffix","icon","emitEmpty","modal","title","footer","es_button","loading","handleOk","es_alert","showIcon","placeholder","prefix","onChange","onChangeUserName","ref","node","setPlayerValue","IntroScene","isOverlayOpaque","isLaptopLowered","nameFromUser","nameFromUserInput","nextStep","timeout","introText","getIntroText","intro_IntroTextLine","setNextStep","exitIntro","intro_IntroInput","handleNameReceived","contentStyle","getDesktopWrap","IntroOverlay_IntroOverlay","handleOverlayDone","row","justify","align","col","intro_IntroLaptop","renderContent","renderNameModal","UIHealthBar","addID","addBlood","assertThisInitialized","_this$props2","percent","active","info","popover","content","span","progress","showInfo","status","setSettingsValue","UIExpBar","expID","checkUpgrade","Exped","UIAttrBar","goodTypes","id","goodTimes","applyGoodEffect","good","_","min","taskType","randomN","rand","floor","random","UIStateBar","checkingID","checkingTimeout","goodID","obj","goodTimeout","_this$props$states$go","count","all","s","t","size","goodState","list","conv","filter","stateList","UITaskBar","roleList","task","logs","r","completeTask0","checkTask0Info","checkTask0","checkTask","_task$","slicedToArray","num","ani","taskTarget0","taskProgress0","cur","peo","taskProgress","taskTarget","_this$props3","taskInfo0","chain","idx","taskList","UIPlayerInfo","card","userName","normal_UIAttrBar","normal_UIHealthBar","normal_UIExpBar","normal_UIStateBar","normal_UITaskBar","RadioButton","es_radio","Button","RadioGroup","Group","UIMapBar","ids","UIAnimalBar","UIAnimalBar_RadioButton","UIAnimalBar_RadioGroup","UIPeopleBar","hidden","hiddenID","warning","reloading","initTask0","initTask","initTaskData","handleTask","reload","p","onOk","onCancel","handleCancel","okText","cancelText","taskInfo","txt","UIPeopleBar_RadioButton","UIPeopleBar_RadioGroup","talk","getMapName","normal_UIMapBar","normal_UIPeopleBar","normal_UIAnimalBar","UIGoodBar","rec2","rec1","_this$state2","UIGoodBar_RadioButton","disabled","spin","UIGoodBar_RadioGroup","UIGoodInfo","normal_UIGoodBar","UIFightRunBar","enable","showID","UIFightBar","magic","magicID","playerID","animalID","overID","addFightLog","combat","magicCombat","physicalCombat","playerCombat","_this$props4","max","checkCombatFinish","animalCombat","_this$props5","combatOver","_this$props6","exp","push","normal_UIFightRunBar","UIFightInfo","normal_UIFightBar","UIFightLogInfo","timeline","Item","fightColor","fightList","Content","NormalScene","layout","normal_UIPlayerInfo","normal_UIFightLogInfo","UIMapInfo","normal_UIFightInfo","normal_UIGoodInfo","DefaultScene","over","App","scene_Scene","intro_IntroScene","normal_NormalScene","default_DefaultScene","Boolean","location","hostname","RootComponent","es","src_Content","src_App","ReactDOM","render","src_RootComponent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4bACO,SAASA,IAAmC,IAA1BC,EAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC7C,OAAOI,OAAAC,EAAA,EAAAD,CAAA,GAAIL,EAAUI,GCAhB,SAASG,IAA2B,IAApBP,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIO,EAAQP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,OAAQK,EAAOC,MACb,IAAK,mBACH,OAAOV,EAASC,EAAOQ,EAAOE,QAAQN,SAExC,QACE,OAAOJ,GCNN,SAASW,IAA2B,IAApBX,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIO,EAAQP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,OAAQK,EAAOC,MACb,IAAK,mBACH,OAAOV,EAASC,EAAOQ,EAAOE,QAAQN,SAExC,QACE,OAAOJ,GCNN,SAASY,IAA6B,IAApBZ,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIO,EAAQP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQK,EAAOC,MACb,IAAK,qBACH,OAAOV,EAASC,EAAOQ,EAAOE,QAAQN,SAExC,QACE,OAAOJ,GCHE,ICHTa,EAAO,CACXN,OAAQ,CAENO,GAAI,EACJC,cAAe,EACfC,eAAgB,EAEhBC,aAAc,WAEdC,MAAO,UAETP,OAAQ,CACNQ,KAAM,2BACNC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,MAAO,IACPC,SAAU,EACVC,IAAK,EACLC,IAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRC,OAAQ,EACRC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZxB,SAAU,CACRyB,QAAS,IACTC,UAAW,EACXC,SAAU,IACVC,QAAS,EACTC,QAAS,EACTC,SAAU,GACVpB,MAAO,GACPqB,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRX,KAAM,GACNY,MAAO,KAKXjC,EAAKD,SAAS+B,IAAM,CAElB,CAAC,EAAG,eAAM,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,EAAG,IAC9B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,IAC3B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,IAC9B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,IAC3B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,IAC9B,CAAC,EAAG,gBAAO,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,IACpC,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,IAC3B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,IAC9B,CAAC,EAAG,gBAAO,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,IAC3B,CAAC,EAAG,gBAAO,CAAC,EAAG,IAAK,CAAC,GAAI,IACzB,CAAC,GAAI,gBAAO,CAAC,GAAI,CAAC,IAAK,KAGzB9B,EAAKD,SAASgC,OAAS,CAErB,CAAC,eAAM,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,UAChC,CAAC,qBAAO,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,UAClC,CAAC,qBAAO,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,UACnC,CAAC,eAAM,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,UACnC,CAAC,eAAM,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,UACpC,CAAC,oBAAW,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,QAC7C,CAAC,eAAM,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,UACrC,CAAC,eAAM,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,UACtC,CAAC,oBAAW,GAAI,IAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,QACjD,CAAC,eAAM,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,UACvC,CAAC,oBAAW,GAAI,KAAO,IAAK,IAAK,IAAM,IAAM,GAAI,IAAK,SAGxD/B,EAAKD,SAASiC,OAAS,CAErB,CAAC,EAAG,eAAM,2BAAQ,EAAG,oHACrB,CAAC,EAAG,iCAAS,eAAM,EAAG,gGACtB,CAAC,EAAG,iCAAS,eAAM,EAAG,2HAGxBhC,EAAKD,SAASsB,KAAO,CAGnB,CACE,CAAC,EAAG,uCAAU,mGAAoB,qBAAO,qEAAe,CAAC,EAAG,GAAI,iFAAiB,iCAAS,GAAI,IAC9F,CAAC,EAAG,iCAAS,mJAA4B,iCAAS,mDAAY,CAAC,EAAG,IAAK,+DAAc,mDAAY,GAAI,KAEvG,CACE,CAAC,EAAG,uCAAU,iIAAyB,iCAAS,yDAAa,CAAC,EAAG,GAAI,2BAAQ,iCAAS,GAAI,IAC1F,CAAC,EAAG,iCAAS,yJAA6B,qBAAO,6CAAW,CAAC,EAAG,GAAI,iCAAS,uCAAU,GAAI,KAE7F,CACE,CAAC,EAAG,uCAAU,+GAAsB,uCAAU,iCAAS,CAAC,EAAG,GAAI,iCAAS,uCAAU,GAAI,MAI1FrB,EAAKD,SAASkC,MAAQ,CAEpB,CAAC,EAAG,EAAG,uCAAU,EAAG,GAAI,GACxB,CAAC,EAAG,EAAG,wCAAW,GAAI,GAAI,GAC1B,CAAC,EAAG,EAAG,uCAAU,GAAI,GAAI,GACzB,CAAC,EAAG,EAAG,wCAAW,GAAI,GAAI,GAC1B,CAAC,EAAG,EAAG,uCAAU,GAAI,IAAK,IAC1B,CAAC,EAAG,EAAG,wCAAW,GAAI,IAAK,GAC3B,CAAC,EAAG,EAAG,uCAAU,IAAK,GAAI,IAI5B,IAAK,IAAIC,EAAI,EAAGA,GAAKlC,EAAKD,SAASyB,QAASU,IAC1ClC,EAAKD,SAASU,MAAMyB,GAAK,EAAIA,GAAKA,EAAI,IAAMA,EAAI,GAAK,EAGvDlC,EAAKF,OAAOc,SAAWZ,EAAKF,OAAOa,MACnCX,EAAKF,OAAOW,MAAQT,EAAKD,SAASU,MAAMT,EAAKF,OAAOS,OACpDP,EAAKF,OAAOuB,KAAOrB,EAAKD,SAASsB,KAAKS,IAAI,kBAAM,IAChD9B,EAAKF,OAAOwB,MAAQtB,EAAKD,SAASsB,KAAKS,IAAI,kBAAM,IACjD9B,EAAKF,OAAOyB,SAAWvB,EAAKD,SAASsB,KAAKS,IAAI,WAC5C,MAAO,CAAClC,MAAO,KAGjB,IAEeuC,ED5HA,SAAUnC,GACvB,IAAIoC,EAAUC,YAAgB7C,OAAAC,EAAA,EAAAD,CAAA,GACzB8C,EACAC,EACAC,IAeL,MAVsB,kBAAXC,OACDC,YACNN,EACApC,EACAyC,OAAOE,kBAAoBF,OAAOE,yBAAsBrD,GAGlDoD,YAAYN,EAASpC,GC0GnB0C,CAAY1C,GC7HnB,SAAS4C,IAA6B,IAAdrD,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACvC+C,EAAMU,SAAS,CACbjD,KAAM,mBACNC,QAAS,CACPN,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAMD,UCFduD,+LACiB,IAGfC,EAHeC,EAAAC,KACnBA,KAAKC,iBAAiBD,KAAKE,oBAG3BV,OAAOW,SAAW,WAChBC,aAAaN,GACbA,EAAgBO,WAAW,WACzBN,EAAKE,iBAAiBF,EAAKG,qBAC1B,gDAKL,IAAMI,EAAcd,OAAOe,WACrBC,EAAehB,OAAOiB,YAE5B,GAAIH,GAAe,IAGjB,MAAO,CACLI,MAAOJ,EACPK,OAAQH,EACRI,KAAM,YAKV,IAAMC,EAA+BC,KAAKC,MAAoB,IAAdT,GAGhD,OAAIO,EAA+BL,EAE1B,CACLE,MAAOI,KAAKC,MAAqB,GAAfP,EAAsB,GACxCG,OAAQH,EACRI,KAAM,aAKH,CACLF,MAAOJ,EACPK,OAAQE,EACRD,KAAM,sDAIOI,IDxCZ,SAAyBN,EAAOC,GAA2B,IAAnBC,EAAmBzE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,WACpD+C,EAAMU,SAAS,CACbjD,KAAM,mBACNC,QAAS,CACPN,QAAS,CACPU,GAAI8D,KAAKC,MAAML,EAAQ,KACvBO,GAAIH,KAAKC,MAAMJ,EAAS,KACxBxD,aAAcyD,EACd3D,cAAeyD,EACfxD,eAAgByD,MCkCpBO,CAD8BF,EAAvBN,MAAuBM,EAAhBL,OAAgBK,EAARJ,uCAMtB,GAAIZ,KAAKmB,MAAMlE,eAAiB,GAAK+C,KAAKmB,MAAMjE,gBAAkB,EAChE,OAAO,KAGT,IAAMkE,EAAa,CACjBC,SAAU,WACVX,MAAOV,KAAKmB,MAAMlE,cAClB0D,OAAQX,KAAKmB,MAAMjE,eAEnBoE,OAAQ,SACRC,SAAU,SAGVC,SAC8B,aAA5BxB,KAAKmB,MAAMhE,aACS,EAAhB6C,KAAKmB,MAAMnE,GACK,EAAhBgD,KAAKmB,MAAMnE,IAGbyE,EAAY,aAAezB,KAAKmB,MAAMhE,aAE5C,OACEuE,EAAAC,EAAAC,cAAA,OAAKC,MAAOT,EAAYK,UAAWA,GAChCzB,KAAKmB,MAAMW,iBA/EAC,IAAMC,WAqFXC,cAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLnE,GAAId,EAAMO,OAAOO,GACjBiE,GAAI/E,EAAMO,OAAOwE,GACjB9D,aAAcjB,EAAMO,OAAOU,aAC3BF,cAAef,EAAMO,OAAOQ,cAC5BC,eAAgBhB,EAAMO,OAAOS,iBANlB+E,CAQZpC,0CCjGI,SAASqC,EAAkCC,GAAyB,IAAlBC,EAAkBjG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAE/DkG,EAAO9F,OAAAC,EAAA,EAAAD,CAAA,CACX+F,iBAAkB,QACfF,GAGDG,EAAW,GAqDf,OAnDAJ,EAAMK,QAAQ,SAACC,EAASC,GACtB,GAAKD,EAAQE,MAAM,YAqCZ,CACL,IAAMC,EAAcH,EAAQE,MAAM,QAAQ,GAC1CJ,EAAQhG,OAAAsG,EAAA,EAAAtG,CACHgG,GADGO,OAAA,CAEN,CACEC,MAAOV,EAAQC,iBACfU,KAAM,IACNC,aAAcC,SAASN,EAAa,WA5CV,CAC9B,IAAIO,EAAQ,GACRJ,EAAQV,EAAQC,iBAoBpB,GAlBIG,EAAQE,MAAM,qBAChBF,EAAUA,EAAQW,QAAQ,cAAe,IACzCD,EAAQ,IAENV,EAAQE,MAAM,gBAChBF,EAAUA,EAAQW,QAAQ,SAAU,IACpCD,EAAQ,IAENV,EAAQE,MAAM,gBAChBF,EAAUA,EAAQW,QAAQ,SAAU,IACpCD,EAAQ,KAENV,EAAQE,MAAM,iBAChBF,EAAUA,EAAQW,QAAQ,UAAW,IACrCD,EAAQ,KAINV,EAAQE,MAAM,aAAc,CAC9B,IAAIU,EAAUZ,EAAQE,MAAM,YAAYW,MACxCP,EAAQM,EAAQD,QAAQ,SAAU,IAElCX,EAAUA,EAAQW,QAAR,KAAAN,OAAqBO,EAArB,MAAkC,IAG9C,IAAME,EAAQd,EAAQc,MAAM,IAAI1E,IAAI,SAASmE,GAC3C,MAAO,CACLD,MAAOA,EACPC,KAAMA,EACNC,aAAuB,MAATD,EAAeG,EAAQ,KAGzCZ,EAAQhG,OAAAsG,EAAA,EAAAtG,CAAOgG,GAAPO,OAAAvG,OAAAsG,EAAA,EAAAtG,CAAoBgH,OAczBhB,cC5DMiB,EAAA,CACbC,aAAc,CACZC,IAAK,CACH,iBAEFC,OAAQ,KAEVC,SAAU,CACRF,IAAK,CACH,iBAEFC,OAAQ,ICPRE,EAAW,GACftH,OAAOuH,KAAKC,GAAKvB,QAAQ,SAAAwB,GACvBH,EAASG,GAAO,IAAIC,OAAKF,EAAIC,MAGhB,IAAAE,EAAA,SAiDLC,GACNN,EAASM,GAAQC,QCkDNC,cAzGb,SAAAA,EAAYlD,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAqE,IACjBtE,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA8H,GAAAI,KAAAzE,KAAMmB,KACDuD,cAAgB,KACrB3E,EAAK7D,MAAQ,CACXyI,eAAgB,GAJD5E,mFASjBC,KAAK4E,WAAWC,KAAKC,MAAQ,mDAK7BC,qBAAqB/E,KAAK0E,iEAGFM,GAAU,IAAAC,EAAAjF,KAE9BgF,EAASE,eAEXH,qBAAqB/E,KAAK0E,eAG1B1E,KAAKmF,SACH,CACER,cAAe,KAEjB,WAEmC,oBAAtBM,EAAK9D,MAAMiE,QACpBH,EAAK9D,MAAMiE,+CAOVC,GAAiB,IAAAC,EAAAtF,KAyC1BA,KAAK0E,cAAgBa,sBAtCV,SAAPC,IACF,GAAIX,KAAKC,MAAQO,EAEfC,EAAKZ,cAAgBa,sBAAsBC,OACtC,CAGL,IAAMC,EAAYH,EAAKpJ,MAAMyI,cAAgB,EAC7CW,EAAKH,SACH,CACER,cAAec,GAEjB,WAEE,GAAIA,EAAYH,EAAKnE,MAAMuE,SAAStJ,OAAS,EAAG,CAGF,MAAxCkJ,EAAKnE,MAAMuE,SAASD,GAAWzC,MAGjC2C,EAAqB,gBAIvB,IAAM1C,EAAeqC,EAAKnE,MAAMuE,SAASD,GAAWxC,aACpDqC,EAAKV,WAAWC,KAAKC,MAAQ7B,OAGI,oBAAtBqC,EAAKnE,MAAMiE,QACpBE,EAAKnE,MAAMiE,+CAYhB,IAAAQ,EAAA5F,KACD6F,EAAS7F,KAAKmB,MAAMuE,SAAS7G,IAAI,SAACiH,EAAgB7G,GACtD,IAAM4C,EAAQ,CACZkE,QAAS9G,GAAK2G,EAAK1J,MAAMyI,cAAgB,EAAI,EAC7C5B,MAAO+C,EAAe/C,MACtBiD,WAAY,QACZxE,SAAU,QAEZ,OACEE,EAAAC,EAAAC,cAAA,QAAMoC,IAAG,WAAAlB,OAAa7D,GAAK4C,MAAOA,GAC/BiE,EAAe9C,QAKtB,OACEtB,EAAAC,EAAAC,cAAA,YACGiE,UApGc9D,IAAMC,WCgCdiE,cA/Bb,SAAAA,EAAY9E,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAiG,IACjBlG,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA0J,GAAAxB,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXgJ,cAAc,GAHCnF,6EASjBC,KAAKmF,SAAS,CACZD,cAAc,qCAMhB,OACExD,EAAAC,EAAAC,cAAA,QACEsE,QAASlG,KAAKmG,YAAYC,KAAKpG,MAC/B6B,MAAO7B,KAAKmB,MAAMU,OAAS,IAE3BH,EAAAC,EAAAC,cAACyE,EAAD,CACEnB,aAAclF,KAAK9D,MAAMgJ,aACzBQ,SAAU1F,KAAKmB,MAAMuE,SACrBN,OAAQpF,KAAKmB,MAAMiE,iBAzBGrD,IAAMC,WCWvBsE,mLATX,OACE5E,EAAAC,EAAAC,cAAC2E,EAAD,CACEb,SAAU1F,KAAKmB,MAAMqF,KACrBpB,OAAQpF,KAAKmB,MAAMsF,eAAeL,KAAKpG,eALnB+B,IAAMC,WCDb0E,cAEnB,SAAAA,EAAYvF,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAA0G,IACjB3G,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAAmK,GAAAjC,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXyK,UAAU,GAHK5G,qFAOG,IAAAkF,EAAAjF,KAC2B,oBAApCA,KAAKmB,MAAMyF,sBACpB5G,KAAKmF,SAAS,CACZwB,UAAU,GACT,WACD1B,EAAK9D,MAAMyF,0DAQf,GAAI5G,KAAK9D,MAAMyK,SACb,OAAO,KAGT,IAAM9E,EAAQ,CACZR,SAAU,WACVwF,OAAQ,IACRC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,WAAU,uFACVnB,QAAS/F,KAAKmB,MAAMgG,SAAW,EAAI,EACnCC,WAAY,gBAGd,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,EAAOwF,gBAAiBrH,KAAKsH,oBAAoBlB,KAAKpG,eAvC9B+B,IAAMC,WCC1CuF,2LAIF,MAAO,CACL5G,OAAa,GAFFX,KAAKmB,MAAXF,GAGLuG,QAAS,YACTC,WAAY,mDAIE,IAAAC,EACC1H,KAAKmB,MAAfF,EADSyG,EACTzG,GAAIjE,EADK0K,EACL1K,GACX,MAAO,CACL0D,MAAY,GAAL1D,EACP2D,OAAa,GAALM,EACRgG,OAAQ,EACRH,KAAM,EACNa,WAAiB,EAAL3K,EACZ4K,YAAkB,EAAL5K,EACb6K,aAAmB,EAAL7K,EACdwE,SAAU,MACViG,WAAY,0CAIP,IAGDK,EACa,aAHI9H,KAAKmB,MAArBhE,aAID6C,KAAK+H,iBACL/H,KAAKgI,kBAELnG,EAAKtF,OAAAC,EAAA,EAAAD,CAAA,CACT8E,SAAU,WACVwF,OAAQ,EAERoB,gBAAiB,OACjBC,iBAAkB,YAClBC,eAAgB,QACbL,GAGL,OACEpG,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GACT7B,KAAKmB,MAAMW,iBA9CMC,IAAMC,WAoDjBC,cAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLhE,aAAcjB,EAAMO,OAAOU,aAC3B8D,GAAI/E,EAAMO,OAAOwE,GACjBjE,GAAId,EAAMO,OAAOO,KAJNiF,CAOZsF,yGCoDYa,cA7Gb,SAAAA,EAAYjH,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAoI,IACjBrI,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA6L,GAAA3D,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXsK,KAAM,GACN6B,SAAS,EACTC,gBAAgB,EAChBC,OAAQ,IANOxI,oFAUE,IAAAkF,EAAAjF,KACnBK,WAAW,WACT4E,EAAKuD,aACJ,yCAIHxI,KAAKyI,MAAMC,QACX1I,KAAKmF,SAAS,CAACqB,KAAM,8CAGNmC,GACf3I,KAAKmF,SAAS,CAACqB,KAAMmC,EAAEC,OAAOC,4CAI9BlD,EAAqB,YACrB3F,KAAKmF,SAAS,CACZkD,SAAS,6CAIIM,GAAG,IAAArD,EAAAtF,KACd2I,GACFA,EAAEG,iBAIJzI,WAAW,WACTiF,EAAKnE,MAAM4H,eAAezD,EAAKpJ,MAAMsK,OACpC,wCAGM,IAAAZ,EAAA5F,KACFwG,EAAQxG,KAAK9D,MAAbsK,KACP,MAAa,KAATA,GACFwC,EAAA,EAAQC,MAAM,uCACdjJ,KAAKmF,SAAS,CACZoD,OAAQ,0CAIR/B,EAAKpK,OAAS,IAChB4M,EAAA,EAAQC,MAAM,uCACdjJ,KAAKmF,SAAS,CACZoD,OAAQ,+DAIZvI,KAAKmF,SAAS,CACZmD,gBAAgB,SAElBjI,WAAW,WACTuF,EAAKT,SAAS,CACZkD,SAAS,EACTC,gBAAgB,IAElBU,EAAA,EAAQE,QAAQ,kCAChBtD,EAAKuD,iBAAiB1E,KAAKmB,IAC1B,uCAGI,IAAAwD,EAAApJ,KAAAqJ,EACyCrJ,KAAK9D,MAA9CmM,EADAgB,EACAhB,QAASC,EADTe,EACSf,eAAgB9B,EADzB6C,EACyB7C,KAAM+B,EAD/Bc,EAC+Bd,OAChCe,EAAS9C,EAAO9E,EAAAC,EAAAC,cAAA2H,EAAA,GAAM5M,KAAK,eAAeuJ,QAASlG,KAAKwJ,UAAUpD,KAAKpG,QAAW,KACxF,OACE0B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA6H,EAAA,GAAOC,MAAM,2BACNrB,QAASA,EACTC,eAAgBA,EAChBqB,OAAQ,CACNjI,EAAAC,EAAAC,cAAAgI,EAAA,GAAQ5F,IAAI,SAASrH,KAAK,UAAUkN,QAASvB,EAAgBpC,QAASlG,KAAK8J,SAAS1D,KAAKpG,OAAzF,kBAMM,KAAXuI,EACE7G,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAAmI,EAAA,GAAOf,QAAST,EAAQ5L,KAAK,QAAQqN,UAAQ,KAE7C,KAENtI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA6G,EAAA,GACEwB,YAAY,2BACZC,OAAQxI,EAAAC,EAAAC,cAAA2H,EAAA,GAAM5M,KAAK,OAAOkF,MAAO,CAACkB,MAAO,qBACzCuG,OAAQA,EACRT,MAAOrC,EACP2D,SAAUnK,KAAKoK,iBAAiBhE,KAAKpG,MACrCqK,IAAK,SAAAC,GAAI,OAAIlB,EAAKX,MAAQ6B,eArGfvI,IAAMC,WCFxB,SAASuI,IAA6B,IAAdjO,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACvC+C,EAAMU,SAAS,CACbjD,KAAM,mBACNC,QAAS,CACPN,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAMD,UCKdkO,cACJ,SAAAA,EAAYrJ,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAwK,IACjBzK,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAAiO,GAAA/F,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXuO,iBAAiB,EACjBC,iBAAiB,EACjBlF,KAAM,WACNmF,aAAc,IANC5K,mFAUC,IAAAkF,EAAAjF,KAElBK,WAAW,WACT4E,EAAKE,SAAS,CAACsF,iBAAiB,KAC/B,iDAIe,IAAAnF,EAAAtF,KAClBK,WAAW,WAETiF,EAAKH,SAAS,CAACK,KAAM,WACpB,gDAGcoF,GACjB5K,KAAKmF,SAAS,CACZK,KAAM,mBACNmF,aAAcC,IAEhBL,EAAe,CACblN,KAAMuN,wCAKRvK,WAAW,WACTV,EAAe,CAACvC,MAAO,YACtB,4CAIH,MAAO,CACL,qBACA,iBACA,2BACA,qCACA,iBACA,yBACA,0DAKF,MAAgC,aAA5B4C,KAAKmB,MAAMhE,aACN,GAEF,CACLuD,MAAO,OACPY,OAAQ,8CAIAuJ,GAA0B,IAAAjF,EAAA5F,KAAhB8K,EAAgB3O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,IAC9BkE,WAAW,WACTuF,EAAKT,SAAS,CAACK,KAAMqF,KACpBC,2CAKH,GAAwB,UAApB9K,KAAK9D,MAAMsJ,KAAkB,CAC/B,IAAMuF,EAAY7I,EAChBlC,KAAKgL,eACL,CAAC1I,iBAAkB,SAErB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKkL,YAAY9E,KAAKpG,KAAM,YAMlD,GAAwB,WAApBA,KAAK9D,MAAMsJ,MAAyC,YAApBxF,KAAK9D,MAAMsJ,KAAoB,CACjE,IAAMuF,EAAY7I,EAChB,CAAC,oDACD,CAACI,iBAAkB,SAErB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKkL,YAAY9E,KAAKpG,KAAM,UAAW,OAK7D,GAAwB,qBAApBA,KAAK9D,MAAMsJ,KAA6B,CAC1C,IAAMuF,EAAY7I,EAChB,CACE,2BACA,iBACA,iCAHF,mBAAAY,OAIqB9C,KAAK9D,MAAMyO,cAC9B,UAEF,CAACrI,iBAAkB,SAGrB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKkL,YAAY9E,KAAKpG,KAAM,SAKlD,GAAwB,QAApBA,KAAK9D,MAAMsJ,KAAgB,CAC7B,IAAMuF,EAAY7I,EAChB,CACE,oDAEF,CAACI,iBAAkB,SAGrB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKkL,YAAY9E,KAAKpG,KAAM,UAKlD,GAAwB,SAApBA,KAAK9D,MAAMsJ,KAAiB,CAC9B,IAAMuF,EAAY7I,EAChB,CACE,cAEF,CAACI,iBAAkB,SAGrB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKkL,YAAY9E,KAAKpG,KAAM,UASlD,MAJwB,SAApBA,KAAK9D,MAAMsJ,MACbxF,KAAKmL,YAGA,+CAIP,GAAwB,YAApBnL,KAAK9D,MAAMsJ,KACb,OACE9D,EAAAC,EAAAC,cAACwJ,EAAD,CACErC,eAAgB/I,KAAKqL,mBAAmBjF,KAAKpG,MAC7C7C,aAAc6C,KAAKmB,MAAMhE,gDAO/B,IAAM0E,EAAQ,CACZL,SAAsC,aAA5BxB,KAAKmB,MAAMhE,aAA8B,QAAU,SAEzDmO,EAAY/O,OAAAC,EAAA,EAAAD,CAAA,GACbyD,KAAKuL,kBAGV,OACE7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4J,EAAD,CACErE,SAAUnH,KAAK9D,MAAMuO,gBACrB7D,qBAAsB5G,KAAKyL,kBAAkBrF,KAAKpG,QAEpD0B,EAAAC,EAAAC,cAAA8J,EAAA,GAAK/O,KAAK,OAAOgP,QAAQ,eAAeC,MAAM,UAC5ClK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKhK,MAAOA,GACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAOyJ,GAEPtL,KAAK9D,MAAMwO,gBAIR,KAHFhJ,EAAAC,EAAAC,cAACkK,EAAD,KACG9L,KAAK+L,kBAKb/L,KAAKgM,4BAvMOjK,IAAMC,WA+MhBC,cAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLhE,aAAcjB,EAAMO,OAAOU,eAFhB8E,CAIZuI,8DCzNGyB,eAEJ,SAAAA,EAAY9K,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAiM,IACjBlM,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA0P,GAAAxH,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXgQ,MAAO7L,WAAWN,EAAKoM,SAAS/F,KAAd7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAA0BA,EAAKoB,MAAM1C,WAHxCsB,sFAQbC,KAAK9D,MAAMgQ,OAAS,GACtB9L,aAAaJ,KAAK9D,MAAMgQ,0CAGjB,IAAAxE,EACiB1H,KAAKmB,MAAxBzD,EADEgK,EACFhK,MAAOC,EADL+J,EACK/J,SACVA,EAAW,IAEXA,EAAWD,GAASC,EAAWqC,KAAKmB,MAAM3C,UAAYd,EACxD6M,EAAe,CACb5M,SAAUD,IAGZ6M,EAAe,CACb5M,SAAUA,EAAWqC,KAAKmB,MAAM3C,YAGpCwB,KAAKmF,SAAS,CACZ+G,MAAO7L,WAAWL,KAAKmM,SAAS/F,KAAKpG,MAAOA,KAAKmB,MAAM1C,8CAIlD,IAAA4N,EACmBrM,KAAKmB,MAAxBzD,EADA2O,EACA3O,MAAOC,EADP0O,EACO1O,SACR2O,EAAU,IAAM3O,EAAWD,EAC3B6O,EAAS5O,EAAWD,EACpB8O,EAAI,GAAA1J,OAAMnF,EAAN,KAAAmF,OAAkBpF,GAC5B,OACEgE,EAAAC,EAAAC,cAAA6K,GAAA,GAASC,QAASF,EAAM9C,MAAM,gBAC5BhI,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAEPJ,EACE7K,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAASA,EAASO,UAAU,EAAOC,OAAQR,EAAU,GAAK,YAAc,WAElF5K,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAASA,EAASO,UAAU,cAhD5B9K,IAAMC,WAyDjBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLzD,MAAOxB,EAAMW,OAAOa,MACpBC,SAAUzB,EAAMW,OAAOc,SACvBa,UAAWtC,EAAMY,SAAS0B,UAC1BC,SAAUvC,EAAMY,SAAS2B,WALdwD,CAOZgK,ICnEI,SAASc,KAA+B,IAAdzQ,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACzC+C,EAAMU,SAAS,CACbjD,KAAM,qBACNC,QAAS,CACPN,QAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAMD,UCAd0Q,eAEJ,SAAAA,EAAY7L,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAgN,IACjBjN,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAAyQ,GAAAvI,KAAAzE,KAAMmB,KACDjF,MAAQ,CACX+Q,MAAO5M,WAAWN,EAAKmN,aAAa9G,KAAlB7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAA8B,MAHjCA,sFAQbC,KAAK9D,MAAM+Q,OAAS,GACtB7M,aAAaJ,KAAK9D,MAAM+Q,8CAGb,IAAAvF,EAC0E1H,KAAKmB,MAArF5D,EADMmK,EACNnK,OAAQC,EADFkK,EACElK,MAAOX,EADT6K,EACS7K,OAAQ0B,EADjBmJ,EACiBnJ,QAAS4O,EAD1BzF,EAC0ByF,MAAOvO,EADjC8I,EACiC9I,SAAUF,EAD3CgJ,EAC2ChJ,QAASC,EADpD+I,EACoD/I,QAASH,EAD7DkJ,EAC6DlJ,UACtEjB,GAAUC,GAASX,EAAOS,MAAQiB,GAAW1B,EAAOc,SAAW,IAC7Dd,EAAOS,MAAQ,KAAO,GACxByP,GAAiB,CACfvO,UAAWA,EAAY,IAG3B+L,EAAe,CACbjN,MAAOT,EAAOS,MAAQ,EACtBI,MAAOb,EAAOa,MAAQkB,EACtBhB,IAAKf,EAAOe,IAAMc,EAClBb,IAAKhB,EAAOgB,IAAMc,EAClBpB,OAAQA,EAASC,EACjBA,MAAO2P,EAAMtQ,EAAOS,SAEtB0L,EAAA,EAAQE,QAAR,IAAApG,OAAoBjG,EAAOQ,KAA3B,wBAAAyF,OAAuCjG,EAAOS,MAAQ,EAAtD,mBAEF0C,KAAKmF,SAAS,CACZ8H,MAAO5M,WAAWL,KAAKkN,aAAa9G,KAAKpG,MAAO,wCAI3C,IAAAqM,EACiBrM,KAAKmB,MAAtB5D,EADA8O,EACA9O,OAAQC,EADR6O,EACQ7O,MACT8O,EAAU,IAAM/O,EAASC,EACzBgP,EAAI,GAAA1J,OAAMvF,EAAN,KAAAuF,OAAgBtF,GAC1B,OACEkE,EAAAC,EAAAC,cAAA6K,GAAA,GAASC,QAASF,EAAM9C,MAAM,gBAC5BhI,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACTjL,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAASA,EAASO,UAAU,cAhD3B9K,IAAMC,WAwDdC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACL5D,OAAQrB,EAAMW,OAAOU,OACrBC,MAAOtB,EAAMW,OAAOW,MACpBX,OAAQX,EAAMW,OACd0B,QAASrC,EAAMY,SAASyB,QACxB4O,MAAOjR,EAAMY,SAASU,MACtBgB,UAAWtC,EAAMY,SAAS0B,UAC1BI,SAAU1C,EAAMY,SAAS8B,SACzBF,QAASxC,EAAMY,SAAS4B,QACxBC,QAASzC,EAAMY,SAAS6B,UAVbsD,CAYZ+K,ICtEGI,oLAEK,IAAA1F,EAC0B1H,KAAKmB,MAA/B7D,EADAoK,EACApK,MAAOG,EADPiK,EACOjK,MAAOG,EADd8J,EACc9J,IAAKC,EADnB6J,EACmB7J,IAC1B,OACE6D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACRrP,IAGLoE,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAX,IACIlP,IAGNiE,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACR/O,IAGL8D,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACR9O,YAnCWkE,IAAMC,WA2CfC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACL7D,MAAOpB,EAAMW,OAAOS,MACpBG,MAAOvB,EAAMW,OAAOY,MACpBG,IAAK1B,EAAMW,OAAOe,IAClBC,IAAK3B,EAAMW,OAAOgB,MALPoE,CAOZmL,wBCnDI,SAASC,GAAUC,GACxB,OAAQA,GACN,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,eAIX,MAAO,mBAGF,SAASC,GAAUD,GACxB,OAAW,IAAPA,EACK,eACT,GAAAxK,OAAUwK,EAAV,gBAGK,SAASE,GAAgB3Q,EAAQ4Q,GACtB,IAAZA,EAAK,IACPlD,EAAe,CACb5M,SAAU+P,KAAEC,IAAI,CAAC9Q,EAAOa,MAAOb,EAAOc,SAAW8P,EAAK,GAAKA,EAAK,OAK/D,SAASG,GAASN,GACvB,OAAQA,GACN,KAAK,EAAG,MAAO,2BAGjB,MAAO,qBAGF,SAASO,KACd,IAAMC,EAAQhN,KAAKiN,MAAsB,IAAhBjN,KAAKkN,UAC9B,OAAIF,GAAQ,GAAKA,EAAO,GACf,EAELA,GAAQ,IAAMA,EAAO,GAChB,EAELA,GAAQ,IAAMA,EAAO,GAChB,EAELA,GAAQ,IAAMA,GAAQ,GACjB,EAELA,EAAO,IAAMA,GAAQ,GAChB,QADT,MC5CIG,eAEJ,SAAAA,EAAY9M,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAiO,IACjBlO,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA0R,GAAAxJ,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXgS,WAAY7N,WAAWN,EAAKoO,gBAAgB/H,KAArB7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAAiC,KACxDqO,QAAS,GAJMrO,sFASbC,KAAK9D,MAAMkS,QAAU,GACvBhO,aAAaJ,KAAK9D,MAAMkS,QACtBpO,KAAK9D,MAAMgS,YAAc,GAC3B9N,aAAaJ,KAAK9D,MAAMgS,sDAItBlO,KAAKmB,MAAMtE,OAAOc,SAAW,IACD,MAA1BqC,KAAKmB,MAAMhD,OAAOsP,MAA8C,MAA9BzN,KAAKmB,MAAMhD,OAAOsP,KAAKY,MAAsC,IAAvBrO,KAAK9D,MAAMkS,QACrFpO,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKsO,YAAYlI,KAAKpG,MAAO,OAGpDA,KAAKmF,SAAS,CACZ+I,WAAY7N,WAAWL,KAAKmO,gBAAgB/H,KAAKpG,MAAO,8CAKhD,IAAAuO,EACcvO,KAAKmB,MAAMhD,OAAOsP,KAArCe,EADKD,EACLC,MAAOC,EADFF,EACEE,IAAKJ,EADPE,EACOF,IACfG,EAAQ,MAAQ,GAClBhB,GAAgBxN,KAAKmB,MAAMtE,OAAQwR,GACrC9D,EAAe,CACbpM,OAAQ,CACNsP,KAAM,CACJY,IAAKA,EACLG,MAAOA,EAAQ,GACfC,IAAKA,MAIPD,EAAQ,IAAMC,EAChBzO,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKsO,YAAYlI,KAAKpG,MAAO,QAGlDA,KAAKmF,SAAS,CACZiJ,QAAS,IAEX7D,EAAe,CACbpM,OAAQ,CACNsP,KAAM,2CAMJH,EAAIoB,GACZ,IAAMjB,EAAOiB,EAAEL,IACTM,EAAItB,GAAUI,EAAK,IACnBnB,EAAU,IAAMoC,EAAEF,MAAQE,EAAED,IAC5BjC,EACJ9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAAgL,GAAA,GAAUgC,KAAK,QAAQtC,QAASA,EAAS5L,MAAO,GAAImM,UAAU,MACzGnL,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKgC,EAAhB,iBAC5BjN,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKc,EAAK,KACjD/L,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKY,GAAUE,EAAK,IAA/B,eAAsCA,EAAK,GAAIkB,KAG/E,OACEjN,EAAAC,EAAAC,cAAA6K,GAAA,GAASzI,IAAG,SAAAlB,OAAWwK,GAAMZ,QAASF,EAAM9C,MAAK,oBAAA5G,OAAY2K,EAAK,GAAjB,MAC/C/L,EAAAC,EAAAC,cAAAgI,EAAA,GAAQgF,KAAM,SACXnB,EAAK,kCAMTH,GAAI,IAEDoB,EADW1O,KAAKmB,MAAfhD,OACUmP,GACjB,GAAU,OAANoB,EACF,OAAO,KACT,OAAQpB,GACN,IAAK,OACH,OAAOtN,KAAK6O,UAAUvB,EAAIoB,GAI9B,OAAO,yCAGG,IACHvQ,EAAU6B,KAAKmB,MAAfhD,OACD2Q,EAAOpB,KAAE5J,KAAK3F,GAAQU,IAAImB,KAAK+O,KAAK3I,KAAKpG,OAAOgP,OAAO,SAACrN,GAAD,OAAa,OAANA,IACpE,OAAoB,IAAhBmN,EAAK1S,OACA,SACF0S,mCAIP,OACEpN,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACR3M,KAAKiP,qBA7GSlN,IAAMC,WAoHhBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLtE,OAAQX,EAAMW,OACdsB,OAAQjC,EAAMW,OAAOsB,SAHV8D,CAKZgM,aCzHGiB,eAEJ,SAAAA,EAAY/N,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAkP,IACjBnP,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA2S,GAAAzK,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXgS,WAAY7N,WAAWN,EAAKoO,gBAAgB/H,KAArB7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAAiC,MAHzCA,sFAQbC,KAAK9D,MAAMgS,YAAc,GAC3B9N,aAAaJ,KAAK9D,MAAMgS,kDAGdZ,GAAI,IAAA5F,EACuC1H,KAAKmB,MAArDgO,EADSzH,EACTyH,SAAUtS,EADD6K,EACC7K,OAAQuB,EADTsJ,EACStJ,KAAMC,EADfqJ,EACerJ,MAAOZ,EADtBiK,EACsBjK,MAAOF,EAD7BmK,EAC6BnK,OAGvC6R,EAFID,EAAS7B,GACPzQ,EAAOwB,MAAMiP,IAEnB+B,EAAO,KAAAvM,OACPjG,EAAOQ,KADA,wBAAAyF,OACYsM,EAAK,GADjB,2BAAAtM,OAEPjG,EAAOQ,KAFA,yBAAAyF,OAEasM,EAAK,GAFlB,wBAAAtM,OAE4BsM,EAAK,GAFjC,wBAIbpG,EAAA,EAAQE,QAAQmG,EAAK,IACrBrG,EAAA,EAAQE,QAAQmG,EAAK,IACrBjR,EAAKkP,IAAM,EACXjP,EAAMiP,KACN/C,EAAe,CACb9M,MAAOA,EAAQ2R,EAAK,GACpB7R,OAAQA,EAAS6R,EAAK,GACtBhR,KAAMA,EACNC,MAAOA,2CAII+Q,GAAM,IACZ9B,EAAa8B,EAAb9B,GAAIkB,EAASY,EAATZ,MACJlQ,EAAY0B,KAAKmB,MAAjB7C,SACP,IAAK,IAAIW,KAAKX,EAAU,CACtB,IAAMgR,EAAIhR,EAASW,GACnB,GAAe,IAAXqQ,EAAE3S,MAAc2S,EAAEhC,KAAOA,IAC3BhP,EAASW,GAAGuP,MAAQA,EAAQc,EAAEd,MAC1BlQ,EAASW,GAAGuP,OAASc,EAAEb,KAGzB,OAFAnQ,EAASW,GAAK,CAACtC,MAAO,QACtBqD,KAAKuP,cAActQ,GAKzBsL,EAAe,CACbjM,SAAUA,yCAID,IACJJ,EAAQ8B,KAAKmB,MAAbjD,KACHA,EAAK9B,OAAS,IAChBsR,KAAExP,GAAMsE,QAAQxC,KAAKwP,eAAepJ,KAAKpG,OACzCK,WAAW,kBAAMkK,EAAe,CAC9BrM,KAAM,MACJ,wCAKN8B,KAAKyP,uDAIDzP,KAAKmB,MAAMtE,OAAOc,SAAW,IAC/BqC,KAAK0P,YACL1P,KAAKmF,SAAS,CACZ+I,WAAY7N,WAAWL,KAAKmO,gBAAgB/H,KAAKpG,MAAO,4CAKlDoP,GAAM,IAAAO,EAAApT,OAAAqT,GAAA,EAAArT,CACE6S,EAAK,GADP,GACT9B,EADSqC,EAAA,GACLE,EADKF,EAAA,GAEVG,EAAM9P,KAAKmB,MAAMrC,OAAOwO,GAC9B,sBAAAxK,OAAa+M,EAAb,YAAA/M,OAAsBgN,EAAI,GAA1B,wCAGSV,GACT,OAAQA,EAAK,IACX,KAAK,EACH,OAAOpP,KAAK+P,YAAYX,GAI5B,MAAO,6DAGKhR,EAAMgR,GAAM,IACjBX,EAAcrQ,EAAdqQ,IAAKD,EAASpQ,EAAToQ,MACZ,OAAO1N,KAAKiN,MAAM,IAAMS,EAAQC,wCAGrBrQ,EAAMgR,GACjB,OAAQA,EAAK,IACX,KAAK,EACH,OAAOpP,KAAKgQ,cAAc5R,EAAMgR,GAIpC,MAAO,2DAGC9B,EAAI2C,EAAKb,GAAM,IAAA/C,EACIrM,KAAKmB,MAAzBpC,EADgBsN,EAChBtN,OAAQT,EADQ+N,EACR/N,SACT4R,EAAMnR,EAAOuO,GACbhB,EAAUtM,KAAKmQ,aAAa7R,EAASgP,GAAK8B,GAC1C5C,EACJ9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAA,SAAIsO,EAAI,GAAR,MAAeA,EAAI,MAC9DxO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAA,SAAIgM,GAASwB,EAAK,OAC7D1N,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAA,SAAI5B,KAAKoQ,WAAWhB,MAC/D1N,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAA,cAASwN,EAAK,GAAd,iBAA2B1N,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAQwN,EAAK,GAAb,mBAC3E1N,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAAgL,GAAA,GAAUjQ,KAAK,SAASiS,KAAK,QAAQtC,QAASA,EAAS5L,MAAO,QAG7G,OACEgB,EAAAC,EAAAC,cAAA6K,GAAA,GAASzI,IAAG,SAAAlB,OAAWwK,EAAX,KAAAxK,OAAiBmN,GAAOvD,QAASF,EAAM9C,MAAK,oBAAA5G,OAAYsM,EAAK,GAAjB,MACtD1N,EAAAC,EAAAC,cAAAgI,EAAA,GAAQgF,KAAM,SACXQ,EAAK,kCAMT9B,GAAI,IAAA+C,EACoBrQ,KAAKmB,MAAzBgO,EADAkB,EACAlB,SAAUtS,EADVwT,EACUxT,OACXyS,EAAIH,EAAS7B,GACb2C,EAAMpT,EAAOwB,MAAMiP,GACnB8B,EAAOE,EAAEW,GACf,OAAQb,EAAK,IACX,KAAK,EACH,OAAOpP,KAAKsQ,UAAUhD,EAAI2C,EAAKb,GAInC,MAAO,wDAGE,IACFhR,EAAQ4B,KAAKmB,MAAb/C,KACD0Q,EAAOpB,KAAE6C,MAAMnS,GAClBS,IAAI,SAAC8C,EAAG6O,GAAJ,MAAY,CAAC7O,EAAG6O,KACpBxB,OAAO,SAACrN,GAAD,OAAOA,EAAE,KAChB9C,IAAI,SAAC8C,GAAD,OAAOA,EAAE,KACb9C,IAAImB,KAAK+O,KAAK3I,KAAKpG,OACnB6I,QACH,OAAoB,IAAhBiG,EAAK1S,OACA,SACF0S,mCAIP,OACEpN,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IACR3M,KAAKyQ,oBApKQ1O,IAAMC,WA2KfC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLtE,OAAQX,EAAMW,OACdY,MAAOvB,EAAMW,OAAOY,MACpBF,OAAQrB,EAAMW,OAAOU,OACrBW,KAAMhC,EAAMW,OAAOqB,KACnBE,KAAMlC,EAAMW,OAAOuB,KACnBC,MAAOnC,EAAMW,OAAOwB,MACpBC,SAAUpC,EAAMW,OAAOyB,SACvB6Q,SAAUjT,EAAMY,SAASsB,KACzBW,OAAQ7C,EAAMY,SAASiC,OACvBD,OAAQ5C,EAAMY,SAASgC,SAXZmD,CAaZiN,ICtLGwB,oLAGF,OACEhP,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAA+O,EAAA,GACEjH,MAAK,gCAAA5G,OAAc9C,KAAKmB,MAAMyP,SAAzB,KACL/O,MAAO,CAAClB,OAAQ,UAEhBe,EAAAC,EAAAC,cAACiP,GAAD,MACAnP,EAAAC,EAAAC,cAACkP,GAAD,MACApP,EAAAC,EAAAC,cAACmP,GAAD,MACArP,EAAAC,EAAAC,cAACoP,GAAD,MACAtP,EAAAC,EAAAC,cAACqP,GAAD,eAbiBlP,IAAMC,WAoBlBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLyP,SAAU1U,EAAMW,OAAOQ,OAFZ4E,CAIZyO,qBC3BGQ,GAAcC,GAAA,EAAMC,OACpBC,GAAaF,GAAA,EAAMG,MAEnBC,oLAEK5I,GACP4B,EAAe,CACbtM,OAAQ0K,EAAEC,OAAOC,yCAIZ,IAAAnB,EACe1H,KAAKmB,MAApBlD,EADAyJ,EACAzJ,OAAQY,EADR6I,EACQ7I,IACT2S,EAAM9D,KAAE7O,EAAIZ,GAAQ,IAAIY,IAAI,SAACyO,GACjC,OAAO5L,EAAAC,EAAAC,cAACsP,GAAD,CAAalN,IAAG,OAAAlB,OAASwK,GAAMzE,MAAOyE,GAAKzO,EAAIyO,GAAI,MACzDzE,QACH,OACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,OACEnK,EAAAC,EAAAC,cAACyP,GAAD,CAAYlH,SAAUnK,KAAKmK,SAAS/D,KAAKpG,OACtCwR,aArBQzP,IAAMC,WA8BdC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLlD,OAAQ/B,EAAMW,OAAOoB,OACrBY,IAAK3C,EAAMY,SAAS+B,MAHToD,CAKZsP,ICtCGL,GAAcC,GAAA,EAAMC,OACpBC,GAAaF,GAAA,EAAMG,MAEnBG,oLAEK9I,GAEP4B,EAAe,CACbzM,QAAQ,EACRC,OAHS4K,EAAEC,OAAOC,qCAOjByE,GAAI,IAEDwC,EADW9P,KAAKmB,MAAfrC,OACYwO,GACnB,OACE5L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,GAApB,UAA0BA,EAAI,GAA9B,WAC5BpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,GAApB,SAAyBA,EAAI,GAA7B,mDAIzB,IAAA/P,EAAAC,KAAA0H,EACuB1H,KAAKmB,MAA5BlD,EADAyJ,EACAzJ,OAAQY,EADR6I,EACQ7I,IAAKC,EADb4I,EACa5I,OACpB,GAA8B,IAA1BD,EAAIZ,GAAQ,GAAG7B,OACjB,OAAO,KACT,IAAMoV,EAAM9D,KAAE7O,EAAIZ,GAAQ,IAAIY,IAAI,SAACyO,GACjC,IAAMwC,EAAMhR,EAAOwO,GACnB,OACE5L,EAAAC,EAAAC,cAAA6K,GAAA,GAASzI,IAAG,UAAAlB,OAAYwK,GAAMZ,QAAS3M,EAAKyM,KAAKc,GAAK5D,MAAK,+BAAA5G,OAAagN,EAAI,GAAjB,MACzDpO,EAAAC,EAAAC,cAAC8P,GAAD,CAAa7I,MAAOyE,GAAKwC,EAAI,OAGhCjH,QACH,OACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,OACEnK,EAAAC,EAAAC,cAAC+P,GAAD,CAAYxH,SAAUnK,KAAKmK,SAAS/D,KAAKpG,OACtCwR,aA7CWzP,IAAMC,WAsDjBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLlD,OAAQ/B,EAAMW,OAAOoB,OACrBY,IAAK3C,EAAMY,SAAS+B,IACpBC,OAAQ5C,EAAMY,SAASgC,SAJZmD,CAMZwP,IC9DGP,GAAcC,GAAA,EAAMC,OACpBC,GAAaF,GAAA,EAAMG,MAEnBM,eAEJ,SAAAA,EAAYzQ,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAA4R,IACjB7R,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAAqV,GAAAnN,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXoR,IAAK,EACLuE,QAAQ,EACRrD,MAAO,EACPsD,UAAW,GANI/R,sFAWbC,KAAK9D,MAAM4V,UAAY,GACzB1R,aAAaJ,KAAK9D,MAAM4V,2CAGnBnJ,GACP,IAAM2E,EAAK3E,EAAEC,OAAOC,MAEpB,GADe7I,KAAKmB,MAAMtE,OAAnBuB,KACEkP,GAEP,OADAtE,EAAA,EAAQC,MAAM,gEACP,KAET,IAAMqG,EAAItP,KAAKmB,MAAM/C,KAAKkP,GAE1B,GADYtN,KAAKmB,MAAMtE,OAAOwB,MAAMiP,IACzBgC,EAAElT,OAEX,OADA4M,EAAA,EAAQ+I,QAAQ,oDACT,KAET/R,KAAKmF,SAAS,CACZmI,GAAIA,EACJjF,SAAS,wCAKPrI,KAAK9D,MAAMsS,MAAQ,IACrBxO,KAAKmF,SAAS,CACZqJ,MAAOxO,KAAK9D,MAAMsS,MAAQ,GAC1BqD,QAAQ,EACRC,SAAUzR,WAAWL,KAAKgS,UAAU5L,KAAKpG,MAAO,OAGlDA,KAAKmF,SAAS,CACZ0M,QAAQ,EACRrD,MAAO,EACPsD,UAAW,qCAMf9R,KAAKmF,SAAS,CACZ0M,QAAQ,EACRC,SAAUzR,WAAWL,KAAKgS,UAAU5L,KAAKpG,MAAO,yCAI1CoP,GACR,MAAO,CACLzS,KAAM,EACN2Q,GAAI8B,EAAK,GAAG,GACZX,IAAKW,EAAK,GAAG,GACbZ,MAAO,oCAIFlB,EAAI8B,GACX,OAAQA,EAAK,IACX,KAAK,EAAG,OAAOpP,KAAKiS,UAAU7C,GAGhC,OAAO,0CAGI9B,EAAI8B,GAAM,IACd9Q,EAAY0B,KAAKmB,MAAjB7C,SAEP,OADAA,EAASgP,GAAMtN,KAAKkS,SAAS5E,EAAI8B,GAC1B9Q,uCAGI,IACJgP,EAAMtN,KAAK9D,MAAXoR,GAGD8B,EAFIpP,KAAKmB,MAAM/C,KAAKkP,GACdtN,KAAKmB,MAAMtE,OAAOwB,MAAMiP,IAE9BlP,EAAO4B,KAAKmB,MAAMtE,OAAOuB,KAC/BA,EAAKkP,IAAM,EACX/C,EAAe,CACbnM,KAAMA,EACNE,SAAU0B,KAAKmS,aAAa7E,EAAI8B,wCAKlCpP,KAAKoS,aACLpS,KAAKmF,SAAS,CACZkD,SAAS,IAEXrI,KAAKqS,gDAILrS,KAAKmF,SAAS,CACZmI,IAAK,EACLjF,SAAS,IAEXrI,KAAKqS,2CAGGjD,GAAM,IAAAO,EAAApT,OAAAqT,GAAA,EAAArT,CACI6S,EAAK,GADT,GACP9B,EADOqC,EAAA,GACHE,EADGF,EAAA,GAERG,EAAM9P,KAAKmB,MAAMrC,OAAOwO,GAC9B,sBAAAxK,OAAa+M,EAAb,YAAA/M,OAAsBgN,EAAI,GAA1B,sCAGOV,GACP,OAAQA,EAAK,IACX,KAAK,EAAG,OAAOpP,KAAKsQ,UAAUlB,GAGhC,MAAO,oDAIP,GAAIpP,KAAK9D,MAAMoR,IAAM,EAAG,KAAA5F,EACS1H,KAAKmB,MAA7B/C,EADesJ,EACftJ,KAAMW,EADS2I,EACT3I,OAAQlC,EADC6K,EACD7K,OACfyS,EAAIlR,EAAK4B,KAAK9D,MAAMoR,IACpBgF,EAAIvT,EAAOiB,KAAK9D,MAAMoR,IACtB2C,EAAMpT,EAAOwB,MAAM2B,KAAK9D,MAAMoR,IACpC,GAAI2C,GAAOX,EAAElT,OAEX,OADA4M,EAAA,EAAQ+I,QAAQ,oDACT,KAET,IAAM3C,EAAOE,EAAEW,GACf,OACEvO,EAAAC,EAAAC,cAAA6H,EAAA,GAAOC,MAAK,UAAA5G,OAAOwP,EAAE,GAAT,OAAAxP,OAAiBwP,EAAE,GAAnB,uCAAAxP,OAAkCsM,EAAK,GAAvC,MACL/G,QAASrI,KAAK9D,MAAMmM,QACpBkK,KAAMvS,KAAK8J,SAAS1D,KAAKpG,MACzBwS,SAAUxS,KAAKyS,aAAarM,KAAKpG,MACjC0S,OAAQtD,EAAK,GACbuD,WAAYvD,EAAK,IACtB1N,EAAAC,EAAAC,cAAA,SACGwN,EAAK,IAER1N,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0CACOF,EAAAC,EAAAC,cAAA,SAAIgM,GAASwB,EAAK,MAEzB1N,EAAAC,EAAAC,cAAA,0CACOF,EAAAC,EAAAC,cAAA,SAAI5B,KAAK4S,SAASxD,KAEzB1N,EAAAC,EAAAC,cAAA,0CACOF,EAAAC,EAAAC,cAAA,cAASwN,EAAK,GAAd,iBADP,SACmC1N,EAAAC,EAAAC,cAAA,aAAQwN,EAAK,GAAb,mBAIzC,OAAO,kCAGJ9B,EAAIuF,GACP,OAAOnF,KAAEmF,EAAItP,MAAM,OAAO1E,IAAI,SAAC8C,EAAG6O,GAAJ,OAAY9O,EAAAC,EAAAC,cAAA,KAAGoC,IAAG,UAAAlB,OAAYwK,EAAZ,KAAAxK,OAAkB0N,IAAQ7O,KAAQkH,yCAG3E,IAAA5D,EAAAjF,KAAAqM,EACuBrM,KAAKmB,MAA5BlD,EADAoO,EACApO,OAAQY,EADRwN,EACQxN,IAAKE,EADbsN,EACatN,OACpB,GAA8B,IAA1BF,EAAIZ,GAAQ,GAAG7B,OACjB,OAAO,KACT,IAAMoV,EAAM9D,KAAE7O,EAAIZ,GAAQ,IAAIY,IAAI,SAACyO,GACjC,IAAM4C,EAAMnR,EAAOuO,GACnB,OACE5L,EAAAC,EAAAC,cAAA6K,GAAA,GAASzI,IAAG,UAAAlB,OAAYwK,GAAMZ,QAASzH,EAAK8J,KAAKzB,EAAI4C,EAAI,IAAKxG,MAAK,IAAA5G,OAAMoN,EAAI,GAAV,SAAApN,OAAoBoN,EAAI,GAAxB,MACjExO,EAAAC,EAAAC,cAACkR,GAAD,CAAajK,MAAOyE,GAAK4C,EAAI,OAGhCrH,QACH,OACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,aAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,OAEI7L,KAAK9D,MAAM2V,OAASnQ,EAAAC,EAAAC,cAAA8J,EAAA,OAChBhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,yBAGAjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAAStM,KAAK9D,MAAMsS,MACpB1B,OAAO,SACPD,UAAU,MAKxBnL,EAAAC,EAAAC,cAACmR,GAAD,CAAY5I,SAAUnK,KAAKmK,SAAS/D,KAAKpG,OACtCwR,KAKVxR,KAAKgT,eA9MYjR,IAAMC,WAoNjBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLlD,OAAQ/B,EAAMW,OAAOoB,OACrBpB,OAAQX,EAAMW,OACdyB,SAAUpC,EAAMW,OAAOyB,SACvBO,IAAK3C,EAAMY,SAAS+B,IACpBT,KAAMlC,EAAMY,SAASsB,KACrBU,OAAQ5C,EAAMY,SAASgC,OACvBC,OAAQ7C,EAAMY,SAASiC,SARZkD,CAUZ2P,ICjOGlB,wLAES,IAAAhJ,EACW1H,KAAKmB,MAApBlD,EADIyJ,EACJzJ,OACP,OAFWyJ,EACI7I,IACJZ,GAAQ,oCAInB,OACEyD,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAA+O,EAAA,GACEjH,MAAK,gCAAA5G,OAAc9C,KAAKiT,aAAnB,KACLpR,MAAO,CAAClB,OAAQ,UAEhBe,EAAAC,EAAAC,cAACsR,GAAD,MACAxR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuR,GAAD,MACAzR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwR,GAAD,eAlBiBrR,IAAMC,WAyBlBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLlD,OAAQ/B,EAAMW,OAAOoB,OACrBY,IAAK3C,EAAMY,SAAS+B,MAHToD,CAKZyO,uBC9BGQ,GAAcC,GAAA,EAAMC,OACpBC,GAAaF,GAAA,EAAMG,MAEnB+B,eAEJ,SAAAA,EAAYlS,GAAO,IAAApB,EAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAqT,GAAA,IAEV5F,GADP1N,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA8W,GAAA5O,KAAAzE,KAAMmB,KACcA,MAAMtE,OAAOsB,OAA1BsP,KACP,GAAY,MAARA,EAAc,CAChB,GAAgB,MAAZA,EAAKY,IACP,OAAA9R,OAAAgI,EAAA,EAAAhI,CAAAwD,GAFc,IAITsO,EAAmBZ,EAAnBY,IAAKG,EAAcf,EAAde,MAAOC,EAAOhB,EAAPgB,IACnB1O,EAAK7D,MAAQ,CACXmS,IAAKA,EACLG,MAAOA,EACPC,IAAKA,EACLL,OAAQ/N,WAAWN,EAAKuT,KAAKlN,KAAV7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAAsB,WAG3CA,EAAK7D,MAAQ,CACX2V,QAAQ,EACRxD,IAAK,KACLG,MAAO,EACPC,IAAK,IACLL,QAAS,GApBI,OAAArO,sFA0BbC,KAAK9D,MAAMkS,QAAU,GACvBhO,aAAaJ,KAAK9D,MAAMkS,uCAGrB,IAAA/E,EACgBrJ,KAAK9D,MAAnBsS,EADFnF,EACEmF,MAAOC,EADTpF,EACSoF,IACdzO,KAAKmF,SAAS,CACZqJ,MAAOA,EAAQ,KAEbA,GAASC,EACXzO,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKuT,KAAKnN,KAAKpG,MAAO,OAG3CA,KAAKmF,SAAS,CACZ0M,QAAQ,EACRrD,MAAO,EACPC,IAAK,qCAKJ,IAAA+E,EACgBxT,KAAK9D,MAAnBsS,EADFgF,EACEhF,MAAOC,EADT+E,EACS/E,IACdzO,KAAKmF,SAAS,CACZqJ,MAAOA,EAAQ,KAEbA,EAAQ,IAAMC,GAAOzO,KAAKmB,MAAMtE,OAAOc,SAAW,EACpDqC,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKsT,KAAKlN,KAAKpG,MAAO,OAG3CA,KAAKmF,SAAS,CACZ0M,QAAQ,EACRrD,MAAO,EACPC,IAAK,uCAKF9F,GAAG,IAAAjB,EACa1H,KAAKmB,MAArB1D,EADGiK,EACHjK,MAEDgQ,EAHI/F,EACI1I,MACH2J,EAAEC,OAAOC,OAEpB7I,KAAKmF,SAAS,CACZ0M,QAAQ,IAENpU,EAAQgQ,EAAK,KAEjBlD,EAAe,CACb9M,MAAOA,EAAQgQ,EAAK,KAEtBzE,EAAA,EAAQE,QAAR,gBAAApG,OAAsB2K,EAAK,GAA3B,wBACgB,IAAZA,EAAK,IACPzN,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKuT,KAAKnN,KAAKpG,MAAO,OAE3CwN,GAAgBxN,KAAKmB,MAAMtE,OAAQ4Q,GACnCzE,EAAA,EAAQE,QAAR,GAAApG,OAAmBuK,GAAUI,EAAK,IAAlC,gBAAA3K,OAA0C2K,EAAK,GAA/C,aAEAzN,KAAKmF,SAAS,CACZqJ,MAAO,EACPC,IAAK,IAAMhB,EAAK,KAElBlD,EAAe,CACbpM,OAAQ,CACNsP,KAAM,CACJY,IAAKZ,EACLe,MAAO,EACPC,IAAK,IAAMhB,EAAK,OAItBzN,KAAKmF,SAAS,CACZiJ,OAAQ/N,WAAWL,KAAKsT,KAAKlN,KAAKpG,MAAO,sCAK1CyN,GACH,IAAMkB,EAAItB,GAAUI,EAAK,IACzB,OACE/L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKgC,EAAhB,iBAC5BjN,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKc,EAAK,KACjD/L,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKY,GAAUE,EAAK,IAA/B,eAAsCA,EAAK,GAAIkB,sCAIxE,IAAA1J,EAAAjF,KAAAqM,EACgBrM,KAAKmB,MAArB1D,EADA4O,EACA5O,MAAOuB,EADPqN,EACOrN,MACd,GAAqB,IAAjBA,EAAM5C,OACR,OAAO,KACT,IAAMoV,EAAM9D,KAAE1O,GAAOH,IAAI,SAAC4O,GACxB,IAAMH,EAAKG,EAAK,GAChB,OACEhQ,EAAQgQ,EAAK,GACX/L,EAAAC,EAAAC,cAAC6R,GAAD,CAAazP,IAAG,QAAAlB,OAAUwK,GAAMoG,UAAU,EAAM7K,MAAOyE,GAAKG,EAAK,IAEjE/L,EAAAC,EAAAC,cAAA6K,GAAA,GAASzI,IAAG,QAAAlB,OAAUwK,GAAMZ,QAASzH,EAAK8J,KAAKtB,GAAO/D,MAAK,gCAAA5G,OAAc2K,EAAK,GAAnB,MACzD/L,EAAAC,EAAAC,cAAC6R,GAAD,CAAa5K,MAAOyE,GAAKG,EAAK,OAGnC5E,QACH,OAAI7I,KAAK9D,MAAM2V,OACNnQ,EAAAC,EAAAC,cAAA8J,EAAA,OACLhK,EAAAC,EAAAC,cAAAiK,EAAA,OACEnK,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAAS,IAAMtM,KAAK9D,MAAMsS,MAAQxO,KAAK9D,MAAMuS,IAC7C3B,OAAO,SACPD,UAAU,KAEtBnL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAAiK,EAAA,OACEnK,EAAAC,EAAAC,cAAA+R,GAAA,QADF,gCAMFjS,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAAAiK,EAAA,OACEnK,EAAAC,EAAAC,cAACgS,GAAD,CAAYzJ,SAAUnK,KAAKmK,SAAS/D,KAAKpG,OACtCwR,YArJWzP,IAAMC,WA6JfC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLtE,OAAQX,EAAMW,OACdY,MAAOvB,EAAMW,OAAOY,MACpBuB,MAAO9C,EAAMY,SAASkC,QAJXiD,CAMZoR,ICxKGQ,oLAGF,OACEnS,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAA+O,EAAA,GACEjH,MAAM,eACN7H,MAAO,CAAClB,OAAQ,UAEhBe,EAAAC,EAAAC,cAACkS,GAAD,eATe/R,IAAMC,WAgBhBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,IADMc,CAGZ4R,IClBGE,eAEJ,SAAAA,EAAY5S,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAA+T,IACjBhU,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAAwX,GAAAtP,KAAAzE,KAAMmB,KACDjF,MAAQ,CACX8X,QAAQ,EACRC,QAAS,GAJMlU,sFASbC,KAAK9D,MAAM+X,QACb7T,aAAaJ,KAAK9D,MAAM+X,yCAI1BjU,KAAKmF,SAAS,CACZ6O,QAAQ,EACRC,QAAS,sCVgCR,IAAc3G,EU3BZtN,KAAK9D,MAAM8X,SV2BC1G,EUzBR,EAAIO,KV0B2B,IAAnC/M,KAAKiN,MAAMjN,KAAKkN,SAAWV,IUzB9BtE,EAAA,EAAQE,QAAQ,kCAChBqB,EAAe,CACbzM,QAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRE,KAAM,OAGR8K,EAAA,EAAQC,MAAM,kCACdjJ,KAAKmF,SAAS,CACZ6O,QAAQ,EACRC,OAAQ5T,WAAWL,KAAKqS,OAAOjM,KAAKpG,MAAO,0CAM/C,OACE0B,EAAAC,EAAAC,cAAAgI,EAAA,GAAQjN,KAAK,UAAUkN,SAAU7J,KAAK9D,MAAM8X,OAAQ9N,QAASlG,KAAKkG,QAAQE,KAAKpG,OAA/E,uBA5CsB+B,IAAMC,WAmDnBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,IADMc,CAEZ8R,ICnDGG,eAEJ,SAAAA,EAAY/S,GAAO,IAAApB,EAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAkU,GAAA,IAAAxM,GACjB3H,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA2X,GAAAzP,KAAAzE,KAAMmB,KACwBA,MAAvBtE,EAFU6K,EAEV7K,OACDiT,EAHWpI,EAEF5I,OACIjC,EAAOkB,QAHT,OAIjBgC,EAAK7D,MAAQ,CACX4T,IAAKA,EACLpS,MAAOoS,EAAI,GACXqE,MAAOrE,EAAI,GACXsE,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,QAAS,GAEXxU,EAAKyU,YAAY,EAAjB,IAAA1R,OAAwBjG,EAAOQ,KAA/B,YAAAyF,OAAyCgN,EAAI,GAA7C,oCACAzP,WAAWN,EAAK0U,OAAOrO,KAAZ7J,OAAA6P,GAAA,EAAA7P,QAAA6P,GAAA,EAAA7P,CAAAwD,KAAwB,KAdlBA,sFAiBI,IAAAsJ,EACyBrJ,KAAK9D,MAA5CkY,EADc/K,EACd+K,QAASC,EADKhL,EACLgL,SAAUC,EADLjL,EACKiL,SAAUC,EADflL,EACekL,OAChCH,GAAW,GACbhU,aAAagU,GACXC,GAAY,GACdjU,aAAaiU,GACXC,GAAY,GACdlU,aAAakU,GACXC,GAAU,GACZnU,aAAamU,oCAGR,IAAAlI,EACkBrM,KAAKmB,MAAvBtE,EADAwP,EACAxP,OACDiT,EAFCzD,EACQvN,OACIjC,EAAOkB,QAC1BiC,KAAKwU,YAAY,EAAjB,IAAA1R,OACMjG,EAAOQ,KADb,iBAAAyF,OACuBgN,EAAI,GAD3B,6BAAAhN,OACqCgN,EAAI,GADzC,KAAAhN,OAC+CgN,EAAI,GAAKA,EAAI,GAD5D,yCAEA9P,KAAKmF,SAAS,CACZiP,QAAS/T,WAAWL,KAAK0U,YAAYtO,KAAKpG,MAAO,OAEnDK,WAAWL,KAAK2U,eAAevO,KAAKpG,MAAO,yCAG/B,IAAAqQ,EACarQ,KAAKmB,MAAvBtE,EADKwT,EACLxT,OACDiT,EAFMO,EACGvR,OACIjC,EAAOkB,QAC1B,GAAIiC,KAAK9D,MAAMiY,MAAQ,EAAG,CACxB,GAAItX,EAAOc,UAAYmS,EAAI,GACzB,OACFvF,EAAe,CACb5M,SAAUd,EAAOc,SAAWmS,EAAI,KAElC9P,KAAKwU,YAAY,EAAjB,IAAA1R,OACMjG,EAAOQ,KADb,kBAAAyF,OACwBgN,EAAI,GAD5B,KAAAhN,OACkCgN,EAAI,GADtC,yCAEA9P,KAAKmF,SAAS,CACZgP,MAAOnU,KAAK9D,MAAMiY,MAAQ,EAC1BC,QAAS/T,WAAWL,KAAK0U,YAAYtO,KAAKpG,MAAO,iDAMrDA,KAAKmF,SAAS,CACZkP,SAAUhU,WAAWL,KAAK4U,aAAaxO,KAAKpG,MAAO,8CAIxC,IAAA6U,EACY7U,KAAKmB,MAAvBtE,EADMgY,EACNhY,OACDiT,EAFO+E,EACE/V,OACIjC,EAAOkB,QACpBH,EAAM8P,KAAEoH,IAAI,CAAC,EAAGjY,EAAOe,IAAMiQ,KAAYiC,EAAI,KAC/ClS,EAAM,EACRoC,KAAKwU,YAAY,EAAjB,IAAA1R,OACMgN,EAAI,GADV,kBAAAhN,OACmBjG,EAAOQ,KAD1B,KAAAyF,OACkClF,EADlC,yCAGAoC,KAAKwU,YAAY,EAAjB,IAAA1R,OACMgN,EAAI,GADV,oCAAAhN,OACsBjG,EAAOQ,KAD7B,8BAEF2C,KAAKmF,SAAS,CACZzH,MAAOsC,KAAK9D,MAAMwB,MAAQE,IAExBf,EAAOc,SAAW,IAAMqC,KAAK+U,qBAC/B/U,KAAKmF,SAAS,CACZmP,SAAUjU,WAAWL,KAAKgV,aAAa5O,KAAKpG,MAAO,8CAI1C,IAAAiV,EACYjV,KAAKmB,MAAvBtE,EADMoY,EACNpY,OACDiT,EAFOmF,EACEnW,OACIjC,EAAOkB,QACpBH,EAAM8P,KAAEoH,IAAI,CAAC,EAAGhF,EAAI,GAAKjC,KAAYhR,EAAOgB,MAC9CD,EAAM,EACRoC,KAAKwU,YAAY,EAAjB,IAAA1R,OACMjG,EAAOQ,KADb,kBAAAyF,OACwBgN,EAAI,GAD5B,KAAAhN,OACkClF,EADlC,yCAGAoC,KAAKwU,YAAY,EAAjB,IAAA1R,OACMjG,EAAOQ,KADb,oCAAAyF,OAC2BgN,EAAI,GAD/B,8BAEFvF,EAAe,CACb5M,SAAUd,EAAOc,SAAWC,IAE1Bf,EAAOc,SAAWC,GACpBoC,KAAKmF,SAAS,CACZkP,SAAUhU,WAAWL,KAAK4U,aAAaxO,KAAKpG,MAAO,mDAKvD,OAAIA,KAAK9D,MAAMwB,MAAQ,IACrB2C,WAAWL,KAAKkV,WAAW9O,KAAKpG,MAAO,MAChC,wCAKE,IAAAmV,EACoBnV,KAAKmB,MAA7BtE,EADIsY,EACJtY,OAAQiC,EADJqW,EACIrW,OAAQZ,EADZiX,EACYjX,KACjB4R,EAAMhR,EAAOjC,EAAOkB,QACpBN,EAAQqS,EAAI,GAAKhP,KAAKiN,MAAMF,KAAY,GACxCuH,EAAMtF,EAAI,GAAKhP,KAAKiN,MAAMF,KAAY,GACtCwB,EAAO,KAAAvM,OACPjG,EAAOQ,KADA,wBAAAyF,OACYgN,EAAI,GADhB,eAAAhN,OAEPjG,EAAOQ,KAFA,yBAAAyF,OAEarF,EAFb,wBAAAqF,OAE0BsS,EAF1B,wBAIbpV,KAAKwU,YAAY,EAAGnF,EAAK,IACzBrG,EAAA,EAAQE,QAAQmG,EAAK,IACrBrP,KAAKwU,YAAY,EAAGnF,EAAK,IACzBrG,EAAA,EAAQE,QAAQmG,EAAK,IACrBnR,EAAKmX,KAAK,CACR/H,GAAIzQ,EAAOkB,OACXyQ,MAAO,IAETjE,EAAe,CACbrM,KAAMA,EACNT,MAAOZ,EAAOY,MAAQA,EACtBF,OAAQV,EAAOU,OAAS6X,IAE1BpV,KAAKmF,SAAS,CACZoP,OAAQlU,WAAW,WACjBkK,EAAe,CACbzM,QAAQ,EACRC,OAAQ,EACRC,OAAQ,MAET,2CAIKsP,EAAIuF,GAAK,IAEf7U,EADagC,KAAKmB,MAAftE,OACamB,QAAU,GAC1BA,EAAO5B,OAAS,GAClB4B,EAAOsF,MAETiH,EAAe,CACbvM,OAAM,CAAG,CAACsP,EAAIuF,IAAR/P,OAAAvG,OAAAsG,EAAA,EAAAtG,CAAiByB,uCAIlB,IAAAwV,EACcxT,KAAK9D,MAAnB4T,EADA0D,EACA1D,IACDxD,EAAU,IAFTkH,EACK9V,MACkBoS,EAAI,GAClC,OACEpO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,GAApB,UAA0BA,EAAI,GAA9B,WAC5BpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAX,IAAiBmD,EAAI,KACjDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAIjL,EAAAC,EAAAC,cAAAgL,GAAA,GAAUN,QAASA,EAASO,UAAU,MACjFnL,EAAAC,EAAAC,cAAA8J,EAAA,OAAKhK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GAAX,sBAAuBjL,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,IAAKmD,EAAI,KAChDpO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0T,GAAD,cAxKiBvT,IAAMC,WA8KhBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLtE,OAAQX,EAAMW,OACdiC,OAAQ5C,EAAMY,SAASgC,OACvBZ,KAAMhC,EAAMW,OAAOqB,OAJR+D,CAMZiS,ICvLGqB,oLAEK,IAAA7N,EACkB1H,KAAKmB,MAAvBpD,EADA2J,EACA3J,OACD+R,EAFCpI,EACQ5I,OACIf,GACnB,OACE2D,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAA+O,EAAA,GACEjH,MAAK,gCAAA5G,OAAcgN,EAAI,GAAlB,KACLjO,MAAO,CAAClB,OAAQ,UAEhBe,EAAAC,EAAAC,cAAC4T,GAAD,eAXgBzT,IAAMC,WAkBjBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLpD,OAAQ7B,EAAMW,OAAOkB,OACrBe,OAAQ5C,EAAMY,SAASgC,SAHZmD,CAKZsT,sBCvBGE,sLAEOnI,GACT,OAAQA,GACN,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,MAIX,MAAO,2CAGG,IAAAvN,EAAAC,KACHhC,EAAUgC,KAAKmB,MAAfnD,OACP,OAAO0P,KAAE6C,MAAMvS,GAAQa,IAAI,SAAC8C,EAAG6O,GAAJ,OACzB9O,EAAAC,EAAAC,cAAA8T,GAAA,EAAUC,KAAV,CAAe3R,IAAG,SAAAlB,OAAW0N,GAAOzN,MAAOhD,EAAK6V,WAAWjU,EAAE,KAC1DA,EAAE,MAELkH,yCAIF,OACEnH,EAAAC,EAAAC,cAAAiK,EAAA,GAAKc,KAAM,GACTjL,EAAAC,EAAAC,cAAA+O,EAAA,GACEjH,MAAK,2BACL7H,MAAO,CAAClB,OAAQ,UAEhBe,EAAAC,EAAAC,cAAA8T,GAAA,OACG1V,KAAK6V,sBAjCW9T,IAAMC,WAyCpBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLnD,OAAQ9B,EAAMW,OAAOmB,SAFViE,CAIZwT,ICzCIK,eAEDC,oLAGF,OACErU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAoU,EAAA,OACEtU,EAAAC,EAAAC,cAACkU,GAAD,CAASjU,MAAO,CAAC2F,QAAS,SACxB9F,EAAAC,EAAAC,cAAA8J,EAAA,OACEhK,EAAAC,EAAAC,cAACqU,GAAD,MAEEjW,KAAKmB,MAAMrD,OAAS4D,EAAAC,EAAAC,cAACsU,GAAD,MAAoBxU,EAAAC,EAAAC,cAACuU,GAAD,MAGxCnW,KAAKmB,MAAMrD,OAAS4D,EAAAC,EAAAC,cAACwU,GAAD,MAAiB1U,EAAAC,EAAAC,cAACyU,GAAD,iBAb3BtU,IAAMC,WAuBjBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLrD,OAAQ5B,EAAMW,OAAOiB,SAFVmE,CAIZ8T,IC3BGO,eAEJ,SAAAA,EAAYnV,GAAO,IAAApB,EAAA,OAAAxD,OAAA+H,EAAA,EAAA/H,CAAAyD,KAAAsW,IACjBvW,EAAAxD,OAAAgI,EAAA,EAAAhI,CAAAyD,KAAAzD,OAAAiI,EAAA,EAAAjI,CAAA+Z,GAAA7R,KAAAzE,KAAMmB,KACDjF,MAAQ,CACXuO,iBAAiB,EACjBC,iBAAiB,EACjBlF,KAAM,WAER7F,EAAe,CACbvC,MAAO,YARQ2C,mFAYC,IAAAkF,EAAAjF,KAElBK,WAAW,WACT4E,EAAKE,SAAS,CAACsF,iBAAiB,KAC/B,iDAGe,IAAAnF,EAAAtF,KAClBK,WAAW,WAETiF,EAAKH,SAAS,CAACK,KAAM,WACpB,oCAIH,IAAM1I,EAAWkD,KAAKmB,MAAMrE,SACtBe,EAAM,CACVR,KAAM,2BACNC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,MAAO,IACPC,SAAU,IACVC,IAAK,EACLC,IAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRC,OAAQ,EACRC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZT,EAAIF,SAAWE,EAAIH,MACnBG,EAAIL,MAAQV,EAASU,MAAMK,EAAIP,OAC/BO,EAAIO,KAAOtB,EAASsB,KAAKS,IAAI,kBAAM,IACnChB,EAAIQ,MAAQvB,EAASsB,KAAKS,IAAI,kBAAM,IACpChB,EAAIS,SAAWxB,EAASsB,KAAKS,IAAI,WAC/B,MAAO,CAAClC,MAAO,KAEjB4N,EAAe1M,GACfkP,GAAiB,CACfvO,UAAW,IAEbmB,EAAe,CACbvC,MAAO,mDAKT,GAAwB,UAApB4C,KAAK9D,MAAMsJ,KAAkB,CAC/B,IAAMuF,EAAY7I,EAChB,CACE,wCACA,oBACA,iBAEF,CAACI,iBAAkB,SAGrB,OACEZ,EAAAC,EAAAC,cAACqJ,EAAD,CACEjH,IAAI,IACJwC,KAAMuE,EACNtE,eAAgBzG,KAAKuW,KAAKnQ,KAAKpG,QAKrC,OAAO,8CAIP,MAAgC,aAA5BA,KAAKmB,MAAMhE,aACN,GAEF,CACLuD,MAAO,OACPY,OAAQ,2CAKV,IAAMO,EAAQ,CACZL,SAAsC,aAA5BxB,KAAKmB,MAAMhE,aAA8B,QAAU,SAEzDmO,EAAY/O,OAAAC,EAAA,EAAAD,CAAA,GACbyD,KAAKuL,kBAGV,OACE7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4J,EAAD,CACErE,SAAUnH,KAAK9D,MAAMuO,gBACrB7D,qBAAsB5G,KAAKyL,kBAAkBrF,KAAKpG,QAEpD0B,EAAAC,EAAAC,cAAA8J,EAAA,GAAK/O,KAAK,OAAOgP,QAAQ,eAAeC,MAAM,UAC5ClK,EAAAC,EAAAC,cAAAiK,EAAA,GAAKhK,MAAOA,GACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAOyJ,GAEPtL,KAAK9D,MAAMwO,gBAIR,KAHFhJ,EAAAC,EAAAC,cAACkK,EAAD,KACG9L,KAAK+L,4BAvHChK,IAAMC,WAmIlBC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLtE,OAAQX,EAAMW,OACdC,SAAUZ,EAAMY,SAChBK,aAAcjB,EAAMO,OAAOU,eAJhB8E,CAMZqU,IC7IGE,oLAGF,MAAyB,UAArBxW,KAAKmB,MAAM/D,MAEXsE,EAAAC,EAAAC,cAAC6U,EAAD,KACE/U,EAAAC,EAAAC,cAAC8U,EAAD,OAKmB,WAArB1W,KAAKmB,MAAM/D,OAAsB4C,KAAKmB,MAAMxD,SAAW,EAEvD+D,EAAAC,EAAAC,cAAC6U,EAAD,KACE/U,EAAAC,EAAAC,cAAC+U,GAAD,OAKJjV,EAAAC,EAAAC,cAAC6U,EAAD,KACE/U,EAAAC,EAAAC,cAACgV,GAAD,cApBU5U,aA0BHC,eAAQ,SAAC/F,EAAOiF,GAC7B,MAAO,CACLxD,SAAUzB,EAAMW,OAAOc,SACvBP,MAAOlB,EAAMO,OAAOW,QAHT6E,CAKZuU,IC1BiBK,QACW,cAA7BrX,OAAOsX,SAASC,UAEe,UAA7BvX,OAAOsX,SAASC,UAEhBvX,OAAOsX,SAASC,SAASpU,MACvB,+DCVCmT,eAGDkB,oLAEF,OACEtV,EAAAC,EAAAC,cAACqV,EAAA,EAAD,CAAU/X,MAAOc,KAAKmB,MAAMjC,OAC1BwC,EAAAC,EAAAC,cAAAoU,EAAA,OACEtU,EAAAC,EAAAC,cAACsV,GAAD,KACExV,EAAAC,EAAAC,cAACuV,GAAD,gBANgBpV,IAAMC,WAclCoV,IAASC,OACP3V,EAAAC,EAAAC,cAAC0V,GAAD,CAAepY,MAAOA,IACtBqY,SAASC,eAAe,SDsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f2037282.chunk.js","sourcesContent":["/* Use this when editing a simple value on the top level of the store node */\r\nexport function setValue(state = {}, changes = {}) {\r\n  return {...state, ...changes};\r\n}\r\n\r\n/* Use this when editing one node in a list of nodes */\r\nexport function editNode(state = {}, key = \"\", changes = {}) {\r\n  var updated = {...state}; //copy state for updates\r\n  var node = updated[key];\r\n\r\n  if (node) {\r\n    /* Don't deep compare if target node is undefined */\r\n    for (var change in changes) {\r\n      /* Merge deep objects together rather than replace. Just replace Arrays */\r\n      if (typeof changes[change] === \"object\") {\r\n        if (!Array.isArray(changes[change])) {\r\n          changes[change] = {...node[change], ...changes[change]};\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  node = {...node, ...changes};\r\n  updated[key] = node;\r\n\r\n  return updated;\r\n}\r\n\r\nexport function removeNode(state = {}, key = \"\") {\r\n  var updated = {...state}; //copy state for removing\r\n  if (updated[key]) {\r\n    delete updated[key];\r\n  }\r\n  return updated;\r\n}\r\n","import {setValue} from \"./util\";\r\n\r\nexport function global(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_GLOBAL_VALUE\":\r\n      return setValue(state, action.payload.changes);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {setValue} from \"./util\";\r\n\r\nexport function player(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_PLAYER_VALUE\":\r\n      return setValue(state, action.payload.changes);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {setValue} from \"./util\";\r\n\r\nexport function settings(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_SETTINGS_VALUE\":\r\n      return setValue(state, action.payload.changes);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {createStore, combineReducers} from \"redux\";\r\nimport * as globalReducer from \"./global-reducer\";\r\nimport * as playerReducer from \"./player-reducer\";\r\nimport * as settingsReducer from \"./settings-reducer\";\r\n\r\nexport default function (data) {\r\n  let reducer = combineReducers({\r\n    ...globalReducer,\r\n    ...playerReducer,\r\n    ...settingsReducer,\r\n    //...anotherReducer,\r\n  });\r\n\r\n  let store;\r\n  if (typeof window === \"object\") {\r\n    store = createStore(\r\n      reducer,\r\n      data,\r\n      window.devToolsExtension ? window.devToolsExtension() : undefined\r\n    );\r\n  } else {\r\n    store = createStore(reducer, data);\r\n  }\r\n\r\n  return store;\r\n}\r\n","import createStore from \"./init\";\r\n\r\nconst data = {\r\n  global: {\r\n    //Viewport stuff\r\n    vW: 0,\r\n    viewportWidth: 0,\r\n    viewportHeight: 0,\r\n    //viewportMode: Desktop/Mobile layout. Automatically set by GameFrame.js\r\n    viewportMode: \"portrait\", //\"portrait\" or \"landscape\"\r\n\r\n    scene: \"normal\",\r\n  },\r\n  player: {\r\n    name: \"匿名玩家\",   //名字\r\n    level: 1,           //等级\r\n    exping: 0,          //当前经验\r\n    exped: 0,           //当前经验上限\r\n    money: 0,           //金钱\r\n    blood: 100,         //生命值上限\r\n    useblood: 0,        //生命值\r\n    att: 6,             //攻击\r\n    def: 6,             //防御\r\n    fightN: false,      //是否战斗状态\r\n    fightA: 0,          //怪物战斗编号\r\n    fightL: [],         //战斗情况\r\n    maping: 0,          //当前地图,\r\n    winN: [],           //杀死怪物列表\r\n    states: {},         //状态\r\n    role: [],           //任务\r\n    roles: [],          //任务进度\r\n    roleData: [],       //任务数据\r\n  },\r\n  settings: {\r\n    Uplevel: 100,       //等级上限\r\n    ADD_blood: 1,       //每秒加生命\r\n    ADD_time: 1000,     //恢复时间(毫秒)\r\n    ADD_att: 3,         //每升一级加攻击\r\n    ADD_def: 3,         //每升一级加防御\r\n    ADD_life: 15,       //每升一级加体力\r\n    exped: [],          //经验集合\r\n    map: [],            //地图集合\r\n    animal: [],         //怪物集合 animal无s\r\n    people: [],         //人物集合\r\n    role: [],           //任务集合 核心\r\n    goods: [],          //物品集合\r\n  }\r\n};\r\n\r\n// 暂时这样表示，后续会用alasql和graphql操作\r\ndata.settings.map = [\r\n  //编号，名称，通往其他地图，怪物编号，人物编号\r\n  [0, \"村庄\", [1, 2], [0], [0, 1, 2]],\r\n  [1, \"树林1\", [0, 3], [0, 1], []],\r\n  [2, \"草丛1\", [0, 4], [0, 1, 2], []],\r\n  [3, \"树林2\", [1, 5], [2, 4], []],\r\n  [4, \"草丛2\", [2, 6], [2, 3, 4], []],\r\n  [5, \"森林1\", [6, 3, 7], [3, 5, 4, 6], []],\r\n  [6, \"草丛3\", [4, 5], [3, 5], []],\r\n  [7, \"森林2\", [5, 8], [6, 7, 8], []],\r\n  [8, \"森林3\", [7, 9], [7, 8], []],\r\n  [9, \"火山1\", [8, 10], [9], []],\r\n  [10, \"火山2\", [9], [10], []],\r\n];\r\n\r\ndata.settings.animal = [\r\n  //名称，级，体，攻，防，金，经，N秒，－N滴血\r\n  [\"白兔\", 1, 28, 7, 5, 2, 5, 3, 2, \"草\"],\r\n  [\"小黄狗\", 2, 35, 11, 9, 5, 3, 5, 2, \"土\"],\r\n  [\"小花蛇\", 3, 42, 14, 12, 9, 6, 3, 5, \"草\"],\r\n  [\"野猫\", 4, 52, 18, 20, 12, 9, 4, 6, \"土\"],\r\n  [\"毒蛇\", 6, 78, 25, 27, 18, 14, 5, 8, \"土\"],\r\n  [\"BOSS-鼠王\", 5, 250, 50, 48, 120, 30, 10, 10, \"BOSS\"],\r\n  [\"灰鸟\", 8, 102, 32, 34, 28, 20, 8, 9, \"飞\"],\r\n  [\"白狼\", 9, 141, 40, 35, 39, 28, 10, 9, \"爪\"],\r\n  [\"BOSS-猎豹\", 10, 2000, 100, 100, 300, 50, 20, 20, \"BOSS\"],\r\n  [\"火鸡\", 11, 182, 45, 40, 43, 34, 15, 5, \"土\"],\r\n  [\"BOSS-烈焰\", 15, 12000, 500, 500, 5000, 5000, 60, 300, \"BOSS\"],\r\n];\r\n\r\ndata.settings.people = [\r\n  //编号……所属地图号，常用语言\r\n  [0, \"村长\", \"罗克先生\", 0, \"我是村长我最大，\\n我的地盘我做主。\\n……\"],\r\n  [1, \"村长的儿子\", \"摩西\", 0, \"……真无聊。\\n你能和我一起玩吗？\"],\r\n  [2, \"摩西的玩伴\", \"纳斯\", 0, \"摩西，和我玩吧。\\n你干嘛不理我？\\n呜呜……\"],\r\n];\r\n\r\ndata.settings.role = [\r\n  // 任务类型，任务名称，任务内容，确定内容，拒绝内容，[所抓怪物ID，怪物数量]，完成内容，回复内容，加金钱，加经验\r\n  // 类型：0=怪物\r\n  [\r\n    [0, \"帮村长抓白兔\", \"我很饿，麻烦你帮我抓三只白兔来。\", \"好吧。\", \"请你找别人吧，我很忙。\", [0, 3], \"谢啦，这下可以吃兔肉了……\", \"不用客气。\", 20, 10],\r\n    [0, \"小黄狗事件\", \"最近村内很多人被小黄狗咬伤了，请你去处理掉十只。\", \"我马上去。\", \"……恐怕我不行。\", [1, 10], \"你是我们村的大英雄！\", \"这是我应该做的。\", 60, 50]\r\n  ],\r\n  [\r\n    [0, \"逃跑的小白兔\", \"我心爱的一只小白兔逃跑了，你能把它抓来吗？\", \"当然可以。\", \"不行，我可抓不着。\", [0, 1], \"谢谢你！\", \"小菜一碟。\", 15, 10],\r\n    [0, \"处理小黄狗\", \"我调查了一下，原来是小黄狗把它抓走了，你能帮我吗？\", \"可以。\", \"我现在很累啊。\", [1, 1], \"非常感谢！\", \"用不着这样。\", 12, 15]\r\n  ],\r\n  [\r\n    [0, \"恶毒的小花蛇\", \"小花蛇曾经把我的宠物咬死了，所以……\", \"绝对没问题！\", \"所以什么？\", [2, 1], \"谢谢你……\", \"我能理解你。\", 15, 22]\r\n  ]\r\n];\r\n\r\ndata.settings.goods = [\r\n  //0加体力，1加经，2任务，名字，金钱，加的量，所花时间\r\n  [0, 0, \"小型生命药水\", 8, 20, 4],\r\n  [1, 0, \"小型生命药水A\", 10, 20, 0],\r\n  [2, 0, \"中型生命药水\", 25, 50, 5],\r\n  [3, 0, \"中型生命药水A\", 32, 50, 0],\r\n  [4, 0, \"大型生命药水\", 50, 100, 10],\r\n  [5, 0, \"大型生命药水A\", 60, 100, 0],\r\n  [6, 1, \"小型经验药水\", 150, 60, 2],\r\n];\r\n\r\n//经验值计算\r\nfor (let i = 1; i <= data.settings.Uplevel; i++) {\r\n  data.settings.exped[i] = 3 + i * (i + 1) * (i + 2) / 3;\r\n}\r\n\r\ndata.player.useblood = data.player.blood;\r\ndata.player.exped = data.settings.exped[data.player.level];\r\ndata.player.role = data.settings.role.map(() => false);\r\ndata.player.roles = data.settings.role.map(() => 0);\r\ndata.player.roleData = data.settings.role.map(() => {\r\n  return {type: -1}\r\n});\r\n\r\nconst store = createStore(data);\r\n\r\nexport default store;\r\n","import store from \"./store\";\r\n\r\nexport function setGlobalValue(changes = {}) {\r\n  store.dispatch({\r\n    type: \"SET_GLOBAL_VALUE\",\r\n    payload: {\r\n      changes: { ...changes }\r\n    }\r\n  });\r\n}\r\n\r\n//Abstraction for setting Viewport W and H\r\nexport function setViewportSize(width, height, mode = \"portrait\") {\r\n  store.dispatch({\r\n    type: \"SET_GLOBAL_VALUE\",\r\n    payload: {\r\n      changes: {\r\n        vW: Math.round(width / 100),\r\n        vH: Math.round(height / 100),\r\n        viewportMode: mode,\r\n        viewportWidth: width,\r\n        viewportHeight: height\r\n      }\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setViewportSize} from \"../store/global-actions\";\r\n\r\nclass Scene extends React.Component {\r\n  componentWillMount() {\r\n    this.setViewportModel(this.getViewportModel());\r\n    //Watch for resizing window:\r\n    let resizeTimeout;\r\n    window.onresize = () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        this.setViewportModel(this.getViewportModel());\r\n      }, 50);\r\n    };\r\n  }\r\n\r\n  getViewportModel() {\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n\r\n    if (windowWidth <= 600) {\r\n      //TODO: unsure if this the right call, but basically a media query for <= px\r\n      //mobile\r\n      return {\r\n        width: windowWidth, //TODO: Just use full mobile screen for now. Can cross this bridge later if we have issues\r\n        height: windowHeight,\r\n        mode: \"portrait\"\r\n      };\r\n    }\r\n\r\n    //Get the computed value for //16:9 aspect ratio\r\n    const windowHeightInRatioFromWidth = Math.round(windowWidth * 0.56);\r\n\r\n    //If we can't fit the whole height of the screen, measure using the HEIGHT as the baseline\r\n    if (windowHeightInRatioFromWidth > windowHeight) {\r\n      // console.warn('cant fit!');\r\n      return {\r\n        width: Math.round(windowHeight * 16.0 / 9.0), //get 16:9 aspect ratio from height\r\n        height: windowHeight,\r\n        mode: \"landscape\"\r\n      };\r\n    }\r\n\r\n    //desktop (with room to fit the computed height):\r\n    return {\r\n      width: windowWidth,\r\n      height: windowHeightInRatioFromWidth, //16:9 aspect ratio\r\n      mode: \"landscape\"\r\n    };\r\n  }\r\n\r\n  setViewportModel(viewportModel) {\r\n    //Apply viewportModel to redux state:\r\n    const {width, height, mode} = viewportModel;\r\n    setViewportSize(width, height, mode);\r\n  }\r\n\r\n  render() {\r\n    //no measurement yet.\r\n    if (this.props.viewportWidth <= 0 || this.props.viewportHeight <= 0) {\r\n      return null;\r\n    }\r\n\r\n    const frameStyle = {\r\n      position: \"relative\",\r\n      width: this.props.viewportWidth,\r\n      height: this.props.viewportHeight,\r\n      // border: \"1px solid red\",\r\n      margin: \"0 auto\", //In case we need to center a small'ed landscape view\r\n      overflow: \"hidden\", //?\r\n\r\n      //THIS IS THE GLOBAL FONT SIZE. EVERYTHING ELSE SHALL USE \"em\".\r\n      fontSize:\r\n        this.props.viewportMode === \"portrait\"\r\n          ? this.props.vW * 4 //Mobile globalReducer font size\r\n          : this.props.vW * 2 //Desktop globalReducer font size\r\n    };\r\n\r\n    const className = \"RPGScene--\" + this.props.viewportMode;\r\n\r\n    return (\r\n      <div style={frameStyle} className={className}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    vW: state.global.vW,\r\n    vH: state.global.vH,\r\n    viewportMode: state.global.viewportMode,\r\n    viewportWidth: state.global.viewportWidth,\r\n    viewportHeight: state.global.viewportHeight\r\n  };\r\n})(Scene);\r\n","export function convertSpeechArrayToTextLineArray(array, userOptions = {}) {\r\n  //Defaults\r\n  const options = {\r\n    defaultTextColor: \"#000\", //The color of text when not explicitly defined by @@color_@@ prefix\r\n    ...userOptions\r\n  };\r\n\r\n  let delivery = [];\r\n\r\n  array.forEach((segment, index) => {\r\n    if (!segment.match(/@@pause_/)) {\r\n      let speed = 50;\r\n      let color = options.defaultTextColor; //default?\r\n\r\n      if (segment.match(/^\\[LIGHTNING\\]/i)) {\r\n        segment = segment.replace(\"[LIGHTNING]\", \"\");\r\n        speed = 10;\r\n      }\r\n      if (segment.match(/^\\[FAST\\]/i)) {\r\n        segment = segment.replace(\"[FAST]\", \"\");\r\n        speed = 35;\r\n      }\r\n      if (segment.match(/^\\[SLOW\\]/i)) {\r\n        segment = segment.replace(\"[SLOW]\", \"\");\r\n        speed = 140;\r\n      }\r\n      if (segment.match(/^\\[CRAWL\\]/i)) {\r\n        segment = segment.replace(\"[CRAWL]\", \"\");\r\n        speed = 360;\r\n      }\r\n\r\n      //Look for color flag, grab hex and use as the `color` value.\r\n      if (segment.match(/^@@color_/)) {\r\n        let extract = segment.match(/@@(.*)@@/).pop();\r\n        color = extract.replace(\"color_\", \"\"); //grab whatever comes after the `color_...` (expecting a hex, or a preset name)\r\n\r\n        segment = segment.replace(`@@${extract}@@`, \"\");\r\n      }\r\n\r\n      const split = segment.split(\"\").map(function(char) {\r\n        return {\r\n          color: color,\r\n          char: char,\r\n          msToNextChar: char !== \" \" ? speed : 0\r\n        };\r\n      });\r\n      delivery = [...delivery, ...split];\r\n    } else {\r\n      const parsedDelay = segment.match(/\\d+/g)[0];\r\n      delivery = [\r\n        ...delivery,\r\n        {\r\n          color: options.defaultTextColor,\r\n          char: \" \",\r\n          msToNextChar: parseInt(parsedDelay, 10)\r\n        }\r\n      ];\r\n    }\r\n  });\r\n\r\n  return delivery;\r\n}\r\n","export default {\r\n  sfx_typeBlip: {\r\n    src: [\r\n      \"/sfx/blip.wav\"\r\n    ],\r\n    volume: 0.75\r\n  },\r\n  sfx_ring: {\r\n    src: [\r\n      \"/sfx/ring.mp3\"\r\n    ],\r\n    volume: 1\r\n  }\r\n};\r\n","import { Howl } from \"howler\";\r\nimport Music from \"./music\";\r\nimport Sfx from \"./sfx\";\r\n\r\nlet sfxHowls = {};\r\nObject.keys(Sfx).forEach(key => {\r\n  sfxHowls[key] = new Howl(Sfx[key]);\r\n});\r\n\r\nexport default {\r\n  //SFX\r\n  currentSong: null,\r\n  isFirstSongTrigger: false, //default to false\r\n  currentSongKey: \"\",\r\n\r\n  playSong(songKey) {\r\n\r\n    //If this song is already playing, bail out so it doesnt start over!\r\n    if (this.currentSongKey === songKey) {\r\n      return;\r\n    }\r\n\r\n    //Stop any old song that is playing\r\n    if (this.currentSong) {\r\n      this.currentSong.stop();\r\n      this.currentSong = null; //delete it!\r\n    }\r\n\r\n    //Play the new one!\r\n    this.currentSongKey = songKey;\r\n    this.currentSong = new Howl(Music[songKey]);\r\n\r\n    //Play the song!\r\n    this.currentSong.play();\r\n\r\n\r\n  },\r\n  stopSong() {\r\n    if (this.currentSong) {\r\n      this.currentSong.stop();\r\n    }\r\n  },\r\n\r\n  changeSongVolume(status) {\r\n    if (this.currentSong) {\r\n      if (status === \"off\") {\r\n        this.currentSong.volume(0);\r\n      }\r\n      if (status === \"on\") {\r\n        //NOTE: need to remember old song's initial volume!\r\n        this.currentSong.volume(Music[this.currentSongKey].volume || 1);\r\n      }\r\n    }\r\n  },\r\n\r\n  sfxHowls: sfxHowls,\r\n\r\n  //SFX bank\r\n  playSfx(sfxKey) {\r\n    sfxHowls[sfxKey].play();\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport audioManager from \"../../audio/manager\";\r\n\r\nclass TextLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animFrameStep = null; //Keep a reference to the animationFrame step so we can cancel\r\n    this.state = {\r\n      revealedIndex: -1 //count upwards\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.revealNext(Date.now() + 10); //start X ms after mounting.\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //cancel the frame count on unmount\r\n    cancelAnimationFrame(this.animFrameStep);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    //We've received instructions to force the text to the end.\r\n    if (newProps.isForcedDone) {\r\n      //Cancel anything that has been called.\r\n      cancelAnimationFrame(this.animFrameStep);\r\n\r\n      //Warp to the end (assuming 999 is far beyond max)\r\n      this.setState(\r\n        {\r\n          revealedIndex: 999\r\n        },\r\n        () => {\r\n          //Then call the final callback\r\n          if (typeof this.props.onDone === \"function\") {\r\n            this.props.onDone();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  revealNext(targetTimestamp) {\r\n    //recursive\r\n\r\n    let step = () => {\r\n      if (Date.now() < targetTimestamp) {\r\n        //Try again next frame and check again\r\n        this.animFrameStep = requestAnimationFrame(step);\r\n      } else {\r\n        //Time to reveal the next character\r\n\r\n        const nextIndex = this.state.revealedIndex + 1;\r\n        this.setState(\r\n          {\r\n            revealedIndex: nextIndex\r\n          },\r\n          () => {\r\n            //There is at least anotehr character in the text line...\r\n            if (nextIndex < this.props.lineData.length - 1) {\r\n              //Play sound!\r\n              //TODO: Should this SFX be passed in? So we have options?\r\n              if (this.props.lineData[nextIndex].char !== \" \") {\r\n                //don't play on space characters\r\n                //sfxTypeBlip.play();\r\n                audioManager.playSfx(\"sfx_typeBlip\");\r\n              }\r\n\r\n              //Call again with updated time delay\r\n              const msToNextChar = this.props.lineData[nextIndex].msToNextChar;\r\n              this.revealNext(Date.now() + msToNextChar);\r\n            } else {\r\n              //End of the series. Call the passed in callback!\r\n              if (typeof this.props.onDone === \"function\") {\r\n                this.props.onDone();\r\n              }\r\n            }\r\n          }\r\n        );\r\n      }\r\n    };\r\n\r\n    //Kick off the first step\r\n    this.animFrameStep = requestAnimationFrame(step);\r\n  }\r\n\r\n  render() {\r\n    const string = this.props.lineData.map((characterModel, i) => {\r\n      const style = {\r\n        opacity: i <= this.state.revealedIndex ? 1 : 0,\r\n        color: characterModel.color, //will always have a color\r\n        fontFamily: \"Kaiti\",\r\n        fontSize: \"24px\"\r\n      };\r\n      return (\r\n        <span key={`txtline_${i}`} style={style}>\r\n          {characterModel.char}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <span>\r\n        {string}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextLine;\r\n","import React from \"react\";\r\nimport TextLine from \"./TextLine\";\r\n\r\nclass SkippableTextLine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isForcedDone: false\r\n    };\r\n  }\r\n\r\n  //TODO: Keyboard binding will go here too!\r\n  handleClick() {\r\n    this.setState({\r\n      isForcedDone: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //Pass in same props that TextLine needs\r\n    return (\r\n      <span\r\n        onClick={this.handleClick.bind(this)}\r\n        style={this.props.style || {}}\r\n      >\r\n        <TextLine\r\n          isForcedDone={this.state.isForcedDone}\r\n          lineData={this.props.lineData}\r\n          onDone={this.props.onDone}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkippableTextLine;\r\n","import React from \"react\";\r\nimport SkippableTextLine from '../text/SkippableTextLine'\r\n\r\nclass IntroTextLine extends React.Component {\r\n  render() {\r\n    return (\r\n      <SkippableTextLine\r\n        lineData={this.props.text}\r\n        onDone={this.props.onTextComplete.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroTextLine;\r\n","import React from \"react\";\r\n\r\nexport default class IntroOverlay extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHidden: false //Is this rendering as 'null' to not block anything\r\n    }\r\n  }\r\n\r\n  handleTransitionEnd() {\r\n    if (typeof this.props.onTransitionComplete === \"function\") {\r\n      this.setState({\r\n        isHidden: true\r\n      }, () => {\r\n        this.props.onTransitionComplete();\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (this.state.isHidden) {\r\n      return null\r\n    }\r\n\r\n    const style = {\r\n      position: \"absolute\",\r\n      zIndex: 100,\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      background: `#151825 radial-gradient(50% 105%, rgba(40,48,79,0.00) 52%, rgba(11,15,32,0.70) 100%)`,\r\n      opacity: this.props.isOpaque ? 1 : 0,\r\n      transition: \"opacity 1.5s\"\r\n    };\r\n\r\n    return (\r\n      <div style={style} onTransitionEnd={this.handleTransitionEnd.bind(this)}/>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass IntroLaptop extends React.Component {\r\n\r\n  getMobileStyle() {\r\n    const {vH} = this.props;\r\n    return {\r\n      height: vH * 30,\r\n      padding: \"10% 8% 0%\",\r\n      lineHeight: \"1.8em\"\r\n    };\r\n  }\r\n\r\n  getDesktopStyle() {\r\n    const {vH, vW} = this.props;\r\n    return {\r\n      width: vW * 88,\r\n      height: vH * 88,\r\n      bottom: 0,\r\n      left: 0,\r\n      paddingTop: vW * 3,\r\n      paddingLeft: vW * 3,\r\n      paddingRight: vW * 3,\r\n      fontSize: \"1em\",\r\n      lineHeight: \"2.2em\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {viewportMode} = this.props;\r\n\r\n    const viewportModeStyles =\r\n      viewportMode === \"portrait\"\r\n        ? this.getMobileStyle()\r\n        : this.getDesktopStyle();\r\n\r\n    const style = {\r\n      position: \"relative\",\r\n      zIndex: 3,\r\n\r\n      backgroundColor: \"#000\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"100%\",\r\n      ...viewportModeStyles\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    viewportMode: state.global.viewportMode,\r\n    vH: state.global.vH,\r\n    vW: state.global.vW\r\n    //someProp: state.something.someProp\r\n  };\r\n})(IntroLaptop);\r\n","import React from \"react\";\r\nimport {Modal, Button, Alert, Input, Icon, message} from \"antd\";\r\nimport audioManager from \"../../audio/manager\";\r\n\r\nclass IntroInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      visible: false,\r\n      confirmLoading: false,\r\n      errMsg: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    setTimeout(() => {\r\n      this.showModal();\r\n    }, 100);\r\n  }\r\n\r\n  emitEmpty() {\r\n    this.input.focus();\r\n    this.setState({text: ''});\r\n  }\r\n\r\n  onChangeUserName(e) {\r\n    this.setState({text: e.target.value});\r\n  }\r\n\r\n  showModal() {\r\n    audioManager.playSfx(\"sfx_ring\");\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  handleNameSubmit(e) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    //Wait a second for effect, then proceed\r\n    setTimeout(() => {\r\n      this.props.onNameReceived(this.state.text);\r\n    }, 100);\r\n  }\r\n\r\n  handleOk() {\r\n    const {text} = this.state;\r\n    if (text === '') {\r\n      message.error('请重新输入');\r\n      this.setState({\r\n        errMsg: '名字不能为空',\r\n      });\r\n      return;\r\n    }\r\n    if (text.length > 10) {\r\n      message.error('请重新输入');\r\n      this.setState({\r\n        errMsg: '名字不能超过10个字符',\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false,\r\n      });\r\n      message.success('输入成功！');\r\n      this.handleNameSubmit.call(this);\r\n    }, 500);\r\n  }\r\n\r\n  render() {\r\n    const {visible, confirmLoading, text, errMsg} = this.state;\r\n    const suffix = text ? <Icon type=\"close-circle\" onClick={this.emitEmpty.bind(this)}/> : null;\r\n    return (\r\n      <div>\r\n        <Modal title=\"输入名字\"\r\n               visible={visible}\r\n               confirmLoading={confirmLoading}\r\n               footer={[\r\n                 <Button key=\"submit\" type=\"primary\" loading={confirmLoading} onClick={this.handleOk.bind(this)}>\r\n                   确定\r\n                 </Button>\r\n               ]}\r\n        >\r\n          {\r\n            errMsg !== '' ? (\r\n              <p>\r\n                <Alert message={errMsg} type=\"error\" showIcon/>\r\n              </p>\r\n            ) : null\r\n          }\r\n          <p>\r\n            <Input\r\n              placeholder=\"输入名字\"\r\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n              suffix={suffix}\r\n              value={text}\r\n              onChange={this.onChangeUserName.bind(this)}\r\n              ref={node => this.input = node}\r\n            />\r\n          </p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroInput;\r\n","import store from \"./store\";\r\n\r\nexport function setPlayerValue(changes = {}) {\r\n  store.dispatch({\r\n    type: \"SET_PLAYER_VALUE\",\r\n    payload: {\r\n      changes: { ...changes }\r\n    }\r\n  });\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setGlobalValue} from \"../../store/global-actions\";\r\nimport {convertSpeechArrayToTextLineArray} from \"../text/convert-speech\";\r\nimport IntroTextLine from \"./IntroTextLine\";\r\nimport IntroOverlay from \"./IntroOverlay\";\r\nimport IntroLaptop from \"./IntroLaptop\";\r\nimport IntroInput from \"./IntroInput\";\r\nimport {Row, Col} from \"antd\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nclass IntroScene extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOverlayOpaque: true,\r\n      isLaptopLowered: false,\r\n      step: \"fade-out\",\r\n      nameFromUser: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //First Step: fade out the overlay\r\n    setTimeout(() => {\r\n      this.setState({isOverlayOpaque: false})\r\n    }, 200)\r\n  }\r\n\r\n  //Intro overlay is done fading out, revealing our character and laptop\r\n  handleOverlayDone() {\r\n    setTimeout(() => {\r\n      //Start the intro text\r\n      this.setState({step: \"intro\"})\r\n    }, 200)\r\n  }\r\n\r\n  handleNameReceived(nameFromUserInput) {\r\n    this.setState({\r\n      step: \"nice-to-meet-you\",\r\n      nameFromUser: nameFromUserInput\r\n    });\r\n    setPlayerValue({\r\n      name: nameFromUserInput\r\n    });\r\n  }\r\n\r\n  exitIntro() {\r\n    setTimeout(() => {\r\n      setGlobalValue({scene: \"normal\"});\r\n    }, 600);\r\n  }\r\n\r\n  getIntroText() {\r\n    return [\r\n      \"你好！\",\r\n      \"@@pause_1000@@\",\r\n      \"欢迎来到\",\r\n      \"@@color_yellow@@CC RPG WORLD！\",\r\n      \"@@pause_1000@@\",\r\n      \"版本 0.1！\",\r\n      \"@@pause_100@@\",\r\n    ];\r\n  }\r\n\r\n  getDesktopWrap() {\r\n    if (this.props.viewportMode === \"portrait\") {\r\n      return {};\r\n    }\r\n    return {\r\n      width: \"100%\",\r\n      margin: \"0 auto\"\r\n    };\r\n  }\r\n\r\n  setNextStep(nextStep, timeout = 1000) {\r\n    setTimeout(() => {\r\n      this.setState({step: nextStep});\r\n    }, timeout);\r\n  }\r\n\r\n  renderContent() {\r\n    //Step one: INTRO\r\n    if (this.state.step === \"intro\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        this.getIntroText(), //Returns the proper array of text to use\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n      return (\r\n        <IntroTextLine\r\n          key=\"1\"\r\n          text={introText}\r\n          onTextComplete={this.setNextStep.bind(this, \"intro2\")}\r\n        />\r\n      );\r\n    }\r\n\r\n    //Step one: INTRO\r\n    if (this.state.step === \"intro2\" || this.state.step === \"getName\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        [\"请输入你的名字！\"],\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n      return (\r\n        <IntroTextLine\r\n          key=\"2\"\r\n          text={introText}\r\n          onTextComplete={this.setNextStep.bind(this, \"getName\", 200)}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.step === \"nice-to-meet-you\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        [\r\n          \"太棒了！\",\r\n          \"@@pause_1000@@\",\r\n          \"欢迎光临！\",\r\n          `@@color_yellow@@${this.state.nameFromUser}`,\r\n          \"！\",\r\n        ],\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n\r\n      return (\r\n        <IntroTextLine\r\n          key=\"3\"\r\n          text={introText}\r\n          onTextComplete={this.setNextStep.bind(this, \"end\")}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.step === \"end\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        [\r\n          \"现在开始游戏吧！\",\r\n        ],\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n\r\n      return (\r\n        <IntroTextLine\r\n          key=\"4\"\r\n          text={introText}\r\n          onTextComplete={this.setNextStep.bind(this, \"wait\")}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.step === \"wait\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        [\r\n          \"Loading...\",\r\n        ],\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n\r\n      return (\r\n        <IntroTextLine\r\n          key=\"5\"\r\n          text={introText}\r\n          onTextComplete={this.setNextStep.bind(this, \"over\")}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.step === \"over\") {\r\n      this.exitIntro();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderNameModal() {\r\n    if (this.state.step === \"getName\") {\r\n      return (\r\n        <IntroInput\r\n          onNameReceived={this.handleNameReceived.bind(this)}\r\n          viewportMode={this.props.viewportMode}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      fontSize: this.props.viewportMode === \"portrait\" ? \"0.8em\" : \"0.5em\", //mobile, desktop\r\n    };\r\n    const contentStyle = {\r\n      ...this.getDesktopWrap()\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <IntroOverlay\r\n          isOpaque={this.state.isOverlayOpaque}\r\n          onTransitionComplete={this.handleOverlayDone.bind(this)}\r\n        />\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          <Col style={style}>\r\n            <div style={contentStyle}>\r\n              {\r\n                !this.state.isLaptopLowered ? (\r\n                  <IntroLaptop>\r\n                    {this.renderContent()}\r\n                  </IntroLaptop>\r\n                ) : null\r\n              }\r\n            </div>\r\n            {this.renderNameModal()}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    viewportMode: state.global.viewportMode,\r\n  };\r\n})(IntroScene);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Popover, Progress, Row} from 'antd';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nclass UIHealthBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addID: setTimeout(this.addBlood.bind(this), this.props.ADD_time)\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.addID >= 0)\r\n      clearTimeout(this.state.addID);\r\n  }\r\n\r\n  addBlood() {\r\n    const {blood, useblood} = this.props;\r\n    if (useblood < 0)\r\n      return;\r\n    if (useblood > blood || useblood + this.props.ADD_blood > blood) {\r\n      setPlayerValue({\r\n        useblood: blood\r\n      });\r\n    } else {\r\n      setPlayerValue({\r\n        useblood: useblood + this.props.ADD_blood\r\n      });\r\n    }\r\n    this.setState({\r\n      addID: setTimeout(this.addBlood.bind(this), this.props.ADD_time)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {blood, useblood} = this.props;\r\n    const percent = 100 * useblood / blood;\r\n    const active = useblood < blood;\r\n    const info = `${useblood}/${blood}`;\r\n    return (\r\n      <Popover content={info} title=\"生命\">\r\n        <Row>\r\n          <Col span={6}>\r\n            生命：\r\n          </Col>\r\n          <Col span={18}>\r\n            {\r\n              active ?\r\n                <Progress percent={percent} showInfo={false} status={percent < 20 ? \"exception\" : \"active\"}/>\r\n                :\r\n                <Progress percent={percent} showInfo={false}/>\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Popover>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    blood: state.player.blood,\r\n    useblood: state.player.useblood,\r\n    ADD_blood: state.settings.ADD_blood,\r\n    ADD_time: state.settings.ADD_time,\r\n  };\r\n})(UIHealthBar);\r\n","import store from \"./store\";\r\n\r\nexport function setSettingsValue(changes = {}) {\r\n  store.dispatch({\r\n    type: \"SET_SETTINGS_VALUE\",\r\n    payload: {\r\n      changes: { ...changes }\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Row, Col, Progress, Popover, message} from 'antd';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\nimport {setSettingsValue} from \"../../store/settings-actions\";\r\n\r\nclass UIExpBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expID: setTimeout(this.checkUpgrade.bind(this), 1000)\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.expID >= 0)\r\n      clearTimeout(this.state.expID);\r\n  }\r\n\r\n  checkUpgrade() {\r\n    const {exping, exped, player, Uplevel, Exped, ADD_life, ADD_att, ADD_def, ADD_blood} = this.props;\r\n    if (exping >= exped && player.level < Uplevel && player.useblood > 0) {\r\n      if (player.level % 10 === 0) {\r\n        setSettingsValue({\r\n          ADD_blood: ADD_blood + 1\r\n        });\r\n      }\r\n      setPlayerValue({\r\n        level: player.level + 1,\r\n        blood: player.blood + ADD_life,\r\n        att: player.att + ADD_att,\r\n        def: player.def + ADD_def,\r\n        exping: exping - exped,\r\n        exped: Exped[player.level],\r\n      });\r\n      message.success(`<${player.name}>升到了<${player.level + 1}>级！`);\r\n    }\r\n    this.setState({\r\n      expID: setTimeout(this.checkUpgrade.bind(this), 1000)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {exping, exped} = this.props;\r\n    const percent = 100 * exping / exped;\r\n    const info = `${exping}/${exped}`;\r\n    return (\r\n      <Popover content={info} title=\"经验\">\r\n        <Row>\r\n          <Col span={6}>\r\n        经验：\r\n          </Col>\r\n          <Col span={18}>\r\n            <Progress percent={percent} showInfo={false}/>\r\n          </Col>\r\n        </Row>\r\n      </Popover>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    exping: state.player.exping,\r\n    exped: state.player.exped,\r\n    player: state.player,\r\n    Uplevel: state.settings.Uplevel,\r\n    Exped: state.settings.exped,\r\n    ADD_blood: state.settings.ADD_blood,\r\n    ADD_life: state.settings.ADD_life,\r\n    ADD_att: state.settings.ADD_att,\r\n    ADD_def: state.settings.ADD_def,\r\n  };\r\n})(UIExpBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Row, Col} from 'antd';\r\n\r\nclass UIAttrBar extends React.Component {\r\n\r\n  render() {\r\n    const {level, money, att, def} = this.props;\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={6}>\r\n            等级：\r\n          </Col>\r\n          <Col span={18}>\r\n            {level}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6}>\r\n            金钱：\r\n          </Col>\r\n          <Col span={18}>\r\n            ${money}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6}>\r\n            攻击：\r\n          </Col>\r\n          <Col span={18}>\r\n            {att}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6}>\r\n            防御：\r\n          </Col>\r\n          <Col span={18}>\r\n            {def}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    level: state.player.level,\r\n    money: state.player.money,\r\n    att: state.player.att,\r\n    def: state.player.def,\r\n  };\r\n})(UIAttrBar);\r\n","import _ from \"lodash\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nexport function goodTypes(id) {\r\n  switch (id) {\r\n    case 0:\r\n      return \"生命\";\r\n    case 1:\r\n      return \"经验\";\r\n    default:\r\n      break;\r\n  }\r\n  return \"good: unknown id\";\r\n}\r\n\r\nexport function goodTimes(id) {\r\n  if (id === 0)\r\n    return \"立即\";\r\n  return `${id}秒内`;\r\n}\r\n\r\nexport function applyGoodEffect(player, good) {\r\n  if (good[1] === 0) {\r\n    setPlayerValue({\r\n      useblood: _.min([player.blood, player.useblood + good[4] / good[5]])\r\n    });\r\n  }\r\n}\r\n\r\nexport function taskType(id) {\r\n  switch (id) {\r\n    case 0: return \"打败怪物\";\r\n    default: break;\r\n  }\r\n  return \"task: unknown type\";\r\n}\r\n\r\nexport function randomN() {\r\n  const rand = (Math.floor(Math.random() * 100));\r\n  if (rand >= 0 && rand < 50) {\r\n    return 1;\r\n  }\r\n  if (rand >= 50 && rand < 80) {\r\n    return 2;\r\n  }\r\n  if (rand >= 80 && rand < 95) {\r\n    return 3;\r\n  }\r\n  if (rand >= 95 && rand <= 98) {\r\n    return 5;\r\n  }\r\n  if (rand > 98 && rand <= 99) {\r\n    return 10;\r\n  }\r\n}\r\n\r\nexport function runN(id) {\r\n  return Math.floor(Math.random() * id) === 0;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport {Button, Col, Popover, Progress, Row} from \"antd\";\r\nimport {applyGoodEffect, goodTimes, goodTypes} from \"./util\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nclass UIStateBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checkingID: setTimeout(this.checkingTimeout.bind(this), 1000),\r\n      goodID: -1,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.goodID >= 0)\r\n      clearTimeout(this.state.goodID);\r\n    if (this.state.checkingID >= 0)\r\n      clearTimeout(this.state.checkingID);\r\n  }\r\n\r\n  checkingTimeout() {\r\n    if (this.props.player.useblood > 0) {\r\n      if (this.props.states.good != null && this.props.states.good.obj != null && this.state.goodID === -1) {\r\n        this.setState({\r\n          goodID: setTimeout(this.goodTimeout.bind(this), 100)\r\n        });\r\n      }\r\n      this.setState({\r\n        checkingID: setTimeout(this.checkingTimeout.bind(this), 1000)\r\n      });\r\n    }\r\n  }\r\n\r\n  goodTimeout() {\r\n    const {count, all, obj} = this.props.states.good;\r\n    if (count % 100 === 0)\r\n      applyGoodEffect(this.props.player, obj);\r\n    setPlayerValue({\r\n      states: {\r\n        good: {\r\n          obj: obj,\r\n          count: count + 10,\r\n          all: all,\r\n        }\r\n      }\r\n    });\r\n    if (count + 10 <= all) {\r\n      this.setState({\r\n        goodID: setTimeout(this.goodTimeout.bind(this), 100)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        goodID: -1\r\n      });\r\n      setPlayerValue({\r\n        states: {\r\n          good: null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  goodState(id, s) {\r\n    const good = s.obj;\r\n    const t = goodTypes(good[1]);\r\n    const percent = 100 * s.count / s.all;\r\n    const info = (\r\n      <div>\r\n        <Row><Col span={8}>进度：</Col><Col span={16}><Progress size=\"small\" percent={percent} width={80} showInfo={false}/></Col></Row>\r\n        <Row><Col span={8}>类型：</Col><Col span={16}>{t}药水</Col></Row>\r\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{good[3]}</Col></Row>\r\n        <Row><Col span={8}>效果：</Col><Col span={16}>{goodTimes(good[5])}增加{good[4]}{t}</Col></Row>\r\n      </div>\r\n    );\r\n    return (\r\n      <Popover key={`state_${id}`} content={info} title={`状态 -- <${good[2]}>`}>\r\n        <Button size={\"small\"}>\r\n          {good[2]}\r\n        </Button>\r\n      </Popover>\r\n    );\r\n  }\r\n\r\n  conv(id) {\r\n    const {states} = this.props;\r\n    const s = states[id];\r\n    if (s === null)\r\n      return null;\r\n    switch (id) {\r\n      case \"good\":\r\n        return this.goodState(id, s);\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  stateList() {\r\n    const {states} = this.props;\r\n    const list = _.keys(states).map(this.conv.bind(this)).filter((a) => a !== null);\r\n    if (list.length === 0)\r\n      return \"无\";\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={6}>\r\n          状态：\r\n        </Col>\r\n        <Col span={18}>\r\n          {this.stateList()}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    player: state.player,\r\n    states: state.player.states\r\n  };\r\n})(UIStateBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport {Button, Col, message, Popover, Progress, Row} from \"antd\";\r\nimport {taskType} from \"./util\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nclass UITaskBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checkingID: setTimeout(this.checkingTimeout.bind(this), 1000),\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.checkingID >= 0)\r\n      clearTimeout(this.state.checkingID);\r\n  }\r\n\r\n  completeTask0(id) {\r\n    const {roleList, player, role, roles, money, exping} = this.props;\r\n    const r = roleList[id];\r\n    const cur = player.roles[id];\r\n    const task = r[cur];\r\n    const logs = [\r\n      `<${player.name}>完成了<${task[1]}>任务！`,\r\n      `<${player.name}>获得了<$${task[8]}金钱>和<${task[9]}经验>！`\r\n    ];\r\n    message.success(logs[0]);\r\n    message.success(logs[1]);\r\n    role[id] = false;\r\n    roles[id]++;\r\n    setPlayerValue({\r\n      money: money + task[8],\r\n      exping: exping + task[9],\r\n      role: role,\r\n      roles: roles\r\n    });\r\n  }\r\n\r\n  checkTask0Info(task) {\r\n    const {id, count} = task;\r\n    const {roleData} = this.props;\r\n    for (let i in roleData) {\r\n      const r = roleData[i];\r\n      if (r.type === 0 && r.id === id) {\r\n        roleData[i].count = count + r.count;\r\n        if (roleData[i].count >= r.all) {\r\n          roleData[i] = {type: -1};\r\n          this.completeTask0(i);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setPlayerValue({\r\n      roleData: roleData\r\n    });\r\n  }\r\n\r\n  checkTask0() {\r\n    const {winN} = this.props;\r\n    if (winN.length > 0) {\r\n      _(winN).forEach(this.checkTask0Info.bind(this));\r\n      setTimeout(() => setPlayerValue({\r\n        winN: []\r\n      }), 0);\r\n    }\r\n  }\r\n\r\n  checkTask() {\r\n    this.checkTask0();\r\n  }\r\n\r\n  checkingTimeout() {\r\n    if (this.props.player.useblood > 0) {\r\n      this.checkTask();\r\n      this.setState({\r\n        checkingID: setTimeout(this.checkingTimeout.bind(this), 1000)\r\n      });\r\n    }\r\n  }\r\n\r\n  taskTarget0(task) {\r\n    const [id, num] = task[5];\r\n    const ani = this.props.animal[id];\r\n    return `打败<${num}>只<${ani[0]}>`;\r\n  }\r\n\r\n  taskTarget(task) {\r\n    switch (task[0]) {\r\n      case 0:\r\n        return this.taskTarget0(task);\r\n      default:\r\n        break;\r\n    }\r\n    return \"task: unknown target\";\r\n  }\r\n\r\n  taskProgress0(role, task) {\r\n    const {all, count} = role;\r\n    return Math.floor(100 * count / all);\r\n  }\r\n\r\n  taskProgress(role, task) {\r\n    switch (task[0]) {\r\n      case 0:\r\n        return this.taskProgress0(role, task);\r\n      default:\r\n        break;\r\n    }\r\n    return \"task: unknown progress\";\r\n  }\r\n\r\n  taskInfo0(id, cur, task) {\r\n    const {people, roleData} = this.props;\r\n    const peo = people[id];\r\n    const percent = this.taskProgress(roleData[id], task);\r\n    const info = (\r\n      <div>\r\n        <Row><Col span={8}>人物：</Col><Col span={16}><b>{peo[1]} - {peo[2]}</b></Col></Row>\r\n        <Row><Col span={8}>类型：</Col><Col span={16}><b>{taskType(task[0])}</b></Col></Row>\r\n        <Row><Col span={8}>目标：</Col><Col span={16}><b>{this.taskTarget(task)}</b></Col></Row>\r\n        <Row><Col span={8}>奖励：</Col><Col span={16}><b>&lt;${task[8]}&gt;金钱</b><br/><b>&lt;{task[9]}&gt;经验</b></Col></Row>\r\n        <Row><Col span={8}>进度：</Col><Col span={16}><Progress type=\"circle\" size=\"small\" percent={percent} width={40}/></Col></Row>\r\n      </div>\r\n    );\r\n    return (\r\n      <Popover key={`tasks_${id}_${cur}`} content={info} title={`任务 -- <${task[1]}>`}>\r\n        <Button size={\"small\"}>\r\n          {task[1]}\r\n        </Button>\r\n      </Popover>\r\n    );\r\n  }\r\n\r\n  conv(id) {\r\n    const {roleList, player} = this.props;\r\n    const r = roleList[id];\r\n    const cur = player.roles[id];\r\n    const task = r[cur];\r\n    switch (task[0]) {\r\n      case 0:\r\n        return this.taskInfo0(id, cur, task);\r\n      default:\r\n        break;\r\n    }\r\n    return \"task: unknown type\";\r\n  }\r\n\r\n  taskList() {\r\n    const {role} = this.props;\r\n    const list = _.chain(role)\r\n      .map((a, idx) => [a, idx])\r\n      .filter((a) => a[0])\r\n      .map((a) => a[1])\r\n      .map(this.conv.bind(this))\r\n      .value();\r\n    if (list.length === 0)\r\n      return \"无\";\r\n    return list;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={6}>\r\n          任务：\r\n        </Col>\r\n        <Col span={18}>\r\n          {this.taskList()}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    player: state.player,\r\n    money: state.player.money,\r\n    exping: state.player.exping,\r\n    winN: state.player.winN,\r\n    role: state.player.role,\r\n    roles: state.player.roles,\r\n    roleData: state.player.roleData,\r\n    roleList: state.settings.role,\r\n    people: state.settings.people,\r\n    animal: state.settings.animal,\r\n  };\r\n})(UITaskBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Col} from 'antd';\r\nimport UIHealthBar from \"./UIHealthBar\";\r\nimport UIExpBar from \"./UIExpBar\";\r\nimport UIAttrBar from \"./UIAttrBar\";\r\nimport UIStateBar from \"./UIStateBar\";\r\nimport UITaskBar from \"./UITaskBar\";\r\n\r\nclass UIPlayerInfo extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Col span={8}>\r\n        <Card\r\n          title={`人物信息 -- <${this.props.userName}>`}\r\n          style={{height: \"300px\"}}\r\n        >\r\n          <UIAttrBar/>\r\n          <UIHealthBar/>\r\n          <UIExpBar/>\r\n          <UIStateBar/>\r\n          <UITaskBar/>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    userName: state.player.name,\r\n  };\r\n})(UIPlayerInfo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Radio, Row} from 'antd';\r\nimport _ from 'lodash';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass UIMapBar extends React.Component {\r\n\r\n  onChange(e) {\r\n    setPlayerValue({\r\n      maping: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {maping, map} = this.props;\r\n    const ids = _(map[maping][2]).map((id) => {\r\n      return <RadioButton key={`map_${id}`} value={id}>{map[id][1]}</RadioButton>\r\n    }).value();\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={4}>\r\n            通往：\r\n          </Col>\r\n          <Col>\r\n            <RadioGroup onChange={this.onChange.bind(this)}>\r\n              {ids}\r\n            </RadioGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    maping: state.player.maping,\r\n    map: state.settings.map,\r\n  };\r\n})(UIMapBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Popover, Radio, Row} from 'antd';\r\nimport _ from 'lodash';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass UIAnimalBar extends React.Component {\r\n\r\n  onChange(e) {\r\n    const id = e.target.value;\r\n    setPlayerValue({\r\n      fightN: true,\r\n      fightA: id,\r\n    });\r\n  }\r\n\r\n  info(id) {\r\n    const {animal} = this.props;\r\n    const ani = animal[id];\r\n    return (\r\n      <div>\r\n        <Row><Col span={8}>属性：</Col><Col span={16}>{ani[1]}级-{ani[9]}系</Col></Row>\r\n        <Row><Col span={8}>攻击：</Col><Col span={16}>{ani[3]}</Col></Row>\r\n        <Row><Col span={8}>防御：</Col><Col span={16}>{ani[4]}</Col></Row>\r\n        <Row><Col span={8}>生命：</Col><Col span={16}>{ani[2]}</Col></Row>\r\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{ani[5]}</Col></Row>\r\n        <Row><Col span={8}>经验：</Col><Col span={16}>{ani[6]}</Col></Row>\r\n        <Row><Col span={8}>魔法：</Col><Col span={16}>{ani[7]}秒{ani[8]}伤害</Col></Row>\r\n      </div>);\r\n  }\r\n\r\n  render() {\r\n    const {maping, map, animal} = this.props;\r\n    if (map[maping][3].length === 0)\r\n      return null;\r\n    const ids = _(map[maping][3]).map((id) => {\r\n      const ani = animal[id];\r\n      return (\r\n        <Popover key={`animal_${id}`} content={this.info(id)} title={`怪物信息 - <${ani[0]}>`}>\r\n          <RadioButton value={id}>{ani[0]}</RadioButton>\r\n        </Popover>\r\n      )\r\n    }).value();\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={4}>\r\n            怪物：\r\n          </Col>\r\n          <Col>\r\n            <RadioGroup onChange={this.onChange.bind(this)}>\r\n              {ids}\r\n            </RadioGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    maping: state.player.maping,\r\n    map: state.settings.map,\r\n    animal: state.settings.animal,\r\n  };\r\n})(UIAnimalBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, Modal, Popover, Radio, Row, message, Progress} from 'antd';\r\nimport _ from 'lodash';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\nimport {taskType} from \"./util\";\r\n\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass UIPeopleBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: -1,\r\n      hidden: false,\r\n      count: 0,\r\n      hiddenID: -1,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.hiddenID >= 0)\r\n      clearTimeout(this.state.hiddenID);\r\n  }\r\n\r\n  onChange(e) {\r\n    const id = e.target.value;\r\n    const {role} = this.props.player;\r\n    if (role[id]) {\r\n      message.error(\"你当前已有任务在身！\");\r\n      return null;\r\n    }\r\n    const r = this.props.role[id];\r\n    const cur = this.props.player.roles[id];\r\n    if (cur >= r.length) {\r\n      message.warning(\"没有更多任务了！\");\r\n      return null;\r\n    }\r\n    this.setState({\r\n      id: id,\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  reloading() {\r\n    if (this.state.count < 100) {\r\n      this.setState({\r\n        count: this.state.count + 10,\r\n        hidden: true,\r\n        hiddenID: setTimeout(this.reloading.bind(this), 100),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hidden: false,\r\n        count: 0,\r\n        hiddenID: -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    this.setState({\r\n      hidden: true,\r\n      hiddenID: setTimeout(this.reloading.bind(this), 100),\r\n    });\r\n  }\r\n\r\n  initTask0(task) {\r\n    return {\r\n      type: 0,\r\n      id: task[5][0],\r\n      all: task[5][1],\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  initTask(id, task) {\r\n    switch (task[0]) {\r\n      case 0: return this.initTask0(task);\r\n      default: break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  initTaskData(id, task) {\r\n    const {roleData} = this.props;\r\n    roleData[id] = this.initTask(id, task);\r\n    return roleData;\r\n  }\r\n\r\n  handleTask() {\r\n    const {id} = this.state;\r\n    const r = this.props.role[id];\r\n    const cur = this.props.player.roles[id];\r\n    const task = r[cur];\r\n    const role = this.props.player.role;\r\n    role[id] = true;\r\n    setPlayerValue({\r\n      role: role,\r\n      roleData: this.initTaskData(id, task)\r\n    });\r\n  }\r\n\r\n  handleOk() {\r\n    this.handleTask();\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n    this.reload();\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({\r\n      id: -1,\r\n      visible: false,\r\n    });\r\n    this.reload();\r\n  }\r\n\r\n  taskInfo0(task) {\r\n    const [id, num] = task[5];\r\n    const ani = this.props.animal[id];\r\n    return `打败<${num}>只<${ani[0]}>`;\r\n  }\r\n\r\n  taskInfo(task) {\r\n    switch (task[0]) {\r\n      case 0: return this.taskInfo0(task);\r\n      default: break;\r\n    }\r\n    return \"task: unknown info\";\r\n  }\r\n\r\n  talk() {\r\n    if (this.state.id >= 0) {\r\n      const {role, people, player} = this.props;\r\n      const r = role[this.state.id];\r\n      const p = people[this.state.id];\r\n      const cur = player.roles[this.state.id];\r\n      if (cur >= r.length) {\r\n        message.warning(\"没有更多任务了！\");\r\n        return null;\r\n      }\r\n      const task = r[cur];\r\n      return (\r\n        <Modal title={`与<${p[1]} - ${p[2]}>对话中 —— **${task[1]}**`}\r\n               visible={this.state.visible}\r\n               onOk={this.handleOk.bind(this)}\r\n               onCancel={this.handleCancel.bind(this)}\r\n               okText={task[3]}\r\n               cancelText={task[4]}>\r\n          <p>\r\n            {task[2]}\r\n          </p>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <hr/>\r\n          <p>\r\n            任务类型：<b>{taskType(task[0])}</b>\r\n          </p>\r\n          <p>\r\n            任务目标：<b>{this.taskInfo(task)}</b>\r\n          </p>\r\n          <p>\r\n            任务奖励：<b>&lt;${task[8]}&gt;金钱</b>和<b>&lt;{task[9]}&gt;经验</b>\r\n          </p>\r\n        </Modal>);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  conv(id, txt) {\r\n    return _(txt.split(/\\n/)).map((a, idx) => <p key={`people_${id}_${idx}`}>{a}</p>).value();\r\n  }\r\n\r\n  render() {\r\n    const {maping, map, people} = this.props;\r\n    if (map[maping][4].length === 0)\r\n      return null;\r\n    const ids = _(map[maping][4]).map((id) => {\r\n      const peo = people[id];\r\n      return (\r\n        <Popover key={`people_${id}`} content={this.conv(id, peo[4])} title={`<${peo[1]}> - <${peo[2]}>`}>\r\n          <RadioButton value={id}>{peo[2]}</RadioButton>\r\n        </Popover>\r\n      )\r\n    }).value();\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={4}>\r\n            NPC：\r\n          </Col>\r\n          <Col>\r\n            {\r\n              this.state.hidden ? <Row>\r\n                  <Col span={8}>\r\n                    准备中...\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Progress percent={this.state.count}\r\n                              status=\"active\"\r\n                              showInfo={false}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                :\r\n                <RadioGroup onChange={this.onChange.bind(this)}>\r\n                  {ids}\r\n                </RadioGroup>\r\n            }\r\n          </Col>\r\n        </Row>\r\n        {this.talk()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    maping: state.player.maping,\r\n    player: state.player,\r\n    roleData: state.player.roleData,\r\n    map: state.settings.map,\r\n    role: state.settings.role,\r\n    animal: state.settings.animal,\r\n    people: state.settings.people,\r\n  };\r\n})(UIPeopleBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Col} from 'antd';\r\nimport UIMapBar from \"./UIMapBar\";\r\nimport UIAnimalBar from \"./UIAnimalBar\";\r\nimport UIPeopleBar from \"./UIPeopleBar\";\r\n\r\nclass UIPlayerInfo extends React.Component {\r\n\r\n  getMapName() {\r\n    const {maping, map} = this.props;\r\n    return map[maping][1];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col span={8}>\r\n        <Card\r\n          title={`当前地图 -- <${this.getMapName()}>`}\r\n          style={{height: \"300px\"}}\r\n        >\r\n          <UIMapBar/>\r\n          <br/>\r\n          <UIPeopleBar/>\r\n          <br/>\r\n          <UIAnimalBar/>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    maping: state.player.maping,\r\n    map: state.settings.map,\r\n  };\r\n})(UIPlayerInfo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, message, Popover, Radio, Row, Spin, Progress} from 'antd';\r\nimport _ from 'lodash';\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\nimport {applyGoodEffect, goodTimes, goodTypes} from \"./util\";\r\n\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass UIGoodBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {good} = this.props.player.states;\r\n    if (good != null) {\r\n      if (good.obj == null) {\r\n        return;\r\n      }\r\n      const {obj, count, all} = good;\r\n      this.state = {\r\n        obj: obj,\r\n        count: count,\r\n        all: all,\r\n        goodID: setTimeout(this.rec2.bind(this), 1000)\r\n      };\r\n    } else {\r\n      this.state = {\r\n        hidden: false,\r\n        obj: null,\r\n        count: 0,\r\n        all: 100,\r\n        goodID: -1,\r\n      };\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.goodID >= 0)\r\n      clearTimeout(this.state.goodID);\r\n  }\r\n\r\n  rec1() {\r\n    const {count, all} = this.state;\r\n    this.setState({\r\n      count: count + 10,\r\n    });\r\n    if (count <= all) {\r\n      this.setState({\r\n        goodID: setTimeout(this.rec1.bind(this), 100)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hidden: false,\r\n        count: 0,\r\n        all: 100,\r\n      });\r\n    }\r\n  }\r\n\r\n  rec2() {\r\n    const {count, all} = this.state;\r\n    this.setState({\r\n      count: count + 10,\r\n    });\r\n    if (count + 10 <= all && this.props.player.useblood > 0) {\r\n      this.setState({\r\n        goodID: setTimeout(this.rec2.bind(this), 100)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hidden: false,\r\n        count: 0,\r\n        all: 100,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    const {money, goods} = this.props;\r\n    const id = e.target.value;\r\n    const good = goods[id];\r\n    this.setState({\r\n      hidden: true,\r\n    });\r\n    if (money < good[3])\r\n      return;\r\n    setPlayerValue({\r\n      money: money - good[3]\r\n    });\r\n    message.success(`购买<${good[2]}>成功！`);\r\n    if (good[5] === 0) {\r\n      this.setState({\r\n        goodID: setTimeout(this.rec1.bind(this), 100)\r\n      });\r\n      applyGoodEffect(this.props.player, good);\r\n      message.success(`${goodTypes(good[1])}增加${good[4]}！`);\r\n    } else {\r\n      this.setState({\r\n        count: 0,\r\n        all: 100 * good[5],\r\n      });\r\n      setPlayerValue({\r\n        states: {\r\n          good: {\r\n            obj: good,\r\n            count: 0,\r\n            all: 100 * good[5],\r\n          }\r\n        }\r\n      });\r\n      this.setState({\r\n        goodID: setTimeout(this.rec2.bind(this), 100)\r\n      });\r\n    }\r\n  }\r\n\r\n  conv(good) {\r\n    const t = goodTypes(good[1]);\r\n    return (\r\n      <div>\r\n        <Row><Col span={8}>类型：</Col><Col span={16}>{t}药水</Col></Row>\r\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{good[3]}</Col></Row>\r\n        <Row><Col span={8}>效果：</Col><Col span={16}>{goodTimes(good[5])}增加{good[4]}{t}</Col></Row>\r\n      </div>);\r\n  }\r\n\r\n  render() {\r\n    const {money, goods} = this.props;\r\n    if (goods.length === 0)\r\n      return null;\r\n    const ids = _(goods).map((good) => {\r\n      const id = good[0];\r\n      return (\r\n        money < good[3] ?\r\n          <RadioButton key={`good_${id}`} disabled={true} value={id}>{good[2]}</RadioButton>\r\n          :\r\n          <Popover key={`good_${id}`} content={this.conv(good)} title={`物品信息 -- <${good[2]}>`}>\r\n            <RadioButton value={id}>{good[2]}</RadioButton>\r\n          </Popover>\r\n      )\r\n    }).value();\r\n    if (this.state.hidden) {\r\n      return <Row>\r\n        <Col>\r\n          <Progress percent={100 * this.state.count / this.state.all}\r\n                    status=\"active\"\r\n                    showInfo={false}/>\r\n        </Col>\r\n        <br/>\r\n        <Col>\r\n          <Spin/>&emsp;准备中...\r\n        </Col>\r\n      </Row>;\r\n    }\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <RadioGroup onChange={this.onChange.bind(this)}>\r\n            {ids}\r\n          </RadioGroup>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    player: state.player,\r\n    money: state.player.money,\r\n    goods: state.settings.goods,\r\n  };\r\n})(UIGoodBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Col} from 'antd';\r\nimport UIGoodBar from \"./UIGoodBar\";\r\n\r\nclass UIGoodInfo extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Col span={8}>\r\n        <Card\r\n          title=\"商店\"\r\n          style={{height: \"300px\"}}\r\n        >\r\n          <UIGoodBar/>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n  };\r\n})(UIGoodInfo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, message} from 'antd';\r\nimport {randomN, runN} from \"./util\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\n\r\nclass UIFightRunBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enable: true,\r\n      showID: -1,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.showID)\r\n      clearTimeout(this.state.showID);\r\n  }\r\n\r\n  reload() {\r\n    this.setState({\r\n      enable: true,\r\n      showID: -1,\r\n    });\r\n  }\r\n\r\n  onClick() {\r\n    if (!this.state.enable)\r\n      return;\r\n    if (runN(4 + randomN())) {\r\n      message.success(\"逃跑成功！\");\r\n      setPlayerValue({\r\n        fightN: false,\r\n        fightA: 0,\r\n        fightL: [],\r\n        winN: [],\r\n      });\r\n    } else {\r\n      message.error(\"逃跑失败！\");\r\n      this.setState({\r\n        enable: false,\r\n        showID: setTimeout(this.reload.bind(this), 5000)\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button type=\"primary\" loading={!this.state.enable} onClick={this.onClick.bind(this)}>\r\n        逃跑\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {};\r\n})(UIFightRunBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Col, message, Progress, Row} from 'antd';\r\nimport _ from \"lodash\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\nimport {randomN} from \"./util\";\r\nimport UIFightRunBar from \"./UIFightRunBar\";\r\n\r\nclass UIFightBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {player, animal} = this.props;\r\n    const ani = animal[player.fightA];\r\n    this.state = {\r\n      ani: ani,\r\n      blood: ani[2],\r\n      magic: ani[7],\r\n      magicID: -1,\r\n      playerID: -1,\r\n      animalID: -1,\r\n      overID: -1,\r\n    };\r\n    this.addFightLog(1, `<${player.name}>与<${ani[0]}>开始交战！`);\r\n    setTimeout(this.combat.bind(this), 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {magicID, playerID, animalID, overID} = this.state;\r\n    if (magicID >= 0)\r\n      clearTimeout(magicID);\r\n    if (playerID >= 0)\r\n      clearTimeout(playerID);\r\n    if (animalID >= 0)\r\n      clearTimeout(animalID);\r\n    if (overID >= 0)\r\n      clearTimeout(overID);\r\n  }\r\n\r\n  combat() {\r\n    const {player, animal} = this.props;\r\n    const ani = animal[player.fightA];\r\n    this.addFightLog(1,\r\n      `<${player.name}>将在${ani[7]}秒内受到<${ani[0]}>${ani[7] * ani[8]}点魔法伤害！`);\r\n    this.setState({\r\n      magicID: setTimeout(this.magicCombat.bind(this), 1000)\r\n    });\r\n    setTimeout(this.physicalCombat.bind(this), 0);\r\n  }\r\n\r\n  magicCombat() {\r\n    const {player, animal} = this.props;\r\n    const ani = animal[player.fightA];\r\n    if (this.state.magic > 0) {\r\n      if (player.useblood <= ani[8])\r\n        return;\r\n      setPlayerValue({\r\n        useblood: player.useblood - ani[8]\r\n      });\r\n      this.addFightLog(2,\r\n        `<${player.name}>受到<${ani[0]}>${ani[8]}点魔法伤害！`);\r\n      this.setState({\r\n        magic: this.state.magic - 1,\r\n        magicID: setTimeout(this.magicCombat.bind(this), 1000)\r\n      });\r\n    }\r\n  }\r\n\r\n  physicalCombat() {\r\n    this.setState({\r\n      playerID: setTimeout(this.playerCombat.bind(this), 100)\r\n    });\r\n  }\r\n\r\n  playerCombat() {\r\n    const {player, animal} = this.props;\r\n    const ani = animal[player.fightA];\r\n    const att = _.max([0, player.att + randomN() - ani[4]]);\r\n    if (att > 0)\r\n      this.addFightLog(0,\r\n        `<${ani[0]}>受到<${player.name}>${att}点物理伤害！`);\r\n    else\r\n      this.addFightLog(1,\r\n        `<${ani[0]}>成功躲过了<${player.name}>的攻击！`);\r\n    this.setState({\r\n      blood: this.state.blood - att\r\n    });\r\n    if (player.useblood > 0 && !this.checkCombatFinish())\r\n      this.setState({\r\n        animalID: setTimeout(this.animalCombat.bind(this), 1000)\r\n      });\r\n  }\r\n\r\n  animalCombat() {\r\n    const {player, animal} = this.props;\r\n    const ani = animal[player.fightA];\r\n    const att = _.max([0, ani[3] + randomN() - player.def]);\r\n    if (att > 0)\r\n      this.addFightLog(2,\r\n        `<${player.name}>受到<${ani[0]}>${att}点物理伤害！`);\r\n    else\r\n      this.addFightLog(1,\r\n        `<${player.name}>成功躲过了<${ani[0]}>的攻击！`);\r\n    setPlayerValue({\r\n      useblood: player.useblood - att\r\n    });\r\n    if (player.useblood > att)\r\n      this.setState({\r\n        playerID: setTimeout(this.playerCombat.bind(this), 1000)\r\n      });\r\n  }\r\n\r\n  checkCombatFinish() {\r\n    if (this.state.blood < 0) {\r\n      setTimeout(this.combatOver.bind(this), 100);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  combatOver() {\r\n    const {player, animal, winN} = this.props;\r\n    const ani = animal[player.fightA];\r\n    const money = ani[5] + Math.floor(randomN() / 2);\r\n    const exp = ani[6] + Math.floor(randomN() / 2);\r\n    const logs = [\r\n      `<${player.name}>打败了<${ani[0]}>！`,\r\n      `<${player.name}>获得了<$${money}金钱>和<${exp}经验>！`\r\n    ];\r\n    this.addFightLog(0, logs[0]);\r\n    message.success(logs[0]);\r\n    this.addFightLog(0, logs[1]);\r\n    message.success(logs[1]);\r\n    winN.push({\r\n      id: player.fightA,\r\n      count: 1,\r\n    });\r\n    setPlayerValue({\r\n      winN: winN,\r\n      money: player.money + money,\r\n      exping: player.exping + exp,\r\n    });\r\n    this.setState({\r\n      overID: setTimeout(() => {\r\n        setPlayerValue({\r\n          fightN: false,\r\n          fightA: 0,\r\n          fightL: [],\r\n        });\r\n      }, 2000)\r\n    });\r\n  }\r\n\r\n  addFightLog(id, txt) {\r\n    const {player} = this.props;\r\n    let fightL = player.fightL || [];\r\n    if (fightL.length > 4) {\r\n      fightL.pop();\r\n    }\r\n    setPlayerValue({\r\n      fightL: [[id, txt], ...fightL]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {ani, blood} = this.state;\r\n    const percent = 100 * blood / ani[2];\r\n    return (\r\n      <div>\r\n        <Row><Col span={6}>属性：</Col><Col span={18}>{ani[1]}级-{ani[9]}系</Col></Row>\r\n        <Row><Col span={6}>金钱：</Col><Col span={18}>${ani[5]}</Col></Row>\r\n        <Row><Col span={6}>攻击：</Col><Col span={18}>{ani[3]}</Col></Row>\r\n        <Row><Col span={6}>防御：</Col><Col span={18}>{ani[4]}</Col></Row>\r\n        <Row><Col span={6}>生命：</Col><Col span={18}><Progress percent={percent} showInfo={false}/></Col></Row>\r\n        <Row><Col span={6}>经验：</Col><Col span={18}>{ani[6]}</Col></Row>\r\n        <br/>\r\n        <UIFightRunBar/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    player: state.player,\r\n    animal: state.settings.animal,\r\n    winN: state.player.winN,\r\n  };\r\n})(UIFightBar);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Col} from 'antd';\r\nimport UIFightBar from \"./UIFightBar\";\r\n\r\nclass UIFightInfo extends React.Component {\r\n\r\n  render() {\r\n    const {fightA, animal} = this.props;\r\n    const ani = animal[fightA];\r\n    return (\r\n      <Col span={8}>\r\n        <Card\r\n          title={`怪物信息 -- <${ani[0]}>`}\r\n          style={{height: \"300px\"}}\r\n        >\r\n          <UIFightBar/>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    fightA: state.player.fightA,\r\n    animal: state.settings.animal,\r\n  };\r\n})(UIFightInfo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Col, Timeline} from 'antd';\r\nimport _ from \"lodash\";\r\n\r\nclass UIFightLogInfo extends React.Component {\r\n\r\n  fightColor(id) {\r\n    switch (id) {\r\n      case 0:\r\n        return \"green\";\r\n      case 1:\r\n        return \"blue\";\r\n      case 2:\r\n        return \"red\";\r\n      default:\r\n        break;\r\n    }\r\n    return \"blue\";\r\n  }\r\n\r\n  fightList() {\r\n    const {fightL} = this.props;\r\n    return _.chain(fightL).map((a, idx) =>\r\n      <Timeline.Item key={`fight_${idx}`} color={this.fightColor(a[0])}>\r\n        {a[1]}\r\n      </Timeline.Item>\r\n    ).value();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col span={8}>\r\n        <Card\r\n          title={`战斗情况`}\r\n          style={{height: \"300px\"}}\r\n        >\r\n          <Timeline>\r\n            {this.fightList()}\r\n          </Timeline>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    fightL: state.player.fightL,\r\n  };\r\n})(UIFightLogInfo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Layout, Row} from 'antd';\r\nimport UIPlayerInfo from \"./UIPlayerInfo\";\r\nimport UIMapInfo from \"./UIMapInfo\";\r\nimport UIGoodInfo from \"./UIGoodInfo\";\r\nimport UIFightInfo from \"./UIFightInfo\";\r\nimport UIFightLogInfo from \"./UIFightLogInfo\";\r\n\r\nconst {Content} = Layout;\r\n\r\nclass NormalScene extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Content style={{padding: \"10px\"}}>\r\n            <Row>\r\n              <UIPlayerInfo/>\r\n              {\r\n                this.props.fightN ? <UIFightLogInfo/> : <UIMapInfo/>\r\n              }\r\n              {\r\n                this.props.fightN ? <UIFightInfo/> : <UIGoodInfo/>\r\n              }\r\n            </Row>\r\n          </Content>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    fightN: state.player.fightN,\r\n  };\r\n})(NormalScene);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {convertSpeechArrayToTextLineArray} from \"../text/convert-speech\";\r\nimport IntroTextLine from \"../intro/IntroTextLine\";\r\nimport {setPlayerValue} from \"../../store/player-actions\";\r\nimport IntroOverlay from \"../intro/IntroOverlay\";\r\nimport {Col, Row} from \"antd\";\r\nimport IntroLaptop from \"../intro/IntroLaptop\";\r\nimport {setGlobalValue} from \"../../store/global-actions\";\r\nimport {setSettingsValue} from \"../../store/settings-actions\";\r\n\r\nclass DefaultScene extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOverlayOpaque: true,\r\n      isLaptopLowered: false,\r\n      step: \"fade-in\",\r\n    };\r\n    setGlobalValue({\r\n      scene: \"default\"\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    //First Step: fade out the overlay\r\n    setTimeout(() => {\r\n      this.setState({isOverlayOpaque: false})\r\n    }, 200)\r\n  }\r\n\r\n  handleOverlayDone() {\r\n    setTimeout(() => {\r\n      //Start the intro text\r\n      this.setState({step: \"intro\"})\r\n    }, 200)\r\n  }\r\n\r\n  over() {\r\n    const settings = this.props.settings;\r\n    const def = {\r\n      name: \"匿名玩家\",   //名字\r\n      level: 1,           //等级\r\n      exping: 0,          //当前经验\r\n      exped: 0,           //当前经验上限\r\n      money: 0,           //金钱\r\n      blood: 100,         //生命值上限\r\n      useblood: 100,      //生命值\r\n      att: 6,             //攻击\r\n      def: 6,             //防御\r\n      fightN: false,      //是否战斗状态\r\n      fightA: 0,          //怪物战斗编号\r\n      fightL: [],         //战斗情况\r\n      maping: 0,          //当前地图,\r\n      winN: [],           //杀死怪物次数\r\n      states: {},         //状态\r\n      role: [],           //任务\r\n      roles: [],          //任务进度\r\n      roleData: [],       //任务数据\r\n    };\r\n    def.useblood = def.blood;\r\n    def.exped = settings.exped[def.level];\r\n    def.role = settings.role.map(() => false);\r\n    def.roles = settings.role.map(() => 0);\r\n    def.roleData = settings.role.map(() => {\r\n      return {type: -1}\r\n    });\r\n    setPlayerValue(def);\r\n    setSettingsValue({\r\n      ADD_blood: 1\r\n    });\r\n    setGlobalValue({\r\n      scene: \"normal\"\r\n    });\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.state.step === \"intro\") {\r\n      const introText = convertSpeechArrayToTextLineArray(\r\n        [\r\n          \"[CRAWL]游戏结束！\",\r\n          \"[CRAWL]Game over.\",\r\n          \"[CRAWL]......\",\r\n        ],\r\n        {defaultTextColor: \"#fff\"}\r\n      );\r\n\r\n      return (\r\n        <IntroTextLine\r\n          key=\"4\"\r\n          text={introText}\r\n          onTextComplete={this.over.bind(this)}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getDesktopWrap() {\r\n    if (this.props.viewportMode === \"portrait\") {\r\n      return {};\r\n    }\r\n    return {\r\n      width: \"100%\",\r\n      margin: \"0 auto\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      fontSize: this.props.viewportMode === \"portrait\" ? \"0.8em\" : \"0.5em\", //mobile, desktop\r\n    };\r\n    const contentStyle = {\r\n      ...this.getDesktopWrap()\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <IntroOverlay\r\n          isOpaque={this.state.isOverlayOpaque}\r\n          onTransitionComplete={this.handleOverlayDone.bind(this)}\r\n        />\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          <Col style={style}>\r\n            <div style={contentStyle}>\r\n              {\r\n                !this.state.isLaptopLowered ? (\r\n                  <IntroLaptop>\r\n                    {this.renderContent()}\r\n                  </IntroLaptop>\r\n                ) : null\r\n              }\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    player: state.player,\r\n    settings: state.settings,\r\n    viewportMode: state.global.viewportMode,\r\n  };\r\n})(DefaultScene);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Scene from \"./scene/Scene\";\r\nimport IntroScene from \"./scene/intro/IntroScene\";\r\nimport NormalScene from \"./scene/normal/NormalScene\";\r\nimport DefaultScene from \"./scene/default/DefaultScene\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    if (this.props.scene === \"intro\") {\r\n      return (\r\n        <Scene>\r\n          <IntroScene/>\r\n        </Scene>\r\n      );\r\n    }\r\n\r\n    if (this.props.scene === \"normal\" && this.props.useblood > 0)\r\n      return (\r\n        <Scene>\r\n          <NormalScene/>\r\n        </Scene>\r\n      );\r\n\r\n    return (\r\n      <Scene>\r\n        <DefaultScene/>\r\n      </Scene>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    useblood: state.player.useblood,\r\n    scene: state.global.scene,\r\n  };\r\n})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nconst {Content} = Layout;\r\n\r\n/* Absolute root of the app */\r\nclass RootComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider store={this.props.store}>\r\n        <Layout>\r\n          <Content>\r\n            <App/>\r\n          </Content>\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <RootComponent store={store}/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}