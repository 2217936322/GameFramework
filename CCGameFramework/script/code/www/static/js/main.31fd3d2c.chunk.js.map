{"version":3,"sources":["store/util.js","store/global-reducer.js","store/player-reducer.js","store/settings-reducer.js","store/init.js","store/store.js","store/global-actions.js","scene/Scene.js","scene/text/convert-speech.js","audio/sfx.js","audio/manager.js","scene/text/TextLine.js","scene/text/SkippableTextLine.js","scene/intro/IntroTextLine.js","scene/intro/IntroOverlay.js","scene/intro/IntroLaptop.js","scene/intro/IntroInput.js","store/player-actions.js","scene/intro/IntroScene.js","scene/normal/UIHealthBar.js","store/settings-actions.js","scene/normal/UIExpBar.js","scene/normal/UIAttrBar.js","scene/normal/util.js","scene/normal/UIStateBar.js","scene/normal/UITaskBar.js","scene/normal/UIPlayerInfo.js","scene/normal/UIMapBar.js","scene/normal/UIAnimalBar.js","scene/normal/UIPeopleBar.js","scene/normal/UIMapInfo.js","scene/normal/UIGoodBar.js","scene/normal/UIGoodInfo.js","scene/normal/UIFightRunBar.js","scene/normal/UIFightBar.js","scene/normal/UIFightInfo.js","scene/normal/UIFightLogInfo.js","scene/normal/NormalScene.js","scene/default/DefaultScene.js","App.js","serviceWorker.js","index.js"],"names":["setValue","state","arguments","length","undefined","changes","Object","objectSpread","global","action","type","payload","player","settings","data","vW","viewportWidth","viewportHeight","viewportMode","scene","name","level","exping","exped","money","blood","useblood","att","def","fightN","fightA","fightL","maping","winN","states","role","roles","roleData","Uplevel","ADD_blood","ADD_time","ADD_att","ADD_def","ADD_life","map","animal","people","goods","i","store","reducer","combineReducers","globalReducer","playerReducer","settingsReducer","window","createStore","devToolsExtension","setGlobalValue","dispatch","Scene","resizeTimeout","_this","this","setViewportModel","getViewportModel","onresize","clearTimeout","setTimeout","windowWidth","innerWidth","windowHeight","innerHeight","width","height","mode","windowHeightInRatioFromWidth","Math","round","viewportModel","vH","setViewportSize","props","frameStyle","position","margin","overflow","fontSize","className","react_default","a","createElement","style","children","React","Component","connect","convertSpeechArrayToTextLineArray","array","userOptions","options","defaultTextColor","delivery","forEach","segment","index","match","parsedDelay","toConsumableArray","concat","color","char","msToNextChar","parseInt","speed","replace","extract","pop","split","sfx","sfx_typeBlip","src","volume","sfx_ring","sfxHowls","keys","Sfx","key","Howl","manager","sfxKey","play","TextLine","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","animFrameStep","revealedIndex","revealNext","Date","now","cancelAnimationFrame","newProps","_this2","isForcedDone","setState","onDone","targetTimestamp","_this3","requestAnimationFrame","step","nextIndex","lineData","audioManager","_this4","string","characterModel","opacity","fontFamily","SkippableTextLine","onClick","handleClick","bind","text_TextLine","IntroTextLine","text_SkippableTextLine","text","onTextComplete","IntroOverlay","isHidden","onTransitionComplete","zIndex","left","right","top","bottom","background","isOpaque","transition","onTransitionEnd","handleTransitionEnd","IntroLaptop","padding","lineHeight","_this$props","paddingTop","paddingLeft","paddingRight","viewportModeStyles","getMobileStyle","getDesktopStyle","backgroundColor","backgroundRepeat","backgroundSize","IntroInput","visible","confirmLoading","errMsg","showModal","input","focus","e","target","value","preventDefault","onNameReceived","message","error","success","handleNameSubmit","_this5","_this$state","suffix","icon","emitEmpty","modal","title","footer","es_button","loading","handleOk","es_alert","showIcon","placeholder","prefix","onChange","onChangeUserName","ref","node","setPlayerValue","IntroScene","isOverlayOpaque","isLaptopLowered","nameFromUser","nameFromUserInput","nextStep","timeout","introText","getIntroText","intro_IntroTextLine","setNextStep","exitIntro","intro_IntroInput","handleNameReceived","contentStyle","getDesktopWrap","IntroOverlay_IntroOverlay","handleOverlayDone","row","justify","align","col","intro_IntroLaptop","renderContent","renderNameModal","UIHealthBar","addID","addBlood","assertThisInitialized","_this$props2","percent","active","info","floor","popover","content","span","progress","showInfo","status","setSettingsValue","UIExpBar","expID","checkUpgrade","Exped","UIAttrBar","goodTypes","id","goodTimes","applyGoodEffect","good","_","min","taskType","randomN","rand","random","UIStateBar","checkingID","checkingTimeout","goodID","obj","goodTimeout","_this$props$states$go","count","all","s","t","size","goodState","list","conv","filter","stateList","UITaskBar","roleList","task","logs","r","completeTask0","checkTask0Info","checkTask0","checkTask","_task$","slicedToArray","num","ani","taskTarget0","taskProgress0","cur","peo","taskProgress","taskTarget","_this$props3","taskInfo0","chain","idx","taskList","UIPlayerInfo","card","userName","normal_UIAttrBar","normal_UIHealthBar","normal_UIExpBar","normal_UIStateBar","normal_UITaskBar","RadioButton","es_radio","Button","RadioGroup","Group","UIMapBar","ids","UIAnimalBar","editAnimalId","editAnimalObject","newValue","onCancel","handleAnimalEditorCancel","handleAnimalEditorOk","defaultValue","handleAnimalEditorChange","input_number","max","addonAfter","offset","slider","editAnimal","UIAnimalBar_RadioButton","UIAnimalBar_RadioGroup","renderAnimalEditor","UIPeopleBar","hidden","hiddenID","warning","reloading","initTask0","initTask","initTaskData","handleTask","reload","p","onOk","handleCancel","okText","cancelText","taskInfo","txt","UIPeopleBar_RadioButton","UIPeopleBar_RadioGroup","talk","getMapName","normal_UIMapBar","normal_UIPeopleBar","normal_UIAnimalBar","Option","es_select","UIGoodBar","rec2","editGoodId","editGoodObject","rec1","_this$state2","handleGoodEditorCancel","handleGoodEditorOk","handleGoodEditorChange","disabled","editGood","UIGoodBar_RadioButton","spin","UIGoodBar_RadioGroup","renderGoodEditor","UIGoodInfo","normal_UIGoodBar","UIFightRunBar","enable","showID","UIFightBar","magic","magicID","playerID","animalID","overID","addFightLog","combat","magicCombat","physicalCombat","playerCombat","_this$props4","checkCombatFinish","animalCombat","_this$props5","combatOver","_this$props6","exp","push","normal_UIFightRunBar","UIFightInfo","normal_UIFightBar","UIFightLogInfo","timeline","Item","fightColor","fightList","Content","NormalScene","layout","normal_UIPlayerInfo","normal_UIFightLogInfo","UIMapInfo","normal_UIFightInfo","normal_UIGoodInfo","DefaultScene","over","App","scene_Scene","intro_IntroScene","normal_NormalScene","default_DefaultScene","Boolean","location","hostname","RootComponent","es","src_Content","src_App","ReactDOM","render","src_RootComponent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31fd3d2c.chunk.js","sourcesContent":["/* Use this when editing a simple value on the top level of the store node */\nexport function setValue(state = {}, changes = {}) {\n  return {...state, ...changes};\n}\n\n/* Use this when editing one node in a list of nodes */\nexport function editNode(state = {}, key = \"\", changes = {}) {\n  var updated = {...state}; //copy state for updates\n  var node = updated[key];\n\n  if (node) {\n    /* Don't deep compare if target node is undefined */\n    for (var change in changes) {\n      /* Merge deep objects together rather than replace. Just replace Arrays */\n      if (typeof changes[change] === \"object\") {\n        if (!Array.isArray(changes[change])) {\n          changes[change] = {...node[change], ...changes[change]};\n        }\n      }\n    }\n  }\n\n  node = {...node, ...changes};\n  updated[key] = node;\n\n  return updated;\n}\n\nexport function removeNode(state = {}, key = \"\") {\n  var updated = {...state}; //copy state for removing\n  if (updated[key]) {\n    delete updated[key];\n  }\n  return updated;\n}\n","import {setValue} from \"./util\";\n\nexport function global(state = {}, action) {\n  switch (action.type) {\n    case \"SET_GLOBAL_VALUE\":\n      return setValue(state, action.payload.changes);\n\n    default:\n      return state;\n  }\n}\n","import {setValue} from \"./util\";\n\nexport function player(state = {}, action) {\n  switch (action.type) {\n    case \"SET_PLAYER_VALUE\":\n      return setValue(state, action.payload.changes);\n\n    default:\n      return state;\n  }\n}\n","import {setValue} from \"./util\";\n\nexport function settings(state = {}, action) {\n  switch (action.type) {\n    case \"SET_SETTINGS_VALUE\":\n      return setValue(state, action.payload.changes);\n\n    default:\n      return state;\n  }\n}\n","import {createStore, combineReducers} from \"redux\";\nimport * as globalReducer from \"./global-reducer\";\nimport * as playerReducer from \"./player-reducer\";\nimport * as settingsReducer from \"./settings-reducer\";\n\nexport default function (data) {\n  let reducer = combineReducers({\n    ...globalReducer,\n    ...playerReducer,\n    ...settingsReducer,\n    //...anotherReducer,\n  });\n\n  let store;\n  if (typeof window === \"object\") {\n    store = createStore(\n      reducer,\n      data,\n      window.devToolsExtension ? window.devToolsExtension() : undefined\n    );\n  } else {\n    store = createStore(reducer, data);\n  }\n\n  return store;\n}\n","import createStore from \"./init\";\n\nconst data = {\n  global: {\n    //Viewport stuff\n    vW: 0,\n    viewportWidth: 0,\n    viewportHeight: 0,\n    //viewportMode: Desktop/Mobile layout. Automatically set by GameFrame.js\n    viewportMode: \"portrait\", //\"portrait\" or \"landscape\"\n\n    scene: \"normal\",\n  },\n  player: {\n    name: \"匿名玩家\",   //名字\n    level: 1,           //等级\n    exping: 0,          //当前经验\n    exped: 0,           //当前经验上限\n    money: 1000,           //金钱\n    blood: 100,         //生命值上限\n    useblood: 0,        //生命值\n    att: 6,             //攻击\n    def: 6,             //防御\n    fightN: false,      //是否战斗状态\n    fightA: 0,          //怪物战斗编号\n    fightL: [],         //战斗情况\n    maping: 0,          //当前地图,\n    winN: [],           //杀死怪物列表\n    states: {},         //状态\n    role: [],           //任务\n    roles: [],          //任务进度\n    roleData: [],       //任务数据\n  },\n  settings: {\n    Uplevel: 100,       //等级上限\n    ADD_blood: 1,       //每秒加生命\n    ADD_time: 1000,     //恢复时间(毫秒)\n    ADD_att: 3,         //每升一级加攻击\n    ADD_def: 3,         //每升一级加防御\n    ADD_life: 15,       //每升一级加体力\n    exped: [],          //经验集合\n    map: [],            //地图集合\n    animal: [],         //怪物集合 animal无s\n    people: [],         //人物集合\n    role: [],           //任务集合 核心\n    goods: [],          //物品集合\n  }\n};\n\n// 暂时这样表示，后续会用alasql和graphql操作\ndata.settings.map = [\n  //编号，名称，通往其他地图，怪物编号，人物编号\n  [0, \"村庄\", [1, 2], [0], [0, 1, 2]],\n  [1, \"树林1\", [0, 3], [0, 1], []],\n  [2, \"草丛1\", [0, 4], [0, 1, 2], []],\n  [3, \"树林2\", [1, 5], [2, 4], []],\n  [4, \"草丛2\", [2, 6], [2, 3, 4], []],\n  [5, \"森林1\", [6, 3, 7], [3, 5, 4, 6], []],\n  [6, \"草丛3\", [4, 5], [3, 5], []],\n  [7, \"森林2\", [5, 8], [6, 7, 8], []],\n  [8, \"森林3\", [7, 9], [7, 8], []],\n  [9, \"火山1\", [8, 10], [9], []],\n  [10, \"火山2\", [9], [10], []],\n];\n\ndata.settings.animal = [\n  //名称，级，体，攻，防，金，经，N秒，－N滴血\n  [\"白兔\", 1, 28, 7, 5, 2, 5, 3, 2, \"草\"],\n  [\"小黄狗\", 2, 35, 11, 9, 5, 3, 5, 2, \"土\"],\n  [\"小花蛇\", 3, 42, 14, 12, 9, 6, 3, 5, \"草\"],\n  [\"野猫\", 4, 52, 18, 20, 12, 9, 4, 6, \"土\"],\n  [\"毒蛇\", 6, 78, 25, 27, 18, 14, 5, 8, \"土\"],\n  [\"BOSS-鼠王\", 5, 250, 50, 48, 120, 30, 10, 10, \"BOSS\"],\n  [\"灰鸟\", 8, 102, 32, 34, 28, 20, 8, 9, \"飞\"],\n  [\"白狼\", 9, 141, 40, 35, 39, 28, 10, 9, \"爪\"],\n  [\"BOSS-猎豹\", 10, 500, 100, 100, 300, 50, 20, 20, \"BOSS\"],\n  [\"火鸡\", 11, 182, 45, 40, 43, 34, 15, 5, \"土\"],\n  [\"BOSS-烈焰\", 15, 750, 500, 500, 500, 200, 60, 300, \"BOSS\"],\n];\n\ndata.settings.people = [\n  //编号……所属地图号，常用语言\n  [0, \"村长\", \"罗克先生\", 0, \"我是村长我最大，\\n我的地盘我做主。\\n……\"],\n  [1, \"村长的儿子\", \"摩西\", 0, \"……真无聊。\\n你能和我一起玩吗？\"],\n  [2, \"摩西的玩伴\", \"纳斯\", 0, \"摩西，和我玩吧。\\n你干嘛不理我？\\n呜呜……\"],\n];\n\ndata.settings.role = [\n  // 任务类型，任务名称，任务内容，确定内容，拒绝内容，[所抓怪物ID，怪物数量]，完成内容，回复内容，加金钱，加经验\n  // 类型：0=怪物\n  [\n    [0, \"帮村长抓白兔\", \"我很饿，麻烦你帮我抓三只白兔来。\", \"好吧。\", \"请你找别人吧，我很忙。\", [0, 3], \"谢啦，这下可以吃兔肉了……\", \"不用客气。\", 20, 10],\n    [0, \"小黄狗事件\", \"最近村内很多人被小黄狗咬伤了，请你去处理掉十只。\", \"我马上去。\", \"……恐怕我不行。\", [1, 10], \"你是我们村的大英雄！\", \"这是我应该做的。\", 60, 50]\n  ],\n  [\n    [0, \"逃跑的小白兔\", \"我心爱的一只小白兔逃跑了，你能把它抓来吗？\", \"当然可以。\", \"不行，我可抓不着。\", [0, 1], \"谢谢你！\", \"小菜一碟。\", 15, 10],\n    [0, \"处理小黄狗\", \"我调查了一下，原来是小黄狗把它抓走了，你能帮我吗？\", \"可以。\", \"我现在很累啊。\", [1, 1], \"非常感谢！\", \"用不着这样。\", 12, 15]\n  ],\n  [\n    [0, \"恶毒的小花蛇\", \"小花蛇曾经把我的宠物咬死了，所以……\", \"绝对没问题！\", \"所以什么？\", [2, 1], \"谢谢你……\", \"我能理解你。\", 15, 22]\n  ]\n];\n\ndata.settings.goods = [\n  //0加体力，1加经，2任务，名字，金钱，加的量，所花时间\n  [0, 0, \"小型生命药水\", 8, 20, 4],\n  [1, 0, \"小型生命药水A\", 10, 20, 0],\n  [2, 0, \"中型生命药水\", 25, 50, 5],\n  [3, 0, \"中型生命药水A\", 32, 50, 0],\n  [4, 0, \"大型生命药水\", 50, 100, 10],\n  [5, 0, \"大型生命药水A\", 60, 100, 0],\n  [6, 1, \"小型经验药水\", 150, 60, 2],\n];\n\n//经验值计算\nfor (let i = 1; i <= data.settings.Uplevel; i++) {\n  data.settings.exped[i] = 3 + i * (i + 1) * (i + 2) / 3;\n}\n\ndata.player.useblood = data.player.blood;\ndata.player.exped = data.settings.exped[data.player.level];\ndata.player.role = data.settings.role.map(() => false);\ndata.player.roles = data.settings.role.map(() => 0);\ndata.player.roleData = data.settings.role.map(() => {\n  return {type: -1}\n});\n\nconst store = createStore(data);\n\nexport default store;\n","import store from \"./store\";\n\nexport function setGlobalValue(changes = {}) {\n  store.dispatch({\n    type: \"SET_GLOBAL_VALUE\",\n    payload: {\n      changes: { ...changes }\n    }\n  });\n}\n\n//Abstraction for setting Viewport W and H\nexport function setViewportSize(width, height, mode = \"portrait\") {\n  store.dispatch({\n    type: \"SET_GLOBAL_VALUE\",\n    payload: {\n      changes: {\n        vW: Math.round(width / 100),\n        vH: Math.round(height / 100),\n        viewportMode: mode,\n        viewportWidth: width,\n        viewportHeight: height\n      }\n    }\n  });\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {setViewportSize} from \"../store/global-actions\";\n\nclass Scene extends React.Component {\n  componentWillMount() {\n    this.setViewportModel(this.getViewportModel());\n    //Watch for resizing window:\n    let resizeTimeout;\n    window.onresize = () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        this.setViewportModel(this.getViewportModel());\n      }, 50);\n    };\n  }\n\n  getViewportModel() {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n\n    if (windowWidth <= 600) {\n      //TODO: unsure if this the right call, but basically a media query for <= px\n      //mobile\n      return {\n        width: windowWidth, //TODO: Just use full mobile screen for now. Can cross this bridge later if we have issues\n        height: windowHeight,\n        mode: \"portrait\"\n      };\n    }\n\n    //Get the computed value for //16:9 aspect ratio\n    const windowHeightInRatioFromWidth = Math.round(windowWidth * 0.56);\n\n    //If we can't fit the whole height of the screen, measure using the HEIGHT as the baseline\n    if (windowHeightInRatioFromWidth > windowHeight) {\n      // console.warn('cant fit!');\n      return {\n        width: Math.round(windowHeight * 16.0 / 9.0), //get 16:9 aspect ratio from height\n        height: windowHeight,\n        mode: \"landscape\"\n      };\n    }\n\n    //desktop (with room to fit the computed height):\n    return {\n      width: windowWidth,\n      height: windowHeightInRatioFromWidth, //16:9 aspect ratio\n      mode: \"landscape\"\n    };\n  }\n\n  setViewportModel(viewportModel) {\n    //Apply viewportModel to redux state:\n    const {width, height, mode} = viewportModel;\n    setViewportSize(width, height, mode);\n  }\n\n  render() {\n    //no measurement yet.\n    if (this.props.viewportWidth <= 0 || this.props.viewportHeight <= 0) {\n      return null;\n    }\n\n    const frameStyle = {\n      position: \"relative\",\n      width: this.props.viewportWidth,\n      height: this.props.viewportHeight,\n      // border: \"1px solid red\",\n      margin: \"0 auto\", //In case we need to center a small'ed landscape view\n      overflow: \"hidden\", //?\n\n      //THIS IS THE GLOBAL FONT SIZE. EVERYTHING ELSE SHALL USE \"em\".\n      fontSize:\n        this.props.viewportMode === \"portrait\"\n          ? this.props.vW * 4 //Mobile globalReducer font size\n          : this.props.vW * 2 //Desktop globalReducer font size\n    };\n\n    const className = \"RPGScene--\" + this.props.viewportMode;\n\n    return (\n      <div style={frameStyle} className={className}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    vW: state.global.vW,\n    vH: state.global.vH,\n    viewportMode: state.global.viewportMode,\n    viewportWidth: state.global.viewportWidth,\n    viewportHeight: state.global.viewportHeight\n  };\n})(Scene);\n","export function convertSpeechArrayToTextLineArray(array, userOptions = {}) {\n  //Defaults\n  const options = {\n    defaultTextColor: \"#000\", //The color of text when not explicitly defined by @@color_@@ prefix\n    ...userOptions\n  };\n\n  let delivery = [];\n\n  array.forEach((segment, index) => {\n    if (!segment.match(/@@pause_/)) {\n      let speed = 50;\n      let color = options.defaultTextColor; //default?\n\n      if (segment.match(/^\\[LIGHTNING\\]/i)) {\n        segment = segment.replace(\"[LIGHTNING]\", \"\");\n        speed = 10;\n      }\n      if (segment.match(/^\\[FAST\\]/i)) {\n        segment = segment.replace(\"[FAST]\", \"\");\n        speed = 35;\n      }\n      if (segment.match(/^\\[SLOW\\]/i)) {\n        segment = segment.replace(\"[SLOW]\", \"\");\n        speed = 140;\n      }\n      if (segment.match(/^\\[CRAWL\\]/i)) {\n        segment = segment.replace(\"[CRAWL]\", \"\");\n        speed = 360;\n      }\n\n      //Look for color flag, grab hex and use as the `color` value.\n      if (segment.match(/^@@color_/)) {\n        let extract = segment.match(/@@(.*)@@/).pop();\n        color = extract.replace(\"color_\", \"\"); //grab whatever comes after the `color_...` (expecting a hex, or a preset name)\n\n        segment = segment.replace(`@@${extract}@@`, \"\");\n      }\n\n      const split = segment.split(\"\").map(function(char) {\n        return {\n          color: color,\n          char: char,\n          msToNextChar: char !== \" \" ? speed : 0\n        };\n      });\n      delivery = [...delivery, ...split];\n    } else {\n      const parsedDelay = segment.match(/\\d+/g)[0];\n      delivery = [\n        ...delivery,\n        {\n          color: options.defaultTextColor,\n          char: \" \",\n          msToNextChar: parseInt(parsedDelay, 10)\n        }\n      ];\n    }\n  });\n\n  return delivery;\n}\n","export default {\n  sfx_typeBlip: {\n    src: [\n      \"/sfx/blip.wav\"\n    ],\n    volume: 0.75\n  },\n  sfx_ring: {\n    src: [\n      \"/sfx/ring.mp3\"\n    ],\n    volume: 1\n  }\n};\n","import { Howl } from \"howler\";\nimport Music from \"./music\";\nimport Sfx from \"./sfx\";\n\nlet sfxHowls = {};\nObject.keys(Sfx).forEach(key => {\n  sfxHowls[key] = new Howl(Sfx[key]);\n});\n\nexport default {\n  //SFX\n  currentSong: null,\n  isFirstSongTrigger: false, //default to false\n  currentSongKey: \"\",\n\n  playSong(songKey) {\n\n    //If this song is already playing, bail out so it doesnt start over!\n    if (this.currentSongKey === songKey) {\n      return;\n    }\n\n    //Stop any old song that is playing\n    if (this.currentSong) {\n      this.currentSong.stop();\n      this.currentSong = null; //delete it!\n    }\n\n    //Play the new one!\n    this.currentSongKey = songKey;\n    this.currentSong = new Howl(Music[songKey]);\n\n    //Play the song!\n    this.currentSong.play();\n\n\n  },\n  stopSong() {\n    if (this.currentSong) {\n      this.currentSong.stop();\n    }\n  },\n\n  changeSongVolume(status) {\n    if (this.currentSong) {\n      if (status === \"off\") {\n        this.currentSong.volume(0);\n      }\n      if (status === \"on\") {\n        //NOTE: need to remember old song's initial volume!\n        this.currentSong.volume(Music[this.currentSongKey].volume || 1);\n      }\n    }\n  },\n\n  sfxHowls: sfxHowls,\n\n  //SFX bank\n  playSfx(sfxKey) {\n    sfxHowls[sfxKey].play();\n  }\n};\n","import React from \"react\";\nimport audioManager from \"../../audio/manager\";\n\nclass TextLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.animFrameStep = null; //Keep a reference to the animationFrame step so we can cancel\n    this.state = {\n      revealedIndex: -1 //count upwards\n    };\n  }\n\n  componentDidMount() {\n    this.revealNext(Date.now() + 10); //start X ms after mounting.\n  }\n\n  componentWillUnmount() {\n    //cancel the frame count on unmount\n    cancelAnimationFrame(this.animFrameStep);\n  }\n\n  componentWillReceiveProps(newProps) {\n    //We've received instructions to force the text to the end.\n    if (newProps.isForcedDone) {\n      //Cancel anything that has been called.\n      cancelAnimationFrame(this.animFrameStep);\n\n      //Warp to the end (assuming 999 is far beyond max)\n      this.setState(\n        {\n          revealedIndex: 999\n        },\n        () => {\n          //Then call the final callback\n          if (typeof this.props.onDone === \"function\") {\n            this.props.onDone();\n          }\n        }\n      );\n    }\n  }\n\n  revealNext(targetTimestamp) {\n    //recursive\n\n    let step = () => {\n      if (Date.now() < targetTimestamp) {\n        //Try again next frame and check again\n        this.animFrameStep = requestAnimationFrame(step);\n      } else {\n        //Time to reveal the next character\n\n        const nextIndex = this.state.revealedIndex + 1;\n        this.setState(\n          {\n            revealedIndex: nextIndex\n          },\n          () => {\n            //There is at least anotehr character in the text line...\n            if (nextIndex < this.props.lineData.length - 1) {\n              //Play sound!\n              //TODO: Should this SFX be passed in? So we have options?\n              if (this.props.lineData[nextIndex].char !== \" \") {\n                //don't play on space characters\n                //sfxTypeBlip.play();\n                audioManager.playSfx(\"sfx_typeBlip\");\n              }\n\n              //Call again with updated time delay\n              const msToNextChar = this.props.lineData[nextIndex].msToNextChar;\n              this.revealNext(Date.now() + msToNextChar);\n            } else {\n              //End of the series. Call the passed in callback!\n              if (typeof this.props.onDone === \"function\") {\n                this.props.onDone();\n              }\n            }\n          }\n        );\n      }\n    };\n\n    //Kick off the first step\n    this.animFrameStep = requestAnimationFrame(step);\n  }\n\n  render() {\n    const string = this.props.lineData.map((characterModel, i) => {\n      const style = {\n        opacity: i <= this.state.revealedIndex ? 1 : 0,\n        color: characterModel.color, //will always have a color\n        fontFamily: \"Kaiti\",\n        fontSize: \"24px\"\n      };\n      return (\n        <span key={`txtline_${i}`} style={style}>\n          {characterModel.char}\n        </span>\n      );\n    });\n\n    return (\n      <span>\n        {string}\n      </span>\n    );\n  }\n}\n\nexport default TextLine;\n","import React from \"react\";\nimport TextLine from \"./TextLine\";\n\nclass SkippableTextLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isForcedDone: false\n    };\n  }\n\n  //TODO: Keyboard binding will go here too!\n  handleClick() {\n    this.setState({\n      isForcedDone: true\n    });\n  }\n\n  render() {\n    //Pass in same props that TextLine needs\n    return (\n      <span\n        onClick={this.handleClick.bind(this)}\n        style={this.props.style || {}}\n      >\n        <TextLine\n          isForcedDone={this.state.isForcedDone}\n          lineData={this.props.lineData}\n          onDone={this.props.onDone}\n        />\n      </span>\n    );\n  }\n}\n\nexport default SkippableTextLine;\n","import React from \"react\";\nimport SkippableTextLine from '../text/SkippableTextLine'\n\nclass IntroTextLine extends React.Component {\n  render() {\n    return (\n      <SkippableTextLine\n        lineData={this.props.text}\n        onDone={this.props.onTextComplete.bind(this)}\n      />\n    );\n  }\n}\n\nexport default IntroTextLine;\n","import React from \"react\";\n\nexport default class IntroOverlay extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHidden: false //Is this rendering as 'null' to not block anything\n    }\n  }\n\n  handleTransitionEnd() {\n    if (typeof this.props.onTransitionComplete === \"function\") {\n      this.setState({\n        isHidden: true\n      }, () => {\n        this.props.onTransitionComplete();\n      })\n    }\n  }\n\n\n  render() {\n\n    if (this.state.isHidden) {\n      return null\n    }\n\n    const style = {\n      position: \"absolute\",\n      zIndex: 100,\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      background: `#151825 radial-gradient(50% 105%, rgba(40,48,79,0.00) 52%, rgba(11,15,32,0.70) 100%)`,\n      opacity: this.props.isOpaque ? 1 : 0,\n      transition: \"opacity 1.5s\"\n    };\n\n    return (\n      <div style={style} onTransitionEnd={this.handleTransitionEnd.bind(this)}/>\n    );\n  }\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nclass IntroLaptop extends React.Component {\n\n  getMobileStyle() {\n    const {vH} = this.props;\n    return {\n      height: vH * 30,\n      padding: \"10% 8% 0%\",\n      lineHeight: \"1.8em\"\n    };\n  }\n\n  getDesktopStyle() {\n    const {vH, vW} = this.props;\n    return {\n      width: vW * 88,\n      height: vH * 88,\n      bottom: 0,\n      left: 0,\n      paddingTop: vW * 3,\n      paddingLeft: vW * 3,\n      paddingRight: vW * 3,\n      fontSize: \"1em\",\n      lineHeight: \"2.2em\"\n    };\n  }\n\n  render() {\n    const {viewportMode} = this.props;\n\n    const viewportModeStyles =\n      viewportMode === \"portrait\"\n        ? this.getMobileStyle()\n        : this.getDesktopStyle();\n\n    const style = {\n      position: \"relative\",\n      zIndex: 3,\n\n      backgroundColor: \"#000\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"100%\",\n      ...viewportModeStyles\n    };\n\n    return (\n      <div style={style}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    viewportMode: state.global.viewportMode,\n    vH: state.global.vH,\n    vW: state.global.vW\n    //someProp: state.something.someProp\n  };\n})(IntroLaptop);\n","import React from \"react\";\nimport {Modal, Button, Alert, Input, Icon, message} from \"antd\";\nimport audioManager from \"../../audio/manager\";\n\nclass IntroInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      visible: false,\n      confirmLoading: false,\n      errMsg: '',\n    };\n  }\n\n  componentWillMount() {\n    setTimeout(() => {\n      this.showModal();\n    }, 100);\n  }\n\n  emitEmpty() {\n    this.input.focus();\n    this.setState({text: ''});\n  }\n\n  onChangeUserName(e) {\n    this.setState({text: e.target.value});\n  }\n\n  showModal() {\n    audioManager.playSfx(\"sfx_ring\");\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleNameSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    //Wait a second for effect, then proceed\n    setTimeout(() => {\n      this.props.onNameReceived(this.state.text);\n    }, 100);\n  }\n\n  handleOk() {\n    const {text} = this.state;\n    if (text === '') {\n      message.error('请重新输入');\n      this.setState({\n        errMsg: '名字不能为空',\n      });\n      return;\n    }\n    if (text.length > 10) {\n      message.error('请重新输入');\n      this.setState({\n        errMsg: '名字不能超过10个字符',\n      });\n      return;\n    }\n    this.setState({\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n      message.success('输入成功！');\n      this.handleNameSubmit.call(this);\n    }, 500);\n  }\n\n  render() {\n    const {visible, confirmLoading, text, errMsg} = this.state;\n    const suffix = text ? <Icon type=\"close-circle\" onClick={this.emitEmpty.bind(this)}/> : null;\n    return (\n      <div>\n        <Modal title=\"输入名字\"\n               visible={visible}\n               confirmLoading={confirmLoading}\n               footer={[\n                 <Button key=\"submit\" type=\"primary\" loading={confirmLoading} onClick={this.handleOk.bind(this)}>\n                   确定\n                 </Button>\n               ]}\n        >\n          {\n            errMsg !== '' ? (\n              <p>\n                <Alert message={errMsg} type=\"error\" showIcon/>\n              </p>\n            ) : null\n          }\n          <p>\n            <Input\n              placeholder=\"输入名字\"\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              suffix={suffix}\n              value={text}\n              onChange={this.onChangeUserName.bind(this)}\n              ref={node => this.input = node}\n            />\n          </p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default IntroInput;\n","import store from \"./store\";\n\nexport function setPlayerValue(changes = {}) {\n  store.dispatch({\n    type: \"SET_PLAYER_VALUE\",\n    payload: {\n      changes: { ...changes }\n    }\n  });\n}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {setGlobalValue} from \"../../store/global-actions\";\nimport {convertSpeechArrayToTextLineArray} from \"../text/convert-speech\";\nimport IntroTextLine from \"./IntroTextLine\";\nimport IntroOverlay from \"./IntroOverlay\";\nimport IntroLaptop from \"./IntroLaptop\";\nimport IntroInput from \"./IntroInput\";\nimport {Row, Col} from \"antd\";\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nclass IntroScene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOverlayOpaque: true,\n      isLaptopLowered: false,\n      step: \"fade-out\",\n      nameFromUser: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //First Step: fade out the overlay\n    setTimeout(() => {\n      this.setState({isOverlayOpaque: false})\n    }, 200)\n  }\n\n  //Intro overlay is done fading out, revealing our character and laptop\n  handleOverlayDone() {\n    setTimeout(() => {\n      //Start the intro text\n      this.setState({step: \"intro\"})\n    }, 200)\n  }\n\n  handleNameReceived(nameFromUserInput) {\n    this.setState({\n      step: \"nice-to-meet-you\",\n      nameFromUser: nameFromUserInput\n    });\n    setPlayerValue({\n      name: nameFromUserInput\n    });\n  }\n\n  exitIntro() {\n    setTimeout(() => {\n      setGlobalValue({scene: \"normal\"});\n    }, 600);\n  }\n\n  getIntroText() {\n    return [\n      \"你好！\",\n      \"@@pause_1000@@\",\n      \"欢迎来到\",\n      \"@@color_yellow@@CC RPG WORLD！\",\n      \"@@pause_1000@@\",\n      \"版本 0.1！\",\n      \"@@pause_100@@\",\n    ];\n  }\n\n  getDesktopWrap() {\n    if (this.props.viewportMode === \"portrait\") {\n      return {};\n    }\n    return {\n      width: \"100%\",\n      margin: \"0 auto\"\n    };\n  }\n\n  setNextStep(nextStep, timeout = 1000) {\n    setTimeout(() => {\n      this.setState({step: nextStep});\n    }, timeout);\n  }\n\n  renderContent() {\n    //Step one: INTRO\n    if (this.state.step === \"intro\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        this.getIntroText(), //Returns the proper array of text to use\n        {defaultTextColor: \"#fff\"}\n      );\n      return (\n        <IntroTextLine\n          key=\"1\"\n          text={introText}\n          onTextComplete={this.setNextStep.bind(this, \"intro2\")}\n        />\n      );\n    }\n\n    //Step one: INTRO\n    if (this.state.step === \"intro2\" || this.state.step === \"getName\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        [\"请输入你的名字！\"],\n        {defaultTextColor: \"#fff\"}\n      );\n      return (\n        <IntroTextLine\n          key=\"2\"\n          text={introText}\n          onTextComplete={this.setNextStep.bind(this, \"getName\", 200)}\n        />\n      );\n    }\n\n    if (this.state.step === \"nice-to-meet-you\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        [\n          \"太棒了！\",\n          \"@@pause_1000@@\",\n          \"欢迎光临！\",\n          `@@color_yellow@@${this.state.nameFromUser}`,\n          \"！\",\n        ],\n        {defaultTextColor: \"#fff\"}\n      );\n\n      return (\n        <IntroTextLine\n          key=\"3\"\n          text={introText}\n          onTextComplete={this.setNextStep.bind(this, \"end\")}\n        />\n      );\n    }\n\n    if (this.state.step === \"end\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        [\n          \"现在开始游戏吧！\",\n        ],\n        {defaultTextColor: \"#fff\"}\n      );\n\n      return (\n        <IntroTextLine\n          key=\"4\"\n          text={introText}\n          onTextComplete={this.setNextStep.bind(this, \"wait\")}\n        />\n      );\n    }\n\n    if (this.state.step === \"wait\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        [\n          \"Loading...\",\n        ],\n        {defaultTextColor: \"#fff\"}\n      );\n\n      return (\n        <IntroTextLine\n          key=\"5\"\n          text={introText}\n          onTextComplete={this.setNextStep.bind(this, \"over\")}\n        />\n      );\n    }\n\n    if (this.state.step === \"over\") {\n      this.exitIntro();\n    }\n\n    return null;\n  }\n\n  renderNameModal() {\n    if (this.state.step === \"getName\") {\n      return (\n        <IntroInput\n          onNameReceived={this.handleNameReceived.bind(this)}\n          viewportMode={this.props.viewportMode}\n        />\n      );\n    }\n  }\n\n  render() {\n    const style = {\n      fontSize: this.props.viewportMode === \"portrait\" ? \"0.8em\" : \"0.5em\", //mobile, desktop\n    };\n    const contentStyle = {\n      ...this.getDesktopWrap()\n    };\n\n    return (\n      <div>\n        <IntroOverlay\n          isOpaque={this.state.isOverlayOpaque}\n          onTransitionComplete={this.handleOverlayDone.bind(this)}\n        />\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col style={style}>\n            <div style={contentStyle}>\n              {\n                !this.state.isLaptopLowered ? (\n                  <IntroLaptop>\n                    {this.renderContent()}\n                  </IntroLaptop>\n                ) : null\n              }\n            </div>\n            {this.renderNameModal()}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    viewportMode: state.global.viewportMode,\n  };\n})(IntroScene);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Col, Popover, Progress, Row} from 'antd';\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nclass UIHealthBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addID: setTimeout(this.addBlood.bind(this), this.props.ADD_time)\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.addID >= 0)\n      clearTimeout(this.state.addID);\n  }\n\n  addBlood() {\n    const {blood, useblood} = this.props;\n    if (useblood < 0)\n      return;\n    if (useblood > blood || useblood + this.props.ADD_blood > blood) {\n      setPlayerValue({\n        useblood: blood\n      });\n    } else {\n      setPlayerValue({\n        useblood: useblood + this.props.ADD_blood\n      });\n    }\n    this.setState({\n      addID: setTimeout(this.addBlood.bind(this), this.props.ADD_time)\n    });\n  }\n\n  render() {\n    const {blood, useblood} = this.props;\n    const percent = 100 * useblood / blood;\n    const active = useblood < blood;\n    const info = `${Math.floor(useblood)}/${blood}`;\n    return (\n      <Popover content={info} title=\"生命\">\n        <Row>\n          <Col span={6}>\n            生命：\n          </Col>\n          <Col span={18}>\n            {\n              active ?\n                <Progress percent={percent} showInfo={false} status={percent < 20 ? \"exception\" : \"active\"}/>\n                :\n                <Progress percent={percent} showInfo={false}/>\n            }\n          </Col>\n        </Row>\n      </Popover>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    blood: state.player.blood,\n    useblood: state.player.useblood,\n    ADD_blood: state.settings.ADD_blood,\n    ADD_time: state.settings.ADD_time,\n  };\n})(UIHealthBar);\n","import store from \"./store\";\n\nexport function setSettingsValue(changes = {}) {\n  store.dispatch({\n    type: \"SET_SETTINGS_VALUE\",\n    payload: {\n      changes: { ...changes }\n    }\n  });\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Row, Col, Progress, Popover, message} from 'antd';\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport {setSettingsValue} from \"../../store/settings-actions\";\n\nclass UIExpBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expID: setTimeout(this.checkUpgrade.bind(this), 1000)\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.expID >= 0)\n      clearTimeout(this.state.expID);\n  }\n\n  checkUpgrade() {\n    const {exping, exped, player, Uplevel, Exped, ADD_life, ADD_att, ADD_def, ADD_blood} = this.props;\n    if (exping >= exped && player.level < Uplevel && player.useblood > 0) {\n      if (player.level % 10 === 0) {\n        setSettingsValue({\n          ADD_blood: ADD_blood + 1\n        });\n      }\n      setPlayerValue({\n        level: player.level + 1,\n        blood: player.blood + ADD_life,\n        att: player.att + ADD_att,\n        def: player.def + ADD_def,\n        exping: Math.floor(exping - exped),\n        exped: Exped[player.level],\n      });\n      message.success(`<${player.name}>升到了<${player.level + 1}>级！`);\n    }\n    this.setState({\n      expID: setTimeout(this.checkUpgrade.bind(this), 1000)\n    });\n  }\n\n  render() {\n    const {exping, exped} = this.props;\n    const percent = 100 * exping / exped;\n    const info = `${Math.floor(exping)}/${exped}`;\n    return (\n      <Popover content={info} title=\"经验\">\n        <Row>\n          <Col span={6}>\n        经验：\n          </Col>\n          <Col span={18}>\n            <Progress percent={percent} showInfo={false}/>\n          </Col>\n        </Row>\n      </Popover>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    exping: state.player.exping,\n    exped: state.player.exped,\n    player: state.player,\n    Uplevel: state.settings.Uplevel,\n    Exped: state.settings.exped,\n    ADD_blood: state.settings.ADD_blood,\n    ADD_life: state.settings.ADD_life,\n    ADD_att: state.settings.ADD_att,\n    ADD_def: state.settings.ADD_def,\n  };\n})(UIExpBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Row, Col} from 'antd';\n\nclass UIAttrBar extends React.Component {\n\n  render() {\n    const {level, money, att, def} = this.props;\n    return (\n      <div>\n        <Row>\n          <Col span={6}>\n            等级：\n          </Col>\n          <Col span={18}>\n            {level}\n          </Col>\n        </Row>\n        <Row>\n          <Col span={6}>\n            金钱：\n          </Col>\n          <Col span={18}>\n            ${money}\n          </Col>\n        </Row>\n        <Row>\n          <Col span={6}>\n            攻击：\n          </Col>\n          <Col span={18}>\n            {att}\n          </Col>\n        </Row>\n        <Row>\n          <Col span={6}>\n            防御：\n          </Col>\n          <Col span={18}>\n            {def}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    level: state.player.level,\n    money: state.player.money,\n    att: state.player.att,\n    def: state.player.def,\n  };\n})(UIAttrBar);\n","import _ from \"lodash\";\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nexport function goodTypes(id) {\n  switch (id) {\n    case 0:\n      return \"生命\";\n    case 1:\n      return \"经验\";\n    default:\n      break;\n  }\n  return \"good: unknown id\";\n}\n\nexport function goodTimes(id) {\n  if (id === 0)\n    return \"立即\";\n  return `${id}秒内`;\n}\n\nexport function applyGoodEffect(player, good) {\n  if (good[1] === 0) {\n    setPlayerValue({\n      useblood: _.min([player.blood, player.useblood + good[4] / good[5]])\n    });\n  } else if (good[1] === 1) {\n    setPlayerValue({\n      exping: player.exping + good[4] / good[5]\n    });\n  }\n}\n\nexport function taskType(id) {\n  switch (id) {\n    case 0: return \"打败怪物\";\n    default: break;\n  }\n  return \"task: unknown type\";\n}\n\nexport function randomN() {\n  const rand = (Math.floor(Math.random() * 100));\n  if (rand >= 0 && rand < 50) {\n    return 1;\n  }\n  if (rand >= 50 && rand < 80) {\n    return 2;\n  }\n  if (rand >= 80 && rand < 95) {\n    return 3;\n  }\n  if (rand >= 95 && rand <= 98) {\n    return 5;\n  }\n  if (rand > 98 && rand <= 99) {\n    return 10;\n  }\n}\n\nexport function runN(id) {\n  return Math.floor(Math.random() * id) === 0;\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport {Button, Col, Popover, Progress, Row} from \"antd\";\nimport {applyGoodEffect, goodTimes, goodTypes} from \"./util\";\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nclass UIStateBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkingID: setTimeout(this.checkingTimeout.bind(this), 1000),\n      goodID: -1,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.goodID >= 0)\n      clearTimeout(this.state.goodID);\n    if (this.state.checkingID >= 0)\n      clearTimeout(this.state.checkingID);\n  }\n\n  checkingTimeout() {\n    if (this.props.player.useblood > 0) {\n      if (this.props.states.good != null && this.props.states.good.obj != null && this.state.goodID === -1) {\n        this.setState({\n          goodID: setTimeout(this.goodTimeout.bind(this), 100)\n        });\n      }\n      this.setState({\n        checkingID: setTimeout(this.checkingTimeout.bind(this), 1000)\n      });\n    }\n  }\n\n  goodTimeout() {\n    const {count, all, obj} = this.props.states.good;\n    if (count % 100 === 0)\n      applyGoodEffect(this.props.player, obj);\n    setPlayerValue({\n      states: {\n        good: {\n          obj: obj,\n          count: count + 10,\n          all: all,\n        }\n      }\n    });\n    if (count + 10 <= all) {\n      this.setState({\n        goodID: setTimeout(this.goodTimeout.bind(this), 100)\n      });\n    } else {\n      this.setState({\n        goodID: -1\n      });\n      setPlayerValue({\n        states: {\n          good: null\n        }\n      });\n    }\n  }\n\n  goodState(id, s) {\n    const good = s.obj;\n    const t = goodTypes(good[1]);\n    const percent = 100 * s.count / s.all;\n    const info = (\n      <div>\n        <Row><Col span={8}>进度：</Col><Col span={16}><Progress size=\"small\" percent={percent} width={80} showInfo={false}/></Col></Row>\n        <Row><Col span={8}>类型：</Col><Col span={16}>{t}药水</Col></Row>\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{good[3]}</Col></Row>\n        <Row><Col span={8}>效果：</Col><Col span={16}>{goodTimes(good[5])}增加{good[4]}{t}</Col></Row>\n      </div>\n    );\n    return (\n      <Popover key={`state_${id}`} content={info} title={`状态 -- <${good[2]}>`}>\n        <Button size={\"small\"}>\n          {good[2]}\n        </Button>\n      </Popover>\n    );\n  }\n\n  conv(id) {\n    const {states} = this.props;\n    const s = states[id];\n    if (s === null)\n      return null;\n    switch (id) {\n      case \"good\":\n        return this.goodState(id, s);\n      default:\n        break;\n    }\n    return null;\n  }\n\n  stateList() {\n    const {states} = this.props;\n    const list = _.keys(states).map(this.conv.bind(this)).filter((a) => a !== null);\n    if (list.length === 0)\n      return \"无\";\n    return list;\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col span={6}>\n          状态：\n        </Col>\n        <Col span={18}>\n          {this.stateList()}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    player: state.player,\n    states: state.player.states\n  };\n})(UIStateBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport _ from \"lodash\";\nimport {Button, Col, message, Popover, Progress, Row} from \"antd\";\nimport {taskType} from \"./util\";\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nclass UITaskBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkingID: setTimeout(this.checkingTimeout.bind(this), 1000),\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.checkingID >= 0)\n      clearTimeout(this.state.checkingID);\n  }\n\n  completeTask0(id) {\n    const {roleList, player, role, roles, money, exping} = this.props;\n    const r = roleList[id];\n    const cur = player.roles[id];\n    const task = r[cur];\n    const logs = [\n      `<${player.name}>完成了<${task[1]}>任务！`,\n      `<${player.name}>获得了<$${task[8]}金钱>和<${task[9]}经验>！`\n    ];\n    message.success(logs[0]);\n    message.success(logs[1]);\n    role[id] = false;\n    roles[id]++;\n    setPlayerValue({\n      money: money + task[8],\n      exping: exping + task[9],\n      role: role,\n      roles: roles\n    });\n  }\n\n  checkTask0Info(task) {\n    const {id, count} = task;\n    const {roleData} = this.props;\n    for (let i in roleData) {\n      const r = roleData[i];\n      if (r.type === 0 && r.id === id) {\n        roleData[i].count = count + r.count;\n        if (roleData[i].count >= r.all) {\n          roleData[i] = {type: -1};\n          this.completeTask0(i);\n          return;\n        }\n      }\n    }\n    setPlayerValue({\n      roleData: roleData\n    });\n  }\n\n  checkTask0() {\n    const {winN} = this.props;\n    if (winN.length > 0) {\n      _(winN).forEach(this.checkTask0Info.bind(this));\n      setTimeout(() => setPlayerValue({\n        winN: []\n      }), 0);\n    }\n  }\n\n  checkTask() {\n    this.checkTask0();\n  }\n\n  checkingTimeout() {\n    if (this.props.player.useblood > 0) {\n      this.checkTask();\n      this.setState({\n        checkingID: setTimeout(this.checkingTimeout.bind(this), 1000)\n      });\n    }\n  }\n\n  taskTarget0(task) {\n    const [id, num] = task[5];\n    const ani = this.props.animal[id];\n    return `打败<${num}>只<${ani[0]}>`;\n  }\n\n  taskTarget(task) {\n    switch (task[0]) {\n      case 0:\n        return this.taskTarget0(task);\n      default:\n        break;\n    }\n    return \"task: unknown target\";\n  }\n\n  taskProgress0(role, task) {\n    const {all, count} = role;\n    return Math.floor(100 * count / all);\n  }\n\n  taskProgress(role, task) {\n    switch (task[0]) {\n      case 0:\n        return this.taskProgress0(role, task);\n      default:\n        break;\n    }\n    return \"task: unknown progress\";\n  }\n\n  taskInfo0(id, cur, task) {\n    const {people, roleData} = this.props;\n    const peo = people[id];\n    const percent = this.taskProgress(roleData[id], task);\n    const info = (\n      <div>\n        <Row><Col span={8}>人物：</Col><Col span={16}><b>{peo[1]} - {peo[2]}</b></Col></Row>\n        <Row><Col span={8}>类型：</Col><Col span={16}><b>{taskType(task[0])}</b></Col></Row>\n        <Row><Col span={8}>目标：</Col><Col span={16}><b>{this.taskTarget(task)}</b></Col></Row>\n        <Row><Col span={8}>奖励：</Col><Col span={16}><b>&lt;${task[8]}&gt;金钱</b><br/><b>&lt;{task[9]}&gt;经验</b></Col></Row>\n        <Row><Col span={8}>进度：</Col><Col span={16}><Progress type=\"circle\" size=\"small\" percent={percent} width={40}/></Col></Row>\n      </div>\n    );\n    return (\n      <Popover key={`tasks_${id}_${cur}`} content={info} title={`任务 -- <${task[1]}>`}>\n        <Button size={\"small\"}>\n          {task[1]}\n        </Button>\n      </Popover>\n    );\n  }\n\n  conv(id) {\n    const {roleList, player} = this.props;\n    const r = roleList[id];\n    const cur = player.roles[id];\n    const task = r[cur];\n    switch (task[0]) {\n      case 0:\n        return this.taskInfo0(id, cur, task);\n      default:\n        break;\n    }\n    return \"task: unknown type\";\n  }\n\n  taskList() {\n    const {role} = this.props;\n    const list = _.chain(role)\n      .map((a, idx) => [a, idx])\n      .filter((a) => a[0])\n      .map((a) => a[1])\n      .map(this.conv.bind(this))\n      .value();\n    if (list.length === 0)\n      return \"无\";\n    return list;\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col span={6}>\n          任务：\n        </Col>\n        <Col span={18}>\n          {this.taskList()}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    player: state.player,\n    money: state.player.money,\n    exping: state.player.exping,\n    winN: state.player.winN,\n    role: state.player.role,\n    roles: state.player.roles,\n    roleData: state.player.roleData,\n    roleList: state.settings.role,\n    people: state.settings.people,\n    animal: state.settings.animal,\n  };\n})(UITaskBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Col} from 'antd';\nimport UIHealthBar from \"./UIHealthBar\";\nimport UIExpBar from \"./UIExpBar\";\nimport UIAttrBar from \"./UIAttrBar\";\nimport UIStateBar from \"./UIStateBar\";\nimport UITaskBar from \"./UITaskBar\";\n\nclass UIPlayerInfo extends React.Component {\n\n  render() {\n    return (\n      <Col span={8}>\n        <Card\n          title={`人物信息 -- <${this.props.userName}>`}\n          style={{height: \"300px\"}}\n        >\n          <UIAttrBar/>\n          <UIHealthBar/>\n          <UIExpBar/>\n          <UIStateBar/>\n          <UITaskBar/>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    userName: state.player.name,\n  };\n})(UIPlayerInfo);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Col, Radio, Row} from 'antd';\nimport _ from 'lodash';\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nclass UIMapBar extends React.Component {\n\n  onChange(e) {\n    setPlayerValue({\n      maping: e.target.value\n    });\n  }\n\n  render() {\n    const {maping, map} = this.props;\n    const ids = _(map[maping][2]).map((id) => {\n      return <RadioButton key={`map_${id}`} value={id}>{map[id][1]}</RadioButton>\n    }).value();\n    return (\n      <div>\n        <Row>\n          <Col span={4}>\n            通往：\n          </Col>\n          <Col>\n            <RadioGroup onChange={this.onChange.bind(this)}>\n              {ids}\n            </RadioGroup>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    maping: state.player.maping,\n    map: state.settings.map,\n  };\n})(UIMapBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Button, Modal, Input, Col, Popover, Radio, Row, InputNumber, Slider} from 'antd';\nimport _ from 'lodash';\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport {setSettingsValue} from \"../../store/settings-actions\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nclass UIAnimalBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editAnimalId: -1,\n      editAnimalObject: null\n    };\n  }\n\n\n  onChange(e) {\n    const id = e.target.value;\n    setPlayerValue({\n      fightN: true,\n      fightA: id,\n    });\n  }\n\n  editAnimal(id) {\n    const {animal} = this.props;\n    this.setState({\n      editAnimalId: id,\n      editAnimalObject: animal[id]\n    });\n  }\n\n  handleAnimalEditorOk() {\n    const {animal} = this.props;\n    const {editAnimalId} = this.state;\n    animal[editAnimalId] = this.state.editAnimalObject;\n    setSettingsValue({\n      animal: animal\n    });\n    this.setState({\n      editAnimalId: -1\n    });\n  }\n\n  handleAnimalEditorCancel() {\n    this.setState({\n      editAnimalId: -1\n    });\n  }\n\n  handleAnimalEditorChange(type, e) {\n    const {editAnimalObject} = this.state;\n    if (!e)\n      return false;\n    const newValue = e.target ? e.target.value : e;\n    if (!newValue)\n      return false;\n    editAnimalObject[type] = newValue;\n    this.setState({\n      editAnimalObject: editAnimalObject\n    });\n  }\n\n  renderAnimalEditor() {\n    const {animal} = this.props;\n    const {editAnimalId} = this.state;\n    const ani = animal[editAnimalId];\n    return <div>\n      <Modal title={`修改怪物信息 -- ${ani[0]}`}\n             visible={true}\n             onCancel={this.handleAnimalEditorCancel.bind(this)}\n             footer={[\n               <Button key=\"submit\" type=\"primary\" onClick={this.handleAnimalEditorOk.bind(this)}>\n                 确定\n               </Button>\n             ]}>\n        <div>\n          <Row>\n            <Col span={4}>名称：</Col>\n            <Col span={8}>\n              <Input placeholder=\"怪物名称\" defaultValue={ani[0]}\n                     onChange={this.handleAnimalEditorChange.bind(this, 0)}/>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>等级：</Col>\n            <Col span={8}>\n              <InputNumber placeholder=\"怪物等级\" defaultValue={ani[1]}\n                           min={1} max={100}\n                           onChange={this.handleAnimalEditorChange.bind(this, 1)}/>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>属性：</Col>\n            <Col span={8}>\n              <Input placeholder=\"怪物属性\" defaultValue={ani[9]}\n                     onChange={this.handleAnimalEditorChange.bind(this, 9)}\n                     addonAfter=\"系\"/>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>攻击：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物攻击\"\n                           min={1} max={ani[1] * 10}\n                           value={this.state.editAnimalObject[3]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 3)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 3)}\n                value={this.state.editAnimalObject[3]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>防御：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物防御\"\n                           min={1} max={ani[1] * 10}\n                           value={this.state.editAnimalObject[4]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 4)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 4)}\n                value={this.state.editAnimalObject[4]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>生命：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物生命\"\n                           min={1} max={ani[9] === 'BOSS' ? (ani[1] * 50) : ani[1] * 10}\n                           value={this.state.editAnimalObject[2]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 2)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[9] === 'BOSS' ? (ani[1] * 50) : ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 2)}\n                value={this.state.editAnimalObject[2]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>金钱：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物金钱\"\n                           min={1} max={ani[9] === 'BOSS' ? (ani[1] * 50) : ani[1] * 10}\n                           value={this.state.editAnimalObject[5]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 5)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[9] === 'BOSS' ? (ani[1] * 50) : ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 5)}\n                value={this.state.editAnimalObject[5]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>经验：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物经验\"\n                           min={1} max={ani[9] === 'BOSS' ? (ani[1] * 20) : ani[1] * 10}\n                           value={this.state.editAnimalObject[6]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 6)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[9] === 'BOSS' ? (ani[1] * 20) : ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 6)}\n                value={this.state.editAnimalObject[6]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>魔法：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物魔法\"\n                           min={1} max={ani[9] === 'BOSS' ? (ani[1] * 20) : ani[1] * 10}\n                           value={this.state.editAnimalObject[8]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 8)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[9] === 'BOSS' ? (ani[1] * 20) : ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 8)}\n                value={this.state.editAnimalObject[8]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>魔法时间：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"怪物魔法时间\"\n                           min={1} max={ani[9] === 'BOSS' ? (ani[1] * 10) : ani[1] * 10}\n                           value={this.state.editAnimalObject[7]}\n                           onChange={this.handleAnimalEditorChange.bind(this, 7)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={ani[9] === 'BOSS' ? (ani[1] * 10) : ani[1] * 10}\n                onChange={this.handleAnimalEditorChange.bind(this, 7)}\n                value={this.state.editAnimalObject[7]}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n    </div>;\n  }\n\n  info(id) {\n    const {animal} = this.props;\n    const ani = animal[id];\n    return (\n      <div>\n        <Row><Col span={8}>属性：</Col><Col span={16}>{ani[1]}级-{ani[9]}系</Col></Row>\n        <Row><Col span={8}>攻击：</Col><Col span={16}>{ani[3]}</Col></Row>\n        <Row><Col span={8}>防御：</Col><Col span={16}>{ani[4]}</Col></Row>\n        <Row><Col span={8}>生命：</Col><Col span={16}>{ani[2]}</Col></Row>\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{ani[5]}</Col></Row>\n        <Row><Col span={8}>经验：</Col><Col span={16}>{ani[6]}</Col></Row>\n        <Row><Col span={8}>魔法：</Col><Col span={16}>{ani[7]}秒{ani[8]}伤害</Col></Row>\n        <hr/>\n        <Row><Col span={8}><Button size={\"small\"} onClick={this.editAnimal.bind(this, id)}>修改怪物信息</Button></Col></Row>\n      </div>);\n  }\n\n  render() {\n    const {maping, map, animal} = this.props;\n    if (map[maping][3].length === 0)\n      return null;\n    const ids = _(map[maping][3]).map((id) => {\n      const ani = animal[id];\n      return (\n        <Popover key={`animal_${id}`} content={this.info(id)} title={`怪物信息 - <${ani[0]}>`}>\n          <RadioButton value={id}>{ani[0]}</RadioButton>\n        </Popover>\n      )\n    }).value();\n    return (\n      <div>\n        <Row>\n          <Col span={4}>\n            怪物：\n          </Col>\n          <Col>\n            <RadioGroup onChange={this.onChange.bind(this)}>\n              {ids}\n            </RadioGroup>\n          </Col>\n        </Row>\n        {\n          this.state.editAnimalId >= 0 ? this.renderAnimalEditor() : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    maping: state.player.maping,\n    map: state.settings.map,\n    animal: state.settings.animal,\n  };\n})(UIAnimalBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Col, Modal, Popover, Radio, Row, message, Progress} from 'antd';\nimport _ from 'lodash';\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport {taskType} from \"./util\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nclass UIPeopleBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: -1,\n      hidden: false,\n      count: 0,\n      hiddenID: -1,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.hiddenID >= 0)\n      clearTimeout(this.state.hiddenID);\n  }\n\n  onChange(e) {\n    const id = e.target.value;\n    const {role} = this.props.player;\n    if (role[id]) {\n      message.error(\"你当前已有任务在身！\");\n      return null;\n    }\n    const r = this.props.role[id];\n    const cur = this.props.player.roles[id];\n    if (cur >= r.length) {\n      message.warning(\"没有更多任务了！\");\n      return null;\n    }\n    this.setState({\n      id: id,\n      visible: true,\n    });\n  }\n\n  reloading() {\n    if (this.state.count < 100) {\n      this.setState({\n        count: this.state.count + 10,\n        hidden: true,\n        hiddenID: setTimeout(this.reloading.bind(this), 100),\n      });\n    } else {\n      this.setState({\n        hidden: false,\n        count: 0,\n        hiddenID: -1,\n      });\n    }\n  }\n\n  reload() {\n    this.setState({\n      hidden: true,\n      hiddenID: setTimeout(this.reloading.bind(this), 100),\n    });\n  }\n\n  initTask0(task) {\n    return {\n      type: 0,\n      id: task[5][0],\n      all: task[5][1],\n      count: 0,\n    };\n  }\n\n  initTask(id, task) {\n    switch (task[0]) {\n      case 0: return this.initTask0(task);\n      default: break;\n    }\n    return null;\n  }\n\n  initTaskData(id, task) {\n    const {roleData} = this.props;\n    roleData[id] = this.initTask(id, task);\n    return roleData;\n  }\n\n  handleTask() {\n    const {id} = this.state;\n    const r = this.props.role[id];\n    const cur = this.props.player.roles[id];\n    const task = r[cur];\n    const role = this.props.player.role;\n    role[id] = true;\n    setPlayerValue({\n      role: role,\n      roleData: this.initTaskData(id, task)\n    });\n  }\n\n  handleOk() {\n    this.handleTask();\n    this.setState({\n      visible: false,\n    });\n    this.reload();\n  }\n\n  handleCancel() {\n    this.setState({\n      id: -1,\n      visible: false,\n    });\n    this.reload();\n  }\n\n  taskInfo0(task) {\n    const [id, num] = task[5];\n    const ani = this.props.animal[id];\n    return `打败<${num}>只<${ani[0]}>`;\n  }\n\n  taskInfo(task) {\n    switch (task[0]) {\n      case 0: return this.taskInfo0(task);\n      default: break;\n    }\n    return \"task: unknown info\";\n  }\n\n  talk() {\n    if (this.state.id >= 0) {\n      const {role, people, player} = this.props;\n      const r = role[this.state.id];\n      const p = people[this.state.id];\n      const cur = player.roles[this.state.id];\n      if (cur >= r.length) {\n        message.warning(\"没有更多任务了！\");\n        return null;\n      }\n      const task = r[cur];\n      return (\n        <Modal title={`与<${p[1]} - ${p[2]}>对话中 —— **${task[1]}**`}\n               visible={this.state.visible}\n               onOk={this.handleOk.bind(this)}\n               onCancel={this.handleCancel.bind(this)}\n               okText={task[3]}\n               cancelText={task[4]}>\n          <p>\n            {task[2]}\n          </p>\n          <br/>\n          <br/>\n          <br/>\n          <hr/>\n          <p>\n            任务类型：<b>{taskType(task[0])}</b>\n          </p>\n          <p>\n            任务目标：<b>{this.taskInfo(task)}</b>\n          </p>\n          <p>\n            任务奖励：<b>&lt;${task[8]}&gt;金钱</b>和<b>&lt;{task[9]}&gt;经验</b>\n          </p>\n        </Modal>);\n    }\n    return null;\n  }\n\n  conv(id, txt) {\n    return _(txt.split(/\\n/)).map((a, idx) => <p key={`people_${id}_${idx}`}>{a}</p>).value();\n  }\n\n  render() {\n    const {maping, map, people} = this.props;\n    if (map[maping][4].length === 0)\n      return null;\n    const ids = _(map[maping][4]).map((id) => {\n      const peo = people[id];\n      return (\n        <Popover key={`people_${id}`} content={this.conv(id, peo[4])} title={`<${peo[1]}> - <${peo[2]}>`}>\n          <RadioButton value={id}>{peo[2]}</RadioButton>\n        </Popover>\n      )\n    }).value();\n    return (\n      <div>\n        <Row>\n          <Col span={4}>\n            NPC：\n          </Col>\n          <Col>\n            {\n              this.state.hidden ? <Row>\n                  <Col span={8}>\n                    准备中...\n                  </Col>\n                  <Col span={8}>\n                    <Progress percent={this.state.count}\n                              status=\"active\"\n                              showInfo={false}\n                    />\n                  </Col>\n                </Row>\n                :\n                <RadioGroup onChange={this.onChange.bind(this)}>\n                  {ids}\n                </RadioGroup>\n            }\n          </Col>\n        </Row>\n        {this.talk()}\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    maping: state.player.maping,\n    player: state.player,\n    roleData: state.player.roleData,\n    map: state.settings.map,\n    role: state.settings.role,\n    animal: state.settings.animal,\n    people: state.settings.people,\n  };\n})(UIPeopleBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Col} from 'antd';\nimport UIMapBar from \"./UIMapBar\";\nimport UIAnimalBar from \"./UIAnimalBar\";\nimport UIPeopleBar from \"./UIPeopleBar\";\n\nclass UIPlayerInfo extends React.Component {\n\n  getMapName() {\n    const {maping, map} = this.props;\n    return map[maping][1];\n  }\n\n  render() {\n    return (\n      <Col span={8}>\n        <Card\n          title={`当前地图 -- <${this.getMapName()}>`}\n          style={{height: \"300px\"}}\n        >\n          <UIMapBar/>\n          <br/>\n          <UIPeopleBar/>\n          <br/>\n          <UIAnimalBar/>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    maping: state.player.maping,\n    map: state.settings.map,\n  };\n})(UIPlayerInfo);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Col, message, Popover, Radio, Row, Spin, Progress, Modal, Button, Input, Select, InputNumber, Slider} from 'antd';\nimport _ from 'lodash';\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport {applyGoodEffect, goodTimes, goodTypes} from \"./util\";\nimport {setSettingsValue} from \"../../store/settings-actions\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\n\nclass UIGoodBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {good} = this.props.player.states;\n    if (good != null) {\n      if (good.obj == null) {\n        return;\n      }\n      const {obj, count, all} = good;\n      this.state = {\n        obj: obj,\n        count: count,\n        all: all,\n        goodID: setTimeout(this.rec2.bind(this), 1000),\n        editGoodId: -1,\n        editGoodObject: null\n      };\n    } else {\n      this.state = {\n        hidden: false,\n        obj: null,\n        count: 0,\n        all: 100,\n        goodID: -1,\n        editGoodId: -1,\n        editGoodObject: null\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.goodID >= 0)\n      clearTimeout(this.state.goodID);\n  }\n\n  rec1() {\n    const {count, all} = this.state;\n    this.setState({\n      count: count + 10,\n    });\n    if (count <= all) {\n      this.setState({\n        goodID: setTimeout(this.rec1.bind(this), 100)\n      });\n    } else {\n      this.setState({\n        hidden: false,\n        count: 0,\n        all: 100,\n      });\n    }\n  }\n\n  rec2() {\n    const {count, all} = this.state;\n    this.setState({\n      count: count + 10,\n    });\n    if (count + 10 <= all && this.props.player.useblood > 0) {\n      this.setState({\n        goodID: setTimeout(this.rec2.bind(this), 100)\n      });\n    } else {\n      this.setState({\n        hidden: false,\n        count: 0,\n        all: 100,\n      });\n    }\n  }\n\n  onChange(e) {\n    const {money, goods} = this.props;\n    const id = e.target.value;\n    const good = goods[id];\n    this.setState({\n      hidden: true,\n    });\n    if (money < good[3])\n      return;\n    setPlayerValue({\n      money: money - good[3]\n    });\n    message.success(`购买<${good[2]}>成功！`);\n    if (good[5] === 0) {\n      this.setState({\n        goodID: setTimeout(this.rec1.bind(this), 100)\n      });\n      applyGoodEffect(this.props.player, good);\n      message.success(`${goodTypes(good[1])}增加${good[4]}！`);\n    } else {\n      this.setState({\n        count: 0,\n        all: 100 * good[5],\n      });\n      setPlayerValue({\n        states: {\n          good: {\n            obj: good,\n            count: 0,\n            all: 100 * good[5],\n          }\n        }\n      });\n      this.setState({\n        goodID: setTimeout(this.rec2.bind(this), 100)\n      });\n    }\n  }\n\n  editGood(id) {\n    const {goods} = this.props;\n    this.setState({\n      editGoodId: id,\n      editGoodObject: goods[id]\n    });\n  }\n\n  handleGoodEditorOk() {\n    const {goods} = this.props;\n    const {editGoodId} = this.state;\n    goods[editGoodId] = this.state.editGoodObject;\n    setSettingsValue({\n      goods: goods\n    });\n    this.setState({\n      editGoodId: -1\n    });\n  }\n\n  handleGoodEditorCancel() {\n    this.setState({\n      editGoodId: -1\n    });\n  }\n\n  handleGoodEditorChange(type, e) {\n    const {editGoodObject} = this.state;\n    if (!e)\n      return false;\n    const newValue = e.target ? e.target.value : e;\n    if (!newValue)\n      return false;\n    editGoodObject[type] = newValue;\n    this.setState({\n      editGoodObject: editGoodObject\n    });\n  }\n\n  renderGoodEditor() {\n    const {goods} = this.props;\n    const {editGoodId} = this.state;\n    const good = goods[editGoodId];\n    return <div>\n      <Modal title={`修改物品信息 -- ${good[2]}`}\n             visible={true}\n             onCancel={this.handleGoodEditorCancel.bind(this)}\n             footer={[\n               <Button key=\"submit\" type=\"primary\" onClick={this.handleGoodEditorOk.bind(this)}>\n                 确定\n               </Button>\n             ]}>\n        <div>\n          <Row>\n            <Col span={4}>名称：</Col>\n            <Col span={8}>\n              <Input placeholder=\"物品名称\" defaultValue={good[2]}\n                     onChange={this.handleGoodEditorChange.bind(this, 2)}/>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>类别：</Col>\n            <Col span={8}>\n              <Select defaultValue={good[1]} style={{ width: 120 }} onChange={this.handleGoodEditorChange.bind(this, 1)}>\n                <Option value={0}>生命</Option>\n                <Option value={1}>经验</Option>\n                <Option value={2} disabled>任务</Option>\n              </Select>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>金钱：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"物品金钱\"\n                           min={1} max={1000}\n                           value={this.state.editGoodObject[3]}\n                           onChange={this.handleGoodEditorChange.bind(this, 3)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={1000}\n                onChange={this.handleGoodEditorChange.bind(this, 3)}\n                value={this.state.editGoodObject[3]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>效果：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"物品增益\"\n                           min={1} max={1000}\n                           value={this.state.editGoodObject[4]}\n                           onChange={this.handleGoodEditorChange.bind(this, 4)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={1} max={1000}\n                onChange={this.handleGoodEditorChange.bind(this, 4)}\n                value={this.state.editGoodObject[4]}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={4}>时间：</Col>\n            <Col span={4}>\n              <InputNumber placeholder=\"物品时间\"\n                           min={0} max={600}\n                           value={this.state.editGoodObject[5]}\n                           onChange={this.handleGoodEditorChange.bind(this, 5)}/>\n            </Col>\n            <Col span={8} offset={2}>\n              <Slider\n                min={0} max={600}\n                onChange={this.handleGoodEditorChange.bind(this, 5)}\n                value={this.state.editGoodObject[5]}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal>\n    </div>;\n  }\n\n  conv(good) {\n    const t = goodTypes(good[1]);\n    return (\n      <div>\n        <Row><Col span={8}>类型：</Col><Col span={16}>{t}药水</Col></Row>\n        <Row><Col span={8}>金钱：</Col><Col span={16}>{good[3]}</Col></Row>\n        <Row><Col span={8}>效果：</Col><Col span={16}>{goodTimes(good[5])}增加{good[4]}{t}</Col></Row>\n        <hr/>\n        <Row><Col span={8}><Button size={\"small\"}\n                                   onClick={this.editGood.bind(this, good[0])}>修改物品信息</Button></Col></Row>\n      </div>);\n  }\n\n  render() {\n    const {money, goods} = this.props;\n    if (goods.length === 0)\n      return null;\n    const ids = _(goods).map((good) => {\n      const id = good[0];\n      return (\n        money < good[3] ?\n          <RadioButton key={`good_${id}`} disabled={true} value={id}>{good[2]}</RadioButton>\n          :\n          <Popover key={`good_${id}`} content={this.conv(good)} title={`物品信息 -- <${good[2]}>`}>\n            <RadioButton value={id}>{good[2]}</RadioButton>\n          </Popover>\n      )\n    }).value();\n    if (this.state.hidden) {\n      return <Row>\n        <Col>\n          <Progress percent={100 * this.state.count / this.state.all}\n                    status=\"active\"\n                    showInfo={false}/>\n        </Col>\n        <br/>\n        <Col>\n          <Spin/>&emsp;准备中...\n        </Col>\n      </Row>;\n    }\n    return (\n      <div>\n        <Row>\n          <Col>\n            <RadioGroup onChange={this.onChange.bind(this)}>\n              {ids}\n            </RadioGroup>\n          </Col>\n        </Row>\n        {\n          this.state.editGoodId >= 0 ? this.renderGoodEditor() : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    player: state.player,\n    money: state.player.money,\n    goods: state.settings.goods,\n  };\n})(UIGoodBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Col} from 'antd';\nimport UIGoodBar from \"./UIGoodBar\";\n\nclass UIGoodInfo extends React.Component {\n\n  render() {\n    return (\n      <Col span={8}>\n        <Card\n          title=\"商店\"\n          style={{height: \"300px\"}}\n        >\n          <UIGoodBar/>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n  };\n})(UIGoodInfo);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Button, message} from 'antd';\nimport {randomN, runN} from \"./util\";\nimport {setPlayerValue} from \"../../store/player-actions\";\n\nclass UIFightRunBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable: true,\n      showID: -1,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.showID)\n      clearTimeout(this.state.showID);\n  }\n\n  reload() {\n    this.setState({\n      enable: true,\n      showID: -1,\n    });\n  }\n\n  onClick() {\n    if (!this.state.enable)\n      return;\n    if (runN(4 + randomN())) {\n      message.success(\"逃跑成功！\");\n      setPlayerValue({\n        fightN: false,\n        fightA: 0,\n        fightL: [],\n        winN: [],\n      });\n    } else {\n      message.error(\"逃跑失败！\");\n      this.setState({\n        enable: false,\n        showID: setTimeout(this.reload.bind(this), 5000)\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Button type=\"primary\" loading={!this.state.enable} onClick={this.onClick.bind(this)}>\n        逃跑\n      </Button>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {};\n})(UIFightRunBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Col, message, Progress, Row} from 'antd';\nimport _ from \"lodash\";\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport {randomN} from \"./util\";\nimport UIFightRunBar from \"./UIFightRunBar\";\n\nclass UIFightBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {player, animal} = this.props;\n    const ani = animal[player.fightA];\n    this.state = {\n      ani: ani,\n      blood: ani[2],\n      magic: ani[7],\n      magicID: -1,\n      playerID: -1,\n      animalID: -1,\n      overID: -1,\n    };\n    this.addFightLog(1, `<${player.name}>与<${ani[0]}>开始交战！`);\n    setTimeout(this.combat.bind(this), 100);\n  }\n\n  componentWillUnmount() {\n    const {magicID, playerID, animalID, overID} = this.state;\n    if (magicID >= 0)\n      clearTimeout(magicID);\n    if (playerID >= 0)\n      clearTimeout(playerID);\n    if (animalID >= 0)\n      clearTimeout(animalID);\n    if (overID >= 0)\n      clearTimeout(overID);\n  }\n\n  combat() {\n    const {player, animal} = this.props;\n    const ani = animal[player.fightA];\n    this.addFightLog(1,\n      `<${player.name}>将在${ani[7]}秒内受到<${ani[0]}>${ani[7] * ani[8]}点魔法伤害！`);\n    this.setState({\n      magicID: setTimeout(this.magicCombat.bind(this), 1000)\n    });\n    setTimeout(this.physicalCombat.bind(this), 0);\n  }\n\n  magicCombat() {\n    const {player, animal} = this.props;\n    const ani = animal[player.fightA];\n    if (this.state.magic > 0) {\n      if (player.useblood <= ani[8])\n        return;\n      setPlayerValue({\n        useblood: player.useblood - ani[8]\n      });\n      this.addFightLog(2,\n        `<${player.name}>受到<${ani[0]}>${ani[8]}点魔法伤害！`);\n      this.setState({\n        magic: this.state.magic - 1,\n        magicID: setTimeout(this.magicCombat.bind(this), 1000)\n      });\n    }\n  }\n\n  physicalCombat() {\n    this.setState({\n      playerID: setTimeout(this.playerCombat.bind(this), 100)\n    });\n  }\n\n  playerCombat() {\n    const {player, animal} = this.props;\n    const ani = animal[player.fightA];\n    const att = _.max([0, player.att + randomN() - ani[4]]);\n    if (att > 0)\n      this.addFightLog(0,\n        `<${ani[0]}>受到<${player.name}>${att}点物理伤害！`);\n    else\n      this.addFightLog(1,\n        `<${ani[0]}>成功躲过了<${player.name}>的攻击！`);\n    this.setState({\n      blood: this.state.blood - att\n    });\n    if (player.useblood > 0 && !this.checkCombatFinish())\n      this.setState({\n        animalID: setTimeout(this.animalCombat.bind(this), 1000)\n      });\n  }\n\n  animalCombat() {\n    const {player, animal} = this.props;\n    const ani = animal[player.fightA];\n    const att = _.max([0, ani[3] + randomN() - player.def]);\n    if (att > 0)\n      this.addFightLog(2,\n        `<${player.name}>受到<${ani[0]}>${att}点物理伤害！`);\n    else\n      this.addFightLog(1,\n        `<${player.name}>成功躲过了<${ani[0]}>的攻击！`);\n    setPlayerValue({\n      useblood: player.useblood - att\n    });\n    if (player.useblood > att)\n      this.setState({\n        playerID: setTimeout(this.playerCombat.bind(this), 1000)\n      });\n  }\n\n  checkCombatFinish() {\n    if (this.state.blood < 0) {\n      setTimeout(this.combatOver.bind(this), 100);\n      return true;\n    }\n    return false;\n  }\n\n  combatOver() {\n    const {player, animal, winN} = this.props;\n    const ani = animal[player.fightA];\n    const money = ani[5] + Math.floor(randomN() / 2);\n    const exp = ani[6] + Math.floor(randomN() / 2);\n    const logs = [\n      `<${player.name}>打败了<${ani[0]}>！`,\n      `<${player.name}>获得了<$${money}金钱>和<${exp}经验>！`\n    ];\n    this.addFightLog(0, logs[0]);\n    message.success(logs[0]);\n    this.addFightLog(0, logs[1]);\n    message.success(logs[1]);\n    winN.push({\n      id: player.fightA,\n      count: 1,\n    });\n    setPlayerValue({\n      winN: winN,\n      money: player.money + money,\n      exping: player.exping + exp,\n    });\n    this.setState({\n      overID: setTimeout(() => {\n        setPlayerValue({\n          fightN: false,\n          fightA: 0,\n          fightL: [],\n        });\n      }, 2000)\n    });\n  }\n\n  addFightLog(id, txt) {\n    const {player} = this.props;\n    let fightL = player.fightL || [];\n    if (fightL.length > 4) {\n      fightL.pop();\n    }\n    setPlayerValue({\n      fightL: [[id, txt], ...fightL]\n    });\n  }\n\n  render() {\n    const {ani, blood} = this.state;\n    const percent = 100 * blood / ani[2];\n    return (\n      <div>\n        <Row><Col span={6}>属性：</Col><Col span={18}>{ani[1]}级-{ani[9]}系</Col></Row>\n        <Row><Col span={6}>金钱：</Col><Col span={18}>${ani[5]}</Col></Row>\n        <Row><Col span={6}>攻击：</Col><Col span={18}>{ani[3]}</Col></Row>\n        <Row><Col span={6}>防御：</Col><Col span={18}>{ani[4]}</Col></Row>\n        <Row><Col span={6}>生命：</Col><Col span={18}><Progress percent={percent} showInfo={false}/></Col></Row>\n        <Row><Col span={6}>经验：</Col><Col span={18}>{ani[6]}</Col></Row>\n        <br/>\n        <UIFightRunBar/>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    player: state.player,\n    animal: state.settings.animal,\n    winN: state.player.winN,\n  };\n})(UIFightBar);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Col} from 'antd';\nimport UIFightBar from \"./UIFightBar\";\n\nclass UIFightInfo extends React.Component {\n\n  render() {\n    const {fightA, animal} = this.props;\n    const ani = animal[fightA];\n    return (\n      <Col span={8}>\n        <Card\n          title={`怪物信息 -- <${ani[0]}>`}\n          style={{height: \"300px\"}}\n        >\n          <UIFightBar/>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    fightA: state.player.fightA,\n    animal: state.settings.animal,\n  };\n})(UIFightInfo);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Card, Col, Timeline} from 'antd';\nimport _ from \"lodash\";\n\nclass UIFightLogInfo extends React.Component {\n\n  fightColor(id) {\n    switch (id) {\n      case 0:\n        return \"green\";\n      case 1:\n        return \"blue\";\n      case 2:\n        return \"red\";\n      default:\n        break;\n    }\n    return \"blue\";\n  }\n\n  fightList() {\n    const {fightL} = this.props;\n    return _.chain(fightL).map((a, idx) =>\n      <Timeline.Item key={`fight_${idx}`} color={this.fightColor(a[0])}>\n        {a[1]}\n      </Timeline.Item>\n    ).value();\n  }\n\n  render() {\n    return (\n      <Col span={8}>\n        <Card\n          title={`战斗情况`}\n          style={{height: \"300px\"}}\n        >\n          <Timeline>\n            {this.fightList()}\n          </Timeline>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    fightL: state.player.fightL,\n  };\n})(UIFightLogInfo);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Layout, Row} from 'antd';\nimport UIPlayerInfo from \"./UIPlayerInfo\";\nimport UIMapInfo from \"./UIMapInfo\";\nimport UIGoodInfo from \"./UIGoodInfo\";\nimport UIFightInfo from \"./UIFightInfo\";\nimport UIFightLogInfo from \"./UIFightLogInfo\";\n\nconst {Content} = Layout;\n\nclass NormalScene extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Content style={{padding: \"10px\"}}>\n            <Row>\n              <UIPlayerInfo/>\n              {\n                this.props.fightN ? <UIFightLogInfo/> : <UIMapInfo/>\n              }\n              {\n                this.props.fightN ? <UIFightInfo/> : <UIGoodInfo/>\n              }\n            </Row>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    fightN: state.player.fightN,\n  };\n})(NormalScene);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {convertSpeechArrayToTextLineArray} from \"../text/convert-speech\";\nimport IntroTextLine from \"../intro/IntroTextLine\";\nimport {setPlayerValue} from \"../../store/player-actions\";\nimport IntroOverlay from \"../intro/IntroOverlay\";\nimport {Col, Row} from \"antd\";\nimport IntroLaptop from \"../intro/IntroLaptop\";\nimport {setGlobalValue} from \"../../store/global-actions\";\nimport {setSettingsValue} from \"../../store/settings-actions\";\n\nclass DefaultScene extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOverlayOpaque: true,\n      isLaptopLowered: false,\n      step: \"fade-in\",\n    };\n    setGlobalValue({\n      scene: \"default\"\n    });\n  }\n\n  componentDidMount() {\n    //First Step: fade out the overlay\n    setTimeout(() => {\n      this.setState({isOverlayOpaque: false})\n    }, 200)\n  }\n\n  handleOverlayDone() {\n    setTimeout(() => {\n      //Start the intro text\n      this.setState({step: \"intro\"})\n    }, 200)\n  }\n\n  over() {\n    const settings = this.props.settings;\n    const def = {\n      name: \"匿名玩家\",   //名字\n      level: 1,           //等级\n      exping: 0,          //当前经验\n      exped: 0,           //当前经验上限\n      money: 0,           //金钱\n      blood: 100,         //生命值上限\n      useblood: 100,      //生命值\n      att: 6,             //攻击\n      def: 6,             //防御\n      fightN: false,      //是否战斗状态\n      fightA: 0,          //怪物战斗编号\n      fightL: [],         //战斗情况\n      maping: 0,          //当前地图,\n      winN: [],           //杀死怪物次数\n      states: {},         //状态\n      role: [],           //任务\n      roles: [],          //任务进度\n      roleData: [],       //任务数据\n    };\n    def.useblood = def.blood;\n    def.exped = settings.exped[def.level];\n    def.role = settings.role.map(() => false);\n    def.roles = settings.role.map(() => 0);\n    def.roleData = settings.role.map(() => {\n      return {type: -1}\n    });\n    setPlayerValue(def);\n    setSettingsValue({\n      ADD_blood: 1\n    });\n    setGlobalValue({\n      scene: \"intro\"\n    });\n  }\n\n  renderContent() {\n    if (this.state.step === \"intro\") {\n      const introText = convertSpeechArrayToTextLineArray(\n        [\n          \"[CRAWL]游戏结束！\",\n          \"[CRAWL]Game over.\",\n          \"[CRAWL]......\",\n        ],\n        {defaultTextColor: \"#fff\"}\n      );\n\n      return (\n        <IntroTextLine\n          key=\"4\"\n          text={introText}\n          onTextComplete={this.over.bind(this)}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  getDesktopWrap() {\n    if (this.props.viewportMode === \"portrait\") {\n      return {};\n    }\n    return {\n      width: \"100%\",\n      margin: \"0 auto\"\n    };\n  }\n\n  render() {\n    const style = {\n      fontSize: this.props.viewportMode === \"portrait\" ? \"0.8em\" : \"0.5em\", //mobile, desktop\n    };\n    const contentStyle = {\n      ...this.getDesktopWrap()\n    };\n\n    return (\n      <div>\n        <IntroOverlay\n          isOpaque={this.state.isOverlayOpaque}\n          onTransitionComplete={this.handleOverlayDone.bind(this)}\n        />\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col style={style}>\n            <div style={contentStyle}>\n              {\n                !this.state.isLaptopLowered ? (\n                  <IntroLaptop>\n                    {this.renderContent()}\n                  </IntroLaptop>\n                ) : null\n              }\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    player: state.player,\n    settings: state.settings,\n    viewportMode: state.global.viewportMode,\n  };\n})(DefaultScene);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Scene from \"./scene/Scene\";\nimport IntroScene from \"./scene/intro/IntroScene\";\nimport NormalScene from \"./scene/normal/NormalScene\";\nimport DefaultScene from \"./scene/default/DefaultScene\";\n\nclass App extends Component {\n\n  render() {\n    if (this.props.scene === \"intro\") {\n      return (\n        <Scene>\n          <IntroScene/>\n        </Scene>\n      );\n    }\n\n    if (this.props.scene === \"normal\" && this.props.useblood > 0)\n      return (\n        <Scene>\n          <NormalScene/>\n        </Scene>\n      );\n\n    return (\n      <Scene>\n        <DefaultScene/>\n      </Scene>\n    );\n  }\n}\n\nexport default connect((state, props) => {\n  return {\n    useblood: state.player.useblood,\n    scene: state.global.scene,\n  };\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport {Layout} from \"antd\";\nconst {Content} = Layout;\n\n/* Absolute root of the app */\nclass RootComponent extends React.Component {\n  render() {\n    return (\n      <Provider store={this.props.store}>\n        <Layout>\n          <Content>\n            <App/>\n          </Content>\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(\n  <RootComponent store={store}/>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}